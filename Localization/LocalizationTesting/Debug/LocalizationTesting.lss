
LocalizationTesting.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00001ef0  00001f84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ef0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  00800114  00800114  00001f98  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001f98  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ff8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000232d  00000000  00000000  00002238  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008bc  00000000  00000000  00004565  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c68  00000000  00000000  00004e21  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000664  00000000  00000000  00005a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008d7  00000000  00000000  000060f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002d9c  00000000  00000000  000069c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  00009763  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__ctors_end>
       4:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
       8:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
       c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      10:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      14:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      18:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      1c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      20:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      24:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      28:	0c 94 ac 07 	jmp	0xf58	; 0xf58 <__vector_10>
      2c:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__vector_11>
      30:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      34:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      38:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      3c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      40:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      44:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      48:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      4c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      50:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      54:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      58:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      5c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      60:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      64:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      68:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      6c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      70:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      74:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      78:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      7c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      80:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      84:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      88:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      8c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      90:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      94:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      98:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      9c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      a0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      a4:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      a8:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 05       	cpc	r19, r15
      da:	a8 4c       	sbci	r26, 0xC8	; 200
      dc:	cd b2       	in	r12, 0x1d	; 29
      de:	d4 4e       	sbci	r29, 0xE4	; 228
      e0:	b9 38       	cpi	r27, 0x89	; 137
      e2:	36 a9       	ldd	r19, Z+54	; 0x36
      e4:	02 0c       	add	r0, r2
      e6:	50 b9       	out	0x00, r21	; 0
      e8:	91 86       	std	Z+9, r9	; 0x09
      ea:	88 08       	sbc	r8, r8
      ec:	3c a6       	std	Y+44, r3	; 0x2c
      ee:	aa aa       	std	Y+50, r10	; 0x32
      f0:	2a be       	out	0x3a, r2	; 58
      f2:	00 00       	nop
      f4:	00 80       	ld	r0, Z
      f6:	3f 00       	.word	0x003f	; ????

000000f8 <__trampolines_end>:
      f8:	0a 00       	.word	0x000a	; ????

000000fa <__c.2021>:
      fa:	20 00                                                .

000000fc <__c.2019>:
      fc:	20 00                                                .

000000fe <descriptor_list>:
      fe:	00 01 00 00 95 01 12 00 02 00 00 52 01 43 00 03     ...........R.C..
     10e:	00 00 4e 01 04 01 03 09 04 3a 01 12 02 03 09 04     ..N......:......
     11e:	32 01 06 03 03 09 04 28 01 08                       2......(..

00000128 <string3>:
     128:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

00000132 <string2>:
     132:	06 03 4d 00 32 00 00 00                             ..M.2...

0000013a <string1>:
     13a:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     14a:	65 00 00 00                                         e...

0000014e <string0>:
     14e:	04 03 09 04                                         ....

00000152 <config1_descriptor>:
     152:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     162:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     172:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     182:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     192:	40 00 00                                            @..

00000195 <device_descriptor>:
     195:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     1a5:	03 01                                               ..

000001a7 <endpoint_config_table>:
     1a7:	00 01 c1 12 01 80 36 01 81 36 00                    ......6..6.

000001b2 <__ctors_end>:
     1b2:	11 24       	eor	r1, r1
     1b4:	1f be       	out	0x3f, r1	; 63
     1b6:	cf ef       	ldi	r28, 0xFF	; 255
     1b8:	da e0       	ldi	r29, 0x0A	; 10
     1ba:	de bf       	out	0x3e, r29	; 62
     1bc:	cd bf       	out	0x3d, r28	; 61

000001be <__do_copy_data>:
     1be:	11 e0       	ldi	r17, 0x01	; 1
     1c0:	a0 e0       	ldi	r26, 0x00	; 0
     1c2:	b1 e0       	ldi	r27, 0x01	; 1
     1c4:	e0 ef       	ldi	r30, 0xF0	; 240
     1c6:	fe e1       	ldi	r31, 0x1E	; 30
     1c8:	02 c0       	rjmp	.+4      	; 0x1ce <__do_copy_data+0x10>
     1ca:	05 90       	lpm	r0, Z+
     1cc:	0d 92       	st	X+, r0
     1ce:	a4 31       	cpi	r26, 0x14	; 20
     1d0:	b1 07       	cpc	r27, r17
     1d2:	d9 f7       	brne	.-10     	; 0x1ca <__do_copy_data+0xc>

000001d4 <__do_clear_bss>:
     1d4:	21 e0       	ldi	r18, 0x01	; 1
     1d6:	a4 e1       	ldi	r26, 0x14	; 20
     1d8:	b1 e0       	ldi	r27, 0x01	; 1
     1da:	01 c0       	rjmp	.+2      	; 0x1de <.do_clear_bss_start>

000001dc <.do_clear_bss_loop>:
     1dc:	1d 92       	st	X+, r1

000001de <.do_clear_bss_start>:
     1de:	a0 34       	cpi	r26, 0x40	; 64
     1e0:	b2 07       	cpc	r27, r18
     1e2:	e1 f7       	brne	.-8      	; 0x1dc <.do_clear_bss_loop>
     1e4:	0e 94 45 06 	call	0xc8a	; 0xc8a <main>
     1e8:	0c 94 76 0f 	jmp	0x1eec	; 0x1eec <_exit>

000001ec <__bad_interrupt>:
     1ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f0 <distIndex>:

int* distIndex(int indexVal)
{
	static int pointsUsed[2] = {0, 0};
		
	switch (indexVal)
     1f0:	82 30       	cpi	r24, 0x02	; 2
     1f2:	91 05       	cpc	r25, r1
     1f4:	f9 f0       	breq	.+62     	; 0x234 <distIndex+0x44>
     1f6:	2c f4       	brge	.+10     	; 0x202 <distIndex+0x12>
     1f8:	00 97       	sbiw	r24, 0x00	; 0
     1fa:	51 f0       	breq	.+20     	; 0x210 <distIndex+0x20>
     1fc:	01 97       	sbiw	r24, 0x01	; 1
     1fe:	89 f0       	breq	.+34     	; 0x222 <distIndex+0x32>
     200:	42 c0       	rjmp	.+132    	; 0x286 <distIndex+0x96>
     202:	84 30       	cpi	r24, 0x04	; 4
     204:	91 05       	cpc	r25, r1
     206:	51 f1       	breq	.+84     	; 0x25c <distIndex+0x6c>
     208:	f4 f0       	brlt	.+60     	; 0x246 <distIndex+0x56>
     20a:	05 97       	sbiw	r24, 0x05	; 5
     20c:	91 f1       	breq	.+100    	; 0x272 <distIndex+0x82>
     20e:	3b c0       	rjmp	.+118    	; 0x286 <distIndex+0x96>
	{
		case 0 : 
			pointsUsed[0] = 0;
     210:	e4 e1       	ldi	r30, 0x14	; 20
     212:	f1 e0       	ldi	r31, 0x01	; 1
     214:	11 82       	std	Z+1, r1	; 0x01
     216:	10 82       	st	Z, r1
			pointsUsed[1] = 1;
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	93 83       	std	Z+3, r25	; 0x03
     21e:	82 83       	std	Z+2, r24	; 0x02
			break;
     220:	32 c0       	rjmp	.+100    	; 0x286 <distIndex+0x96>
			
		case 1 : 
			pointsUsed[0] = 0;
     222:	e4 e1       	ldi	r30, 0x14	; 20
     224:	f1 e0       	ldi	r31, 0x01	; 1
     226:	11 82       	std	Z+1, r1	; 0x01
     228:	10 82       	st	Z, r1
			pointsUsed[1] = 2;
     22a:	82 e0       	ldi	r24, 0x02	; 2
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	93 83       	std	Z+3, r25	; 0x03
     230:	82 83       	std	Z+2, r24	; 0x02
			break;
     232:	29 c0       	rjmp	.+82     	; 0x286 <distIndex+0x96>
			
		case 2 : 
			pointsUsed[0] = 0;
     234:	e4 e1       	ldi	r30, 0x14	; 20
     236:	f1 e0       	ldi	r31, 0x01	; 1
     238:	11 82       	std	Z+1, r1	; 0x01
     23a:	10 82       	st	Z, r1
			pointsUsed[1] = 3;
     23c:	83 e0       	ldi	r24, 0x03	; 3
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	93 83       	std	Z+3, r25	; 0x03
     242:	82 83       	std	Z+2, r24	; 0x02
			break;
     244:	20 c0       	rjmp	.+64     	; 0x286 <distIndex+0x96>
			
		case 3 : 
			pointsUsed[0] = 1;
     246:	e4 e1       	ldi	r30, 0x14	; 20
     248:	f1 e0       	ldi	r31, 0x01	; 1
     24a:	81 e0       	ldi	r24, 0x01	; 1
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	91 83       	std	Z+1, r25	; 0x01
     250:	80 83       	st	Z, r24
			pointsUsed[1] = 2;
     252:	82 e0       	ldi	r24, 0x02	; 2
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	93 83       	std	Z+3, r25	; 0x03
     258:	82 83       	std	Z+2, r24	; 0x02
			break;
     25a:	15 c0       	rjmp	.+42     	; 0x286 <distIndex+0x96>
			
		case 4 : 
			pointsUsed[0] = 1;
     25c:	e4 e1       	ldi	r30, 0x14	; 20
     25e:	f1 e0       	ldi	r31, 0x01	; 1
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	91 83       	std	Z+1, r25	; 0x01
     266:	80 83       	st	Z, r24
			pointsUsed[1] = 3;
     268:	83 e0       	ldi	r24, 0x03	; 3
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	93 83       	std	Z+3, r25	; 0x03
     26e:	82 83       	std	Z+2, r24	; 0x02
			break;
     270:	0a c0       	rjmp	.+20     	; 0x286 <distIndex+0x96>
			
		case 5 :
			pointsUsed[0] = 2;
     272:	e4 e1       	ldi	r30, 0x14	; 20
     274:	f1 e0       	ldi	r31, 0x01	; 1
     276:	82 e0       	ldi	r24, 0x02	; 2
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	91 83       	std	Z+1, r25	; 0x01
     27c:	80 83       	st	Z, r24
			pointsUsed[1] = 3;
     27e:	83 e0       	ldi	r24, 0x03	; 3
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	93 83       	std	Z+3, r25	; 0x03
     284:	82 83       	std	Z+2, r24	; 0x02
			break;
	}
	
	return pointsUsed;
}
     286:	84 e1       	ldi	r24, 0x14	; 20
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	08 95       	ret

0000028c <orientationCalculationFour>:


void orientationCalculationFour(int pointsLong[2], float distVect[], int* top, int* bottom)
{
     28c:	2f 92       	push	r2
     28e:	3f 92       	push	r3
     290:	4f 92       	push	r4
     292:	5f 92       	push	r5
     294:	6f 92       	push	r6
     296:	7f 92       	push	r7
     298:	8f 92       	push	r8
     29a:	9f 92       	push	r9
     29c:	af 92       	push	r10
     29e:	bf 92       	push	r11
     2a0:	cf 92       	push	r12
     2a2:	df 92       	push	r13
     2a4:	ef 92       	push	r14
     2a6:	ff 92       	push	r15
     2a8:	0f 93       	push	r16
     2aa:	1f 93       	push	r17
     2ac:	cf 93       	push	r28
     2ae:	df 93       	push	r29
     2b0:	00 d0       	rcall	.+0      	; 0x2b2 <orientationCalculationFour+0x26>
     2b2:	00 d0       	rcall	.+0      	; 0x2b4 <orientationCalculationFour+0x28>
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62
     2b8:	5c 01       	movw	r10, r24
     2ba:	4a 01       	movw	r8, r20
     2bc:	3a 83       	std	Y+2, r19	; 0x02
     2be:	29 83       	std	Y+1, r18	; 0x01
	//Find index of shortest length
	int indexMin = 0;
	float minVal = distVect[0];
     2c0:	06 2f       	mov	r16, r22
     2c2:	17 2f       	mov	r17, r23
     2c4:	f8 01       	movw	r30, r16
     2c6:	41 90       	ld	r4, Z+
     2c8:	51 90       	ld	r5, Z+
     2ca:	61 90       	ld	r6, Z+
     2cc:	71 90       	ld	r7, Z+
     2ce:	8f 01       	movw	r16, r30
	for (int i = 0; i < 6; i++){
     2d0:	1c 82       	std	Y+4, r1	; 0x04
     2d2:	1b 82       	std	Y+3, r1	; 0x03


void orientationCalculationFour(int pointsLong[2], float distVect[], int* top, int* bottom)
{
	//Find index of shortest length
	int indexMin = 0;
     2d4:	21 2c       	mov	r2, r1
     2d6:	31 2c       	mov	r3, r1
     2d8:	12 c0       	rjmp	.+36     	; 0x2fe <orientationCalculationFour+0x72>
	float minVal = distVect[0];
	for (int i = 0; i < 6; i++){
		if (distVect[i] < minVal) {
     2da:	f8 01       	movw	r30, r16
     2dc:	c1 90       	ld	r12, Z+
     2de:	d1 90       	ld	r13, Z+
     2e0:	e1 90       	ld	r14, Z+
     2e2:	f1 90       	ld	r15, Z+
     2e4:	8f 01       	movw	r16, r30
     2e6:	a7 01       	movw	r20, r14
     2e8:	96 01       	movw	r18, r12
     2ea:	c3 01       	movw	r24, r6
     2ec:	b2 01       	movw	r22, r4
     2ee:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <__gesf2>
     2f2:	18 16       	cp	r1, r24
     2f4:	24 f4       	brge	.+8      	; 0x2fe <orientationCalculationFour+0x72>
     2f6:	26 01       	movw	r4, r12
     2f8:	37 01       	movw	r6, r14
void orientationCalculationFour(int pointsLong[2], float distVect[], int* top, int* bottom)
{
	//Find index of shortest length
	int indexMin = 0;
	float minVal = distVect[0];
	for (int i = 0; i < 6; i++){
     2fa:	2b 80       	ldd	r2, Y+3	; 0x03
     2fc:	3c 80       	ldd	r3, Y+4	; 0x04
     2fe:	8b 81       	ldd	r24, Y+3	; 0x03
     300:	9c 81       	ldd	r25, Y+4	; 0x04
     302:	01 96       	adiw	r24, 0x01	; 1
     304:	9c 83       	std	Y+4, r25	; 0x04
     306:	8b 83       	std	Y+3, r24	; 0x03
     308:	06 97       	sbiw	r24, 0x06	; 6
     30a:	39 f7       	brne	.-50     	; 0x2da <orientationCalculationFour+0x4e>
		}
	}
	
	//Find points used by shortest length	
	int* pointsShortRef;
	pointsShortRef = distIndex(indexMin);	
     30c:	82 2d       	mov	r24, r2
     30e:	93 2d       	mov	r25, r3
     310:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <distIndex>
	int pointsShort[2] = {pointsShortRef[0], pointsShortRef[1]};	
     314:	fc 01       	movw	r30, r24
     316:	20 81       	ld	r18, Z
     318:	31 81       	ldd	r19, Z+1	; 0x01
     31a:	42 81       	ldd	r20, Z+2	; 0x02
     31c:	53 81       	ldd	r21, Z+3	; 0x03
	if (pointsShort[0] == pointsLong[0]){
     31e:	f5 01       	movw	r30, r10
     320:	80 81       	ld	r24, Z
     322:	91 81       	ldd	r25, Z+1	; 0x01
     324:	28 17       	cp	r18, r24
     326:	39 07       	cpc	r19, r25
     328:	59 f4       	brne	.+22     	; 0x340 <orientationCalculationFour+0xb4>
		*top = pointsLong[0];
     32a:	f4 01       	movw	r30, r8
     32c:	31 83       	std	Z+1, r19	; 0x01
     32e:	20 83       	st	Z, r18
		*bottom = pointsLong[1];
     330:	f5 01       	movw	r30, r10
     332:	82 81       	ldd	r24, Z+2	; 0x02
     334:	93 81       	ldd	r25, Z+3	; 0x03
     336:	e9 81       	ldd	r30, Y+1	; 0x01
     338:	fa 81       	ldd	r31, Y+2	; 0x02
     33a:	91 83       	std	Z+1, r25	; 0x01
     33c:	80 83       	st	Z, r24
     33e:	3c c0       	rjmp	.+120    	; 0x3b8 <orientationCalculationFour+0x12c>
	} else {
		if (pointsShort[0] == pointsLong[1]){
     340:	f5 01       	movw	r30, r10
     342:	62 81       	ldd	r22, Z+2	; 0x02
     344:	73 81       	ldd	r23, Z+3	; 0x03
     346:	26 17       	cp	r18, r22
     348:	37 07       	cpc	r19, r23
     34a:	59 f4       	brne	.+22     	; 0x362 <orientationCalculationFour+0xd6>
			*top = pointsLong[1];
     34c:	f4 01       	movw	r30, r8
     34e:	31 83       	std	Z+1, r19	; 0x01
     350:	20 83       	st	Z, r18
			*bottom = pointsLong[0];
     352:	f5 01       	movw	r30, r10
     354:	80 81       	ld	r24, Z
     356:	91 81       	ldd	r25, Z+1	; 0x01
     358:	e9 81       	ldd	r30, Y+1	; 0x01
     35a:	fa 81       	ldd	r31, Y+2	; 0x02
     35c:	91 83       	std	Z+1, r25	; 0x01
     35e:	80 83       	st	Z, r24
     360:	2b c0       	rjmp	.+86     	; 0x3b8 <orientationCalculationFour+0x12c>
		} else {
			if (pointsShort[1] == pointsLong[0]) {
     362:	48 17       	cp	r20, r24
     364:	59 07       	cpc	r21, r25
     366:	59 f4       	brne	.+22     	; 0x37e <orientationCalculationFour+0xf2>
				*top = pointsLong[0];
     368:	f4 01       	movw	r30, r8
     36a:	51 83       	std	Z+1, r21	; 0x01
     36c:	40 83       	st	Z, r20
				*bottom = pointsLong[1];
     36e:	f5 01       	movw	r30, r10
     370:	82 81       	ldd	r24, Z+2	; 0x02
     372:	93 81       	ldd	r25, Z+3	; 0x03
     374:	e9 81       	ldd	r30, Y+1	; 0x01
     376:	fa 81       	ldd	r31, Y+2	; 0x02
     378:	91 83       	std	Z+1, r25	; 0x01
     37a:	80 83       	st	Z, r24
     37c:	1d c0       	rjmp	.+58     	; 0x3b8 <orientationCalculationFour+0x12c>
			} else {
				if (pointsShort[1] == pointsLong[1])
     37e:	46 17       	cp	r20, r22
     380:	57 07       	cpc	r21, r23
     382:	59 f4       	brne	.+22     	; 0x39a <orientationCalculationFour+0x10e>
				{
					*top = pointsLong[1];
     384:	f4 01       	movw	r30, r8
     386:	51 83       	std	Z+1, r21	; 0x01
     388:	40 83       	st	Z, r20
					*bottom = pointsLong[0];
     38a:	f5 01       	movw	r30, r10
     38c:	80 81       	ld	r24, Z
     38e:	91 81       	ldd	r25, Z+1	; 0x01
     390:	e9 81       	ldd	r30, Y+1	; 0x01
     392:	fa 81       	ldd	r31, Y+2	; 0x02
     394:	91 83       	std	Z+1, r25	; 0x01
     396:	80 83       	st	Z, r24
     398:	0f c0       	rjmp	.+30     	; 0x3b8 <orientationCalculationFour+0x12c>
				} else {
						m_green(OFF);
     39a:	6a 9a       	sbi	0x0d, 2	; 13
     39c:	72 9a       	sbi	0x0e, 2	; 14
						*top = pointsLong[1];
     39e:	f5 01       	movw	r30, r10
     3a0:	82 81       	ldd	r24, Z+2	; 0x02
     3a2:	93 81       	ldd	r25, Z+3	; 0x03
     3a4:	f4 01       	movw	r30, r8
     3a6:	91 83       	std	Z+1, r25	; 0x01
     3a8:	80 83       	st	Z, r24
						*bottom = pointsLong[0];
     3aa:	f5 01       	movw	r30, r10
     3ac:	80 81       	ld	r24, Z
     3ae:	91 81       	ldd	r25, Z+1	; 0x01
     3b0:	e9 81       	ldd	r30, Y+1	; 0x01
     3b2:	fa 81       	ldd	r31, Y+2	; 0x02
     3b4:	91 83       	std	Z+1, r25	; 0x01
     3b6:	80 83       	st	Z, r24
				}
			}
		}
	}
     3b8:	0f 90       	pop	r0
     3ba:	0f 90       	pop	r0
     3bc:	0f 90       	pop	r0
     3be:	0f 90       	pop	r0
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	1f 91       	pop	r17
     3c6:	0f 91       	pop	r16
     3c8:	ff 90       	pop	r15
     3ca:	ef 90       	pop	r14
     3cc:	df 90       	pop	r13
     3ce:	cf 90       	pop	r12
     3d0:	bf 90       	pop	r11
     3d2:	af 90       	pop	r10
     3d4:	9f 90       	pop	r9
     3d6:	8f 90       	pop	r8
     3d8:	7f 90       	pop	r7
     3da:	6f 90       	pop	r6
     3dc:	5f 90       	pop	r5
     3de:	4f 90       	pop	r4
     3e0:	3f 90       	pop	r3
     3e2:	2f 90       	pop	r2
     3e4:	08 95       	ret

000003e6 <fourPointCalc>:
	
}


float* fourPointCalc(int pvect[4][2])
{
     3e6:	2f 92       	push	r2
     3e8:	3f 92       	push	r3
     3ea:	4f 92       	push	r4
     3ec:	5f 92       	push	r5
     3ee:	6f 92       	push	r6
     3f0:	7f 92       	push	r7
     3f2:	8f 92       	push	r8
     3f4:	9f 92       	push	r9
     3f6:	af 92       	push	r10
     3f8:	bf 92       	push	r11
     3fa:	cf 92       	push	r12
     3fc:	df 92       	push	r13
     3fe:	ef 92       	push	r14
     400:	ff 92       	push	r15
     402:	0f 93       	push	r16
     404:	1f 93       	push	r17
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	cd b7       	in	r28, 0x3d	; 61
     40c:	de b7       	in	r29, 0x3e	; 62
     40e:	c2 54       	subi	r28, 0x42	; 66
     410:	d1 09       	sbc	r29, r1
     412:	0f b6       	in	r0, 0x3f	; 63
     414:	f8 94       	cli
     416:	de bf       	out	0x3e, r29	; 62
     418:	0f be       	out	0x3f, r0	; 63
     41a:	cd bf       	out	0x3d, r28	; 61
     41c:	2c 01       	movw	r4, r24
	static float centerFour[3];
	
	float dist01 = sqrt((float)(pvect[1][0]-pvect[0][0])*(pvect[1][0]-pvect[0][0]) + (pvect[1][1]-pvect[0][1])*(pvect[1][1]-pvect[0][1]));
     41e:	fc 01       	movw	r30, r24
     420:	04 80       	ldd	r0, Z+4	; 0x04
     422:	f5 81       	ldd	r31, Z+5	; 0x05
     424:	e0 2d       	mov	r30, r0
     426:	fa a3       	std	Y+34, r31	; 0x22
     428:	e9 a3       	std	Y+33, r30	; 0x21
     42a:	fc 01       	movw	r30, r24
     42c:	00 81       	ld	r16, Z
     42e:	11 81       	ldd	r17, Z+1	; 0x01
     430:	69 a1       	ldd	r22, Y+33	; 0x21
     432:	7a a1       	ldd	r23, Y+34	; 0x22
     434:	60 1b       	sub	r22, r16
     436:	71 0b       	sbc	r23, r17
     438:	07 2e       	mov	r0, r23
     43a:	00 0c       	add	r0, r0
     43c:	88 0b       	sbc	r24, r24
     43e:	99 0b       	sbc	r25, r25
     440:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     444:	6b 01       	movw	r12, r22
     446:	7c 01       	movw	r14, r24
     448:	f2 01       	movw	r30, r4
     44a:	06 80       	ldd	r0, Z+6	; 0x06
     44c:	f7 81       	ldd	r31, Z+7	; 0x07
     44e:	e0 2d       	mov	r30, r0
     450:	fe a3       	std	Y+38, r31	; 0x26
     452:	ed a3       	std	Y+37, r30	; 0x25
     454:	f2 01       	movw	r30, r4
     456:	22 80       	ldd	r2, Z+2	; 0x02
     458:	33 80       	ldd	r3, Z+3	; 0x03
     45a:	ad a0       	ldd	r10, Y+37	; 0x25
     45c:	be a0       	ldd	r11, Y+38	; 0x26
     45e:	a2 18       	sub	r10, r2
     460:	b3 08       	sbc	r11, r3
     462:	9b 01       	movw	r18, r22
     464:	ac 01       	movw	r20, r24
     466:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     46a:	69 a7       	std	Y+41, r22	; 0x29
     46c:	7a a7       	std	Y+42, r23	; 0x2a
     46e:	8b a7       	std	Y+43, r24	; 0x2b
     470:	9c a7       	std	Y+44, r25	; 0x2c
     472:	aa 9c       	mul	r10, r10
     474:	40 01       	movw	r8, r0
     476:	ab 9c       	mul	r10, r11
     478:	90 0c       	add	r9, r0
     47a:	90 0c       	add	r9, r0
     47c:	11 24       	eor	r1, r1
     47e:	09 2c       	mov	r0, r9
     480:	00 0c       	add	r0, r0
     482:	aa 08       	sbc	r10, r10
     484:	bb 08       	sbc	r11, r11
     486:	a7 01       	movw	r20, r14
     488:	96 01       	movw	r18, r12
     48a:	c7 01       	movw	r24, r14
     48c:	b6 01       	movw	r22, r12
     48e:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     492:	6b 01       	movw	r12, r22
     494:	7c 01       	movw	r14, r24
     496:	c5 01       	movw	r24, r10
     498:	b4 01       	movw	r22, r8
     49a:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     49e:	9b 01       	movw	r18, r22
     4a0:	ac 01       	movw	r20, r24
     4a2:	c7 01       	movw	r24, r14
     4a4:	b6 01       	movw	r22, r12
     4a6:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     4aa:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <sqrt>
     4ae:	6b af       	std	Y+59, r22	; 0x3b
     4b0:	7c af       	std	Y+60, r23	; 0x3c
     4b2:	8d af       	std	Y+61, r24	; 0x3d
     4b4:	9e af       	std	Y+62, r25	; 0x3e
	float dist02 = sqrt((float)(pvect[2][0]-pvect[0][0])*(pvect[2][0]-pvect[0][0]) + (pvect[2][1]-pvect[0][1])*(pvect[2][1]-pvect[0][1]));
     4b6:	f2 01       	movw	r30, r4
     4b8:	00 84       	ldd	r0, Z+8	; 0x08
     4ba:	f1 85       	ldd	r31, Z+9	; 0x09
     4bc:	e0 2d       	mov	r30, r0
     4be:	fa a7       	std	Y+42, r31	; 0x2a
     4c0:	e9 a7       	std	Y+41, r30	; 0x29
     4c2:	bf 01       	movw	r22, r30
     4c4:	60 1b       	sub	r22, r16
     4c6:	71 0b       	sbc	r23, r17
     4c8:	07 2e       	mov	r0, r23
     4ca:	00 0c       	add	r0, r0
     4cc:	88 0b       	sbc	r24, r24
     4ce:	99 0b       	sbc	r25, r25
     4d0:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     4d4:	6b 01       	movw	r12, r22
     4d6:	7c 01       	movw	r14, r24
     4d8:	f2 01       	movw	r30, r4
     4da:	62 84       	ldd	r6, Z+10	; 0x0a
     4dc:	73 84       	ldd	r7, Z+11	; 0x0b
     4de:	53 01       	movw	r10, r6
     4e0:	a2 18       	sub	r10, r2
     4e2:	b3 08       	sbc	r11, r3
     4e4:	9b 01       	movw	r18, r22
     4e6:	ac 01       	movw	r20, r24
     4e8:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     4ec:	6d a7       	std	Y+45, r22	; 0x2d
     4ee:	7e a7       	std	Y+46, r23	; 0x2e
     4f0:	8f a7       	std	Y+47, r24	; 0x2f
     4f2:	98 ab       	std	Y+48, r25	; 0x30
     4f4:	aa 9c       	mul	r10, r10
     4f6:	40 01       	movw	r8, r0
     4f8:	ab 9c       	mul	r10, r11
     4fa:	90 0c       	add	r9, r0
     4fc:	90 0c       	add	r9, r0
     4fe:	11 24       	eor	r1, r1
     500:	09 2c       	mov	r0, r9
     502:	00 0c       	add	r0, r0
     504:	aa 08       	sbc	r10, r10
     506:	bb 08       	sbc	r11, r11
     508:	a7 01       	movw	r20, r14
     50a:	96 01       	movw	r18, r12
     50c:	c7 01       	movw	r24, r14
     50e:	b6 01       	movw	r22, r12
     510:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     514:	6b 01       	movw	r12, r22
     516:	7c 01       	movw	r14, r24
     518:	c5 01       	movw	r24, r10
     51a:	b4 01       	movw	r22, r8
     51c:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     520:	9b 01       	movw	r18, r22
     522:	ac 01       	movw	r20, r24
     524:	c7 01       	movw	r24, r14
     526:	b6 01       	movw	r22, r12
     528:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     52c:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <sqrt>
     530:	23 96       	adiw	r28, 0x03	; 3
     532:	6c af       	std	Y+60, r22	; 0x3c
     534:	7d af       	std	Y+61, r23	; 0x3d
     536:	8e af       	std	Y+62, r24	; 0x3e
     538:	9f af       	std	Y+63, r25	; 0x3f
     53a:	23 97       	sbiw	r28, 0x03	; 3
	float dist03 = sqrt((float)(pvect[3][0]-pvect[0][0])*(pvect[3][0]-pvect[0][0]) + (pvect[3][1]-pvect[0][1])*(pvect[3][1]-pvect[0][1]));
     53c:	f2 01       	movw	r30, r4
     53e:	04 84       	ldd	r0, Z+12	; 0x0c
     540:	f5 85       	ldd	r31, Z+13	; 0x0d
     542:	e0 2d       	mov	r30, r0
     544:	fe a7       	std	Y+46, r31	; 0x2e
     546:	ed a7       	std	Y+45, r30	; 0x2d
     548:	bf 01       	movw	r22, r30
     54a:	60 1b       	sub	r22, r16
     54c:	71 0b       	sbc	r23, r17
     54e:	07 2e       	mov	r0, r23
     550:	00 0c       	add	r0, r0
     552:	88 0b       	sbc	r24, r24
     554:	99 0b       	sbc	r25, r25
     556:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     55a:	4b 01       	movw	r8, r22
     55c:	5c 01       	movw	r10, r24
     55e:	f2 01       	movw	r30, r4
     560:	06 84       	ldd	r0, Z+14	; 0x0e
     562:	f7 85       	ldd	r31, Z+15	; 0x0f
     564:	e0 2d       	mov	r30, r0
     566:	fa ab       	std	Y+50, r31	; 0x32
     568:	e9 ab       	std	Y+49, r30	; 0x31
     56a:	8f 01       	movw	r16, r30
     56c:	02 19       	sub	r16, r2
     56e:	13 09       	sbc	r17, r3
     570:	9b 01       	movw	r18, r22
     572:	ac 01       	movw	r20, r24
     574:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     578:	6b ab       	std	Y+51, r22	; 0x33
     57a:	7c ab       	std	Y+52, r23	; 0x34
     57c:	8d ab       	std	Y+53, r24	; 0x35
     57e:	9e ab       	std	Y+54, r25	; 0x36
     580:	00 9f       	mul	r16, r16
     582:	60 01       	movw	r12, r0
     584:	01 9f       	mul	r16, r17
     586:	d0 0c       	add	r13, r0
     588:	d0 0c       	add	r13, r0
     58a:	11 24       	eor	r1, r1
     58c:	0d 2c       	mov	r0, r13
     58e:	00 0c       	add	r0, r0
     590:	ee 08       	sbc	r14, r14
     592:	ff 08       	sbc	r15, r15
     594:	a5 01       	movw	r20, r10
     596:	94 01       	movw	r18, r8
     598:	c5 01       	movw	r24, r10
     59a:	b4 01       	movw	r22, r8
     59c:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     5a0:	4b 01       	movw	r8, r22
     5a2:	5c 01       	movw	r10, r24
     5a4:	c7 01       	movw	r24, r14
     5a6:	b6 01       	movw	r22, r12
     5a8:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     5ac:	9b 01       	movw	r18, r22
     5ae:	ac 01       	movw	r20, r24
     5b0:	c5 01       	movw	r24, r10
     5b2:	b4 01       	movw	r22, r8
     5b4:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     5b8:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <sqrt>
     5bc:	6b ab       	std	Y+51, r22	; 0x33
     5be:	7c ab       	std	Y+52, r23	; 0x34
     5c0:	8d ab       	std	Y+53, r24	; 0x35
     5c2:	9e ab       	std	Y+54, r25	; 0x36
	float dist12 = sqrt((float)(pvect[2][0]-pvect[1][0])*(pvect[2][0]-pvect[1][0]) + (pvect[2][1]-pvect[1][1])*(pvect[2][1]-pvect[1][1]));
     5c4:	69 a5       	ldd	r22, Y+41	; 0x29
     5c6:	7a a5       	ldd	r23, Y+42	; 0x2a
     5c8:	29 a1       	ldd	r18, Y+33	; 0x21
     5ca:	3a a1       	ldd	r19, Y+34	; 0x22
     5cc:	62 1b       	sub	r22, r18
     5ce:	73 0b       	sbc	r23, r19
     5d0:	07 2e       	mov	r0, r23
     5d2:	00 0c       	add	r0, r0
     5d4:	88 0b       	sbc	r24, r24
     5d6:	99 0b       	sbc	r25, r25
     5d8:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     5dc:	4b 01       	movw	r8, r22
     5de:	5c 01       	movw	r10, r24
     5e0:	83 01       	movw	r16, r6
     5e2:	4d a1       	ldd	r20, Y+37	; 0x25
     5e4:	5e a1       	ldd	r21, Y+38	; 0x26
     5e6:	04 1b       	sub	r16, r20
     5e8:	15 0b       	sbc	r17, r21
     5ea:	9b 01       	movw	r18, r22
     5ec:	ac 01       	movw	r20, r24
     5ee:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     5f2:	6f ab       	std	Y+55, r22	; 0x37
     5f4:	78 af       	std	Y+56, r23	; 0x38
     5f6:	89 af       	std	Y+57, r24	; 0x39
     5f8:	9a af       	std	Y+58, r25	; 0x3a
     5fa:	00 9f       	mul	r16, r16
     5fc:	60 01       	movw	r12, r0
     5fe:	01 9f       	mul	r16, r17
     600:	d0 0c       	add	r13, r0
     602:	d0 0c       	add	r13, r0
     604:	11 24       	eor	r1, r1
     606:	0d 2c       	mov	r0, r13
     608:	00 0c       	add	r0, r0
     60a:	ee 08       	sbc	r14, r14
     60c:	ff 08       	sbc	r15, r15
     60e:	a5 01       	movw	r20, r10
     610:	94 01       	movw	r18, r8
     612:	c5 01       	movw	r24, r10
     614:	b4 01       	movw	r22, r8
     616:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     61a:	4b 01       	movw	r8, r22
     61c:	5c 01       	movw	r10, r24
     61e:	c7 01       	movw	r24, r14
     620:	b6 01       	movw	r22, r12
     622:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     626:	9b 01       	movw	r18, r22
     628:	ac 01       	movw	r20, r24
     62a:	c5 01       	movw	r24, r10
     62c:	b4 01       	movw	r22, r8
     62e:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     632:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <sqrt>
     636:	6f ab       	std	Y+55, r22	; 0x37
     638:	78 af       	std	Y+56, r23	; 0x38
     63a:	89 af       	std	Y+57, r24	; 0x39
     63c:	9a af       	std	Y+58, r25	; 0x3a
	float dist13 = sqrt((float)(pvect[3][0]-pvect[1][0])*(pvect[3][0]-pvect[1][0]) + (pvect[3][1]-pvect[1][1])*(pvect[3][1]-pvect[1][1]));
     63e:	6d a5       	ldd	r22, Y+45	; 0x2d
     640:	7e a5       	ldd	r23, Y+46	; 0x2e
     642:	89 a1       	ldd	r24, Y+33	; 0x21
     644:	9a a1       	ldd	r25, Y+34	; 0x22
     646:	68 1b       	sub	r22, r24
     648:	79 0b       	sbc	r23, r25
     64a:	07 2e       	mov	r0, r23
     64c:	00 0c       	add	r0, r0
     64e:	88 0b       	sbc	r24, r24
     650:	99 0b       	sbc	r25, r25
     652:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     656:	4b 01       	movw	r8, r22
     658:	5c 01       	movw	r10, r24
     65a:	09 a9       	ldd	r16, Y+49	; 0x31
     65c:	1a a9       	ldd	r17, Y+50	; 0x32
     65e:	ed a1       	ldd	r30, Y+37	; 0x25
     660:	fe a1       	ldd	r31, Y+38	; 0x26
     662:	0e 1b       	sub	r16, r30
     664:	1f 0b       	sbc	r17, r31
     666:	9b 01       	movw	r18, r22
     668:	ac 01       	movw	r20, r24
     66a:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     66e:	69 a3       	std	Y+33, r22	; 0x21
     670:	7a a3       	std	Y+34, r23	; 0x22
     672:	8b a3       	std	Y+35, r24	; 0x23
     674:	9c a3       	std	Y+36, r25	; 0x24
     676:	00 9f       	mul	r16, r16
     678:	60 01       	movw	r12, r0
     67a:	01 9f       	mul	r16, r17
     67c:	d0 0c       	add	r13, r0
     67e:	d0 0c       	add	r13, r0
     680:	11 24       	eor	r1, r1
     682:	0d 2c       	mov	r0, r13
     684:	00 0c       	add	r0, r0
     686:	ee 08       	sbc	r14, r14
     688:	ff 08       	sbc	r15, r15
     68a:	a5 01       	movw	r20, r10
     68c:	94 01       	movw	r18, r8
     68e:	c5 01       	movw	r24, r10
     690:	b4 01       	movw	r22, r8
     692:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     696:	4b 01       	movw	r8, r22
     698:	5c 01       	movw	r10, r24
     69a:	c7 01       	movw	r24, r14
     69c:	b6 01       	movw	r22, r12
     69e:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     6a2:	9b 01       	movw	r18, r22
     6a4:	ac 01       	movw	r20, r24
     6a6:	c5 01       	movw	r24, r10
     6a8:	b4 01       	movw	r22, r8
     6aa:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     6ae:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <sqrt>
     6b2:	4b 01       	movw	r8, r22
     6b4:	5c 01       	movw	r10, r24
	float dist23 = sqrt((float)(pvect[3][0]-pvect[2][0])*(pvect[3][0]-pvect[2][0]) + (pvect[3][1]-pvect[2][1])*(pvect[3][1]-pvect[2][1]));
     6b6:	6d a5       	ldd	r22, Y+45	; 0x2d
     6b8:	7e a5       	ldd	r23, Y+46	; 0x2e
     6ba:	29 a5       	ldd	r18, Y+41	; 0x29
     6bc:	3a a5       	ldd	r19, Y+42	; 0x2a
     6be:	62 1b       	sub	r22, r18
     6c0:	73 0b       	sbc	r23, r19
     6c2:	07 2e       	mov	r0, r23
     6c4:	00 0c       	add	r0, r0
     6c6:	88 0b       	sbc	r24, r24
     6c8:	99 0b       	sbc	r25, r25
     6ca:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     6ce:	69 a3       	std	Y+33, r22	; 0x21
     6d0:	7a a3       	std	Y+34, r23	; 0x22
     6d2:	8b a3       	std	Y+35, r24	; 0x23
     6d4:	9c a3       	std	Y+36, r25	; 0x24
     6d6:	09 a9       	ldd	r16, Y+49	; 0x31
     6d8:	1a a9       	ldd	r17, Y+50	; 0x32
     6da:	06 19       	sub	r16, r6
     6dc:	17 09       	sbc	r17, r7
     6de:	9b 01       	movw	r18, r22
     6e0:	ac 01       	movw	r20, r24
     6e2:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     6e6:	6d a3       	std	Y+37, r22	; 0x25
     6e8:	7e a3       	std	Y+38, r23	; 0x26
     6ea:	8f a3       	std	Y+39, r24	; 0x27
     6ec:	98 a7       	std	Y+40, r25	; 0x28
     6ee:	00 9f       	mul	r16, r16
     6f0:	60 01       	movw	r12, r0
     6f2:	01 9f       	mul	r16, r17
     6f4:	d0 0c       	add	r13, r0
     6f6:	d0 0c       	add	r13, r0
     6f8:	11 24       	eor	r1, r1
     6fa:	0d 2c       	mov	r0, r13
     6fc:	00 0c       	add	r0, r0
     6fe:	ee 08       	sbc	r14, r14
     700:	ff 08       	sbc	r15, r15
     702:	29 a1       	ldd	r18, Y+33	; 0x21
     704:	3a a1       	ldd	r19, Y+34	; 0x22
     706:	4b a1       	ldd	r20, Y+35	; 0x23
     708:	5c a1       	ldd	r21, Y+36	; 0x24
     70a:	ca 01       	movw	r24, r20
     70c:	b9 01       	movw	r22, r18
     70e:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     712:	69 a3       	std	Y+33, r22	; 0x21
     714:	7a a3       	std	Y+34, r23	; 0x22
     716:	8b a3       	std	Y+35, r24	; 0x23
     718:	9c a3       	std	Y+36, r25	; 0x24
     71a:	c7 01       	movw	r24, r14
     71c:	b6 01       	movw	r22, r12
     71e:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     722:	9b 01       	movw	r18, r22
     724:	ac 01       	movw	r20, r24
     726:	69 a1       	ldd	r22, Y+33	; 0x21
     728:	7a a1       	ldd	r23, Y+34	; 0x22
     72a:	8b a1       	ldd	r24, Y+35	; 0x23
     72c:	9c a1       	ldd	r25, Y+36	; 0x24
     72e:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     732:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <sqrt>
	
	float distVect[6] = {dist01, dist02, dist03, dist12, dist13, dist23};
     736:	2b ad       	ldd	r18, Y+59	; 0x3b
     738:	3c ad       	ldd	r19, Y+60	; 0x3c
     73a:	4d ad       	ldd	r20, Y+61	; 0x3d
     73c:	5e ad       	ldd	r21, Y+62	; 0x3e
     73e:	29 83       	std	Y+1, r18	; 0x01
     740:	3a 83       	std	Y+2, r19	; 0x02
     742:	4b 83       	std	Y+3, r20	; 0x03
     744:	5c 83       	std	Y+4, r21	; 0x04
     746:	23 96       	adiw	r28, 0x03	; 3
     748:	2c ad       	ldd	r18, Y+60	; 0x3c
     74a:	3d ad       	ldd	r19, Y+61	; 0x3d
     74c:	4e ad       	ldd	r20, Y+62	; 0x3e
     74e:	5f ad       	ldd	r21, Y+63	; 0x3f
     750:	23 97       	sbiw	r28, 0x03	; 3
     752:	2d 83       	std	Y+5, r18	; 0x05
     754:	3e 83       	std	Y+6, r19	; 0x06
     756:	4f 83       	std	Y+7, r20	; 0x07
     758:	58 87       	std	Y+8, r21	; 0x08
     75a:	2b a9       	ldd	r18, Y+51	; 0x33
     75c:	3c a9       	ldd	r19, Y+52	; 0x34
     75e:	4d a9       	ldd	r20, Y+53	; 0x35
     760:	5e a9       	ldd	r21, Y+54	; 0x36
     762:	29 87       	std	Y+9, r18	; 0x09
     764:	3a 87       	std	Y+10, r19	; 0x0a
     766:	4b 87       	std	Y+11, r20	; 0x0b
     768:	5c 87       	std	Y+12, r21	; 0x0c
     76a:	2f a9       	ldd	r18, Y+55	; 0x37
     76c:	38 ad       	ldd	r19, Y+56	; 0x38
     76e:	49 ad       	ldd	r20, Y+57	; 0x39
     770:	5a ad       	ldd	r21, Y+58	; 0x3a
     772:	2d 87       	std	Y+13, r18	; 0x0d
     774:	3e 87       	std	Y+14, r19	; 0x0e
     776:	4f 87       	std	Y+15, r20	; 0x0f
     778:	58 8b       	std	Y+16, r21	; 0x10
     77a:	89 8a       	std	Y+17, r8	; 0x11
     77c:	9a 8a       	std	Y+18, r9	; 0x12
     77e:	ab 8a       	std	Y+19, r10	; 0x13
     780:	bc 8a       	std	Y+20, r11	; 0x14
     782:	6d 8b       	std	Y+21, r22	; 0x15
     784:	7e 8b       	std	Y+22, r23	; 0x16
     786:	8f 8b       	std	Y+23, r24	; 0x17
     788:	98 8f       	std	Y+24, r25	; 0x18
     78a:	ae 01       	movw	r20, r28
     78c:	4f 5f       	subi	r20, 0xFF	; 255
     78e:	5f 4f       	sbci	r21, 0xFF	; 255
     790:	7a 01       	movw	r14, r20
	
	int indexMax = 0;
	float maxVal = 0;
	for (int i = 0; i < 6; i++){
     792:	00 e0       	ldi	r16, 0x00	; 0
     794:	10 e0       	ldi	r17, 0x00	; 0
	float dist23 = sqrt((float)(pvect[3][0]-pvect[2][0])*(pvect[3][0]-pvect[2][0]) + (pvect[3][1]-pvect[2][1])*(pvect[3][1]-pvect[2][1]));
	
	float distVect[6] = {dist01, dist02, dist03, dist12, dist13, dist23};
	
	int indexMax = 0;
	float maxVal = 0;
     796:	61 2c       	mov	r6, r1
     798:	71 2c       	mov	r7, r1
     79a:	c1 2c       	mov	r12, r1
     79c:	d1 2c       	mov	r13, r1
	float dist13 = sqrt((float)(pvect[3][0]-pvect[1][0])*(pvect[3][0]-pvect[1][0]) + (pvect[3][1]-pvect[1][1])*(pvect[3][1]-pvect[1][1]));
	float dist23 = sqrt((float)(pvect[3][0]-pvect[2][0])*(pvect[3][0]-pvect[2][0]) + (pvect[3][1]-pvect[2][1])*(pvect[3][1]-pvect[2][1]));
	
	float distVect[6] = {dist01, dist02, dist03, dist12, dist13, dist23};
	
	int indexMax = 0;
     79e:	21 2c       	mov	r2, r1
     7a0:	31 2c       	mov	r3, r1
	float maxVal = 0;
	for (int i = 0; i < 6; i++){
		if (distVect[i] > maxVal) {
     7a2:	f7 01       	movw	r30, r14
     7a4:	81 90       	ld	r8, Z+
     7a6:	91 90       	ld	r9, Z+
     7a8:	a1 90       	ld	r10, Z+
     7aa:	b1 90       	ld	r11, Z+
     7ac:	7f 01       	movw	r14, r30
     7ae:	26 2d       	mov	r18, r6
     7b0:	37 2d       	mov	r19, r7
     7b2:	4c 2d       	mov	r20, r12
     7b4:	5d 2d       	mov	r21, r13
     7b6:	c5 01       	movw	r24, r10
     7b8:	b4 01       	movw	r22, r8
     7ba:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <__gesf2>
     7be:	18 16       	cp	r1, r24
     7c0:	34 f4       	brge	.+12     	; 0x7ce <fourPointCalc+0x3e8>
			indexMax = i;
			maxVal = distVect[i];
     7c2:	68 2c       	mov	r6, r8
     7c4:	79 2c       	mov	r7, r9
     7c6:	ca 2c       	mov	r12, r10
     7c8:	db 2c       	mov	r13, r11
	float distVect[6] = {dist01, dist02, dist03, dist12, dist13, dist23};
	
	int indexMax = 0;
	float maxVal = 0;
	for (int i = 0; i < 6; i++){
		if (distVect[i] > maxVal) {
     7ca:	20 2e       	mov	r2, r16
     7cc:	31 2e       	mov	r3, r17
	
	float distVect[6] = {dist01, dist02, dist03, dist12, dist13, dist23};
	
	int indexMax = 0;
	float maxVal = 0;
	for (int i = 0; i < 6; i++){
     7ce:	0f 5f       	subi	r16, 0xFF	; 255
     7d0:	1f 4f       	sbci	r17, 0xFF	; 255
     7d2:	06 30       	cpi	r16, 0x06	; 6
     7d4:	11 05       	cpc	r17, r1
     7d6:	29 f7       	brne	.-54     	; 0x7a2 <fourPointCalc+0x3bc>
			maxVal = distVect[i];
		}
	}
	
	int* pointsLongRef; 
	pointsLongRef = distIndex(indexMax);
     7d8:	82 2d       	mov	r24, r2
     7da:	93 2d       	mov	r25, r3
     7dc:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <distIndex>
	
	int pointsLong[2] = {(pointsLongRef[0]), (pointsLongRef[1])};
     7e0:	fc 01       	movw	r30, r24
     7e2:	e0 80       	ld	r14, Z
     7e4:	f1 80       	ldd	r15, Z+1	; 0x01
     7e6:	fa 8e       	std	Y+26, r15	; 0x1a
     7e8:	e9 8e       	std	Y+25, r14	; 0x19
     7ea:	02 81       	ldd	r16, Z+2	; 0x02
     7ec:	13 81       	ldd	r17, Z+3	; 0x03
     7ee:	1c 8f       	std	Y+28, r17	; 0x1c
     7f0:	0b 8f       	std	Y+27, r16	; 0x1b
	
	float center[2]; 
	center[0] = (pvect[pointsLong[0]][0] + pvect[pointsLong[1]][0])/2;
     7f2:	ee 0c       	add	r14, r14
     7f4:	ff 1c       	adc	r15, r15
     7f6:	ee 0c       	add	r14, r14
     7f8:	ff 1c       	adc	r15, r15
     7fa:	e4 0c       	add	r14, r4
     7fc:	f5 1c       	adc	r15, r5
     7fe:	00 0f       	add	r16, r16
     800:	11 1f       	adc	r17, r17
     802:	00 0f       	add	r16, r16
     804:	11 1f       	adc	r17, r17
     806:	04 0d       	add	r16, r4
     808:	15 1d       	adc	r17, r5
     80a:	f7 01       	movw	r30, r14
     80c:	60 81       	ld	r22, Z
     80e:	71 81       	ldd	r23, Z+1	; 0x01
     810:	f8 01       	movw	r30, r16
     812:	80 81       	ld	r24, Z
     814:	91 81       	ldd	r25, Z+1	; 0x01
     816:	68 0f       	add	r22, r24
     818:	79 1f       	adc	r23, r25
     81a:	77 23       	and	r23, r23
     81c:	14 f4       	brge	.+4      	; 0x822 <fourPointCalc+0x43c>
     81e:	6f 5f       	subi	r22, 0xFF	; 255
     820:	7f 4f       	sbci	r23, 0xFF	; 255
     822:	75 95       	asr	r23
     824:	67 95       	ror	r22
     826:	07 2e       	mov	r0, r23
     828:	00 0c       	add	r0, r0
     82a:	88 0b       	sbc	r24, r24
     82c:	99 0b       	sbc	r25, r25
     82e:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     832:	4b 01       	movw	r8, r22
     834:	5c 01       	movw	r10, r24
	center[1] = (pvect[pointsLong[0]][1] + pvect[pointsLong[1]][1])/2;
     836:	f7 01       	movw	r30, r14
     838:	62 81       	ldd	r22, Z+2	; 0x02
     83a:	73 81       	ldd	r23, Z+3	; 0x03
     83c:	f8 01       	movw	r30, r16
     83e:	82 81       	ldd	r24, Z+2	; 0x02
     840:	93 81       	ldd	r25, Z+3	; 0x03
     842:	68 0f       	add	r22, r24
     844:	79 1f       	adc	r23, r25
     846:	77 23       	and	r23, r23
     848:	14 f4       	brge	.+4      	; 0x84e <fourPointCalc+0x468>
     84a:	6f 5f       	subi	r22, 0xFF	; 255
     84c:	7f 4f       	sbci	r23, 0xFF	; 255
     84e:	75 95       	asr	r23
     850:	67 95       	ror	r22
     852:	07 2e       	mov	r0, r23
     854:	00 0c       	add	r0, r0
     856:	88 0b       	sbc	r24, r24
     858:	99 0b       	sbc	r25, r25
     85a:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     85e:	69 a3       	std	Y+33, r22	; 0x21
     860:	7a a3       	std	Y+34, r23	; 0x22
     862:	8b a3       	std	Y+35, r24	; 0x23
     864:	9c a3       	std	Y+36, r25	; 0x24
	
	int top;
	int bottom;
	orientationCalculationFour(pointsLong, distVect, &top, &bottom);
     866:	9e 01       	movw	r18, r28
     868:	21 5e       	subi	r18, 0xE1	; 225
     86a:	3f 4f       	sbci	r19, 0xFF	; 255
     86c:	ae 01       	movw	r20, r28
     86e:	43 5e       	subi	r20, 0xE3	; 227
     870:	5f 4f       	sbci	r21, 0xFF	; 255
     872:	be 01       	movw	r22, r28
     874:	6f 5f       	subi	r22, 0xFF	; 255
     876:	7f 4f       	sbci	r23, 0xFF	; 255
     878:	ce 01       	movw	r24, r28
     87a:	49 96       	adiw	r24, 0x19	; 25
     87c:	0e 94 46 01 	call	0x28c	; 0x28c <orientationCalculationFour>
	
	float centerLine[2]; 
	centerLine[0] = pvect[top][0] - pvect[bottom][0];
     880:	0d 8d       	ldd	r16, Y+29	; 0x1d
     882:	1e 8d       	ldd	r17, Y+30	; 0x1e
     884:	00 0f       	add	r16, r16
     886:	11 1f       	adc	r17, r17
     888:	00 0f       	add	r16, r16
     88a:	11 1f       	adc	r17, r17
     88c:	04 0d       	add	r16, r4
     88e:	15 1d       	adc	r17, r5
     890:	2f 8c       	ldd	r2, Y+31	; 0x1f
     892:	38 a0       	ldd	r3, Y+32	; 0x20
     894:	22 0c       	add	r2, r2
     896:	33 1c       	adc	r3, r3
     898:	22 0c       	add	r2, r2
     89a:	33 1c       	adc	r3, r3
     89c:	24 0c       	add	r2, r4
     89e:	35 1c       	adc	r3, r5
     8a0:	f8 01       	movw	r30, r16
     8a2:	60 81       	ld	r22, Z
     8a4:	71 81       	ldd	r23, Z+1	; 0x01
     8a6:	f1 01       	movw	r30, r2
     8a8:	80 81       	ld	r24, Z
     8aa:	91 81       	ldd	r25, Z+1	; 0x01
     8ac:	68 1b       	sub	r22, r24
     8ae:	79 0b       	sbc	r23, r25
     8b0:	07 2e       	mov	r0, r23
     8b2:	00 0c       	add	r0, r0
     8b4:	88 0b       	sbc	r24, r24
     8b6:	99 0b       	sbc	r25, r25
     8b8:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     8bc:	6b 01       	movw	r12, r22
     8be:	7c 01       	movw	r14, r24
	centerLine[1] = pvect[top][1] - pvect[bottom][1];
     8c0:	f8 01       	movw	r30, r16
     8c2:	62 81       	ldd	r22, Z+2	; 0x02
     8c4:	73 81       	ldd	r23, Z+3	; 0x03
     8c6:	f1 01       	movw	r30, r2
     8c8:	82 81       	ldd	r24, Z+2	; 0x02
     8ca:	93 81       	ldd	r25, Z+3	; 0x03
     8cc:	68 1b       	sub	r22, r24
     8ce:	79 0b       	sbc	r23, r25
     8d0:	07 2e       	mov	r0, r23
     8d2:	00 0c       	add	r0, r0
     8d4:	88 0b       	sbc	r24, r24
     8d6:	99 0b       	sbc	r25, r25
     8d8:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
	
	float theta = atan2(-1.0*centerLine[1], (float)centerLine[0]); 
     8dc:	90 58       	subi	r25, 0x80	; 128
     8de:	a7 01       	movw	r20, r14
     8e0:	96 01       	movw	r18, r12
     8e2:	0e 94 28 0c 	call	0x1850	; 0x1850 <atan2>
	theta += M_PI/2.0;
     8e6:	2b ed       	ldi	r18, 0xDB	; 219
     8e8:	3f e0       	ldi	r19, 0x0F	; 15
     8ea:	49 ec       	ldi	r20, 0xC9	; 201
     8ec:	5f e3       	ldi	r21, 0x3F	; 63
     8ee:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     8f2:	6b 01       	movw	r12, r22
     8f4:	7c 01       	movw	r14, r24
	
	float t[2];
	t[0] = -1*center[0] + 512;
     8f6:	a5 01       	movw	r20, r10
     8f8:	94 01       	movw	r18, r8
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	80 e0       	ldi	r24, 0x00	; 0
     900:	94 e4       	ldi	r25, 0x44	; 68
     902:	0e 94 a8 0b 	call	0x1750	; 0x1750 <__subsf3>
     906:	4b 01       	movw	r8, r22
     908:	5c 01       	movw	r10, r24
	t[1] = -1*center[1] + 382;
     90a:	29 a1       	ldd	r18, Y+33	; 0x21
     90c:	3a a1       	ldd	r19, Y+34	; 0x22
     90e:	4b a1       	ldd	r20, Y+35	; 0x23
     910:	5c a1       	ldd	r21, Y+36	; 0x24
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	70 e0       	ldi	r23, 0x00	; 0
     916:	8f eb       	ldi	r24, 0xBF	; 191
     918:	93 e4       	ldi	r25, 0x43	; 67
     91a:	0e 94 a8 0b 	call	0x1750	; 0x1750 <__subsf3>
     91e:	2b 01       	movw	r4, r22
     920:	3c 01       	movw	r6, r24
	
	
	centerFour[0] = sin(theta)*t[1] - cos(theta)*t[0];
     922:	c7 01       	movw	r24, r14
     924:	b6 01       	movw	r22, r12
     926:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <sin>
     92a:	69 a3       	std	Y+33, r22	; 0x21
     92c:	7a a3       	std	Y+34, r23	; 0x22
     92e:	8b a3       	std	Y+35, r24	; 0x23
     930:	9c a3       	std	Y+36, r25	; 0x24
     932:	c7 01       	movw	r24, r14
     934:	b6 01       	movw	r22, r12
     936:	0e 94 87 0c 	call	0x190e	; 0x190e <cos>
     93a:	6d a3       	std	Y+37, r22	; 0x25
     93c:	7e a3       	std	Y+38, r23	; 0x26
     93e:	8f a3       	std	Y+39, r24	; 0x27
     940:	98 a7       	std	Y+40, r25	; 0x28
     942:	08 e1       	ldi	r16, 0x18	; 24
     944:	11 e0       	ldi	r17, 0x01	; 1
     946:	29 a1       	ldd	r18, Y+33	; 0x21
     948:	3a a1       	ldd	r19, Y+34	; 0x22
     94a:	4b a1       	ldd	r20, Y+35	; 0x23
     94c:	5c a1       	ldd	r21, Y+36	; 0x24
     94e:	c3 01       	movw	r24, r6
     950:	b2 01       	movw	r22, r4
     952:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     956:	69 a7       	std	Y+41, r22	; 0x29
     958:	7a a7       	std	Y+42, r23	; 0x2a
     95a:	8b a7       	std	Y+43, r24	; 0x2b
     95c:	9c a7       	std	Y+44, r25	; 0x2c
     95e:	2d a1       	ldd	r18, Y+37	; 0x25
     960:	3e a1       	ldd	r19, Y+38	; 0x26
     962:	4f a1       	ldd	r20, Y+39	; 0x27
     964:	58 a5       	ldd	r21, Y+40	; 0x28
     966:	c5 01       	movw	r24, r10
     968:	b4 01       	movw	r22, r8
     96a:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     96e:	9b 01       	movw	r18, r22
     970:	ac 01       	movw	r20, r24
     972:	69 a5       	ldd	r22, Y+41	; 0x29
     974:	7a a5       	ldd	r23, Y+42	; 0x2a
     976:	8b a5       	ldd	r24, Y+43	; 0x2b
     978:	9c a5       	ldd	r25, Y+44	; 0x2c
     97a:	0e 94 a8 0b 	call	0x1750	; 0x1750 <__subsf3>
     97e:	f8 01       	movw	r30, r16
     980:	60 83       	st	Z, r22
     982:	71 83       	std	Z+1, r23	; 0x01
     984:	82 83       	std	Z+2, r24	; 0x02
     986:	93 83       	std	Z+3, r25	; 0x03
	centerFour[1] = cos(theta)*t[1] + sin(theta)*t[0];
     988:	2d a1       	ldd	r18, Y+37	; 0x25
     98a:	3e a1       	ldd	r19, Y+38	; 0x26
     98c:	4f a1       	ldd	r20, Y+39	; 0x27
     98e:	58 a5       	ldd	r21, Y+40	; 0x28
     990:	c3 01       	movw	r24, r6
     992:	b2 01       	movw	r22, r4
     994:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     998:	2b 01       	movw	r4, r22
     99a:	3c 01       	movw	r6, r24
     99c:	29 a1       	ldd	r18, Y+33	; 0x21
     99e:	3a a1       	ldd	r19, Y+34	; 0x22
     9a0:	4b a1       	ldd	r20, Y+35	; 0x23
     9a2:	5c a1       	ldd	r21, Y+36	; 0x24
     9a4:	c5 01       	movw	r24, r10
     9a6:	b4 01       	movw	r22, r8
     9a8:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     9ac:	9b 01       	movw	r18, r22
     9ae:	ac 01       	movw	r20, r24
     9b0:	c3 01       	movw	r24, r6
     9b2:	b2 01       	movw	r22, r4
     9b4:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3>
     9b8:	f8 01       	movw	r30, r16
     9ba:	64 83       	std	Z+4, r22	; 0x04
     9bc:	75 83       	std	Z+5, r23	; 0x05
     9be:	86 83       	std	Z+6, r24	; 0x06
     9c0:	97 83       	std	Z+7, r25	; 0x07
	centerFour[2] = -theta*180.0/M_PI;
     9c2:	c7 01       	movw	r24, r14
     9c4:	b6 01       	movw	r22, r12
     9c6:	90 58       	subi	r25, 0x80	; 128
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	44 e3       	ldi	r20, 0x34	; 52
     9ce:	53 e4       	ldi	r21, 0x43	; 67
     9d0:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
     9d4:	2b ed       	ldi	r18, 0xDB	; 219
     9d6:	3f e0       	ldi	r19, 0x0F	; 15
     9d8:	49 e4       	ldi	r20, 0x49	; 73
     9da:	50 e4       	ldi	r21, 0x40	; 64
     9dc:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__divsf3>
     9e0:	f8 01       	movw	r30, r16
     9e2:	60 87       	std	Z+8, r22	; 0x08
     9e4:	71 87       	std	Z+9, r23	; 0x09
     9e6:	82 87       	std	Z+10, r24	; 0x0a
     9e8:	93 87       	std	Z+11, r25	; 0x0b
	
	return centerFour;
}
     9ea:	c8 01       	movw	r24, r16
     9ec:	ce 5b       	subi	r28, 0xBE	; 190
     9ee:	df 4f       	sbci	r29, 0xFF	; 255
     9f0:	0f b6       	in	r0, 0x3f	; 63
     9f2:	f8 94       	cli
     9f4:	de bf       	out	0x3e, r29	; 62
     9f6:	0f be       	out	0x3f, r0	; 63
     9f8:	cd bf       	out	0x3d, r28	; 61
     9fa:	df 91       	pop	r29
     9fc:	cf 91       	pop	r28
     9fe:	1f 91       	pop	r17
     a00:	0f 91       	pop	r16
     a02:	ff 90       	pop	r15
     a04:	ef 90       	pop	r14
     a06:	df 90       	pop	r13
     a08:	cf 90       	pop	r12
     a0a:	bf 90       	pop	r11
     a0c:	af 90       	pop	r10
     a0e:	9f 90       	pop	r9
     a10:	8f 90       	pop	r8
     a12:	7f 90       	pop	r7
     a14:	6f 90       	pop	r6
     a16:	5f 90       	pop	r5
     a18:	4f 90       	pop	r4
     a1a:	3f 90       	pop	r3
     a1c:	2f 90       	pop	r2
     a1e:	08 95       	ret

00000a20 <localization_calc>:
void orientationCalculationFour(int pointsLong[2], float distVect[], int* top, int* bottom);


//Public function declarations 
float* localization_calc(int rawStarData[8], float robotCenterPrev[3])
{	
     a20:	4f 92       	push	r4
     a22:	5f 92       	push	r5
     a24:	6f 92       	push	r6
     a26:	7f 92       	push	r7
     a28:	af 92       	push	r10
     a2a:	bf 92       	push	r11
     a2c:	cf 92       	push	r12
     a2e:	df 92       	push	r13
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	68 97       	sbiw	r28, 0x18	; 24
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	de bf       	out	0x3e, r29	; 62
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	cd bf       	out	0x3d, r28	; 61
     a4c:	fc 01       	movw	r30, r24
	
	return robotCenter;
	
	
	
}
     a4e:	0d b7       	in	r16, 0x3d	; 61
     a50:	1e b7       	in	r17, 0x3e	; 62
float* localization_calc(int rawStarData[8], float robotCenterPrev[3])
{	
	static float robotCenter[3];
	
	//Put the star data in a matrix where each row corresponds to 4 points
	int pvect[4][2] = {
     a52:	80 81       	ld	r24, Z
     a54:	91 81       	ldd	r25, Z+1	; 0x01
     a56:	9a 83       	std	Y+2, r25	; 0x02
     a58:	89 83       	std	Y+1, r24	; 0x01
     a5a:	80 85       	ldd	r24, Z+8	; 0x08
     a5c:	91 85       	ldd	r25, Z+9	; 0x09
     a5e:	9c 83       	std	Y+4, r25	; 0x04
     a60:	8b 83       	std	Y+3, r24	; 0x03
     a62:	82 81       	ldd	r24, Z+2	; 0x02
     a64:	93 81       	ldd	r25, Z+3	; 0x03
     a66:	9e 83       	std	Y+6, r25	; 0x06
     a68:	8d 83       	std	Y+5, r24	; 0x05
     a6a:	82 85       	ldd	r24, Z+10	; 0x0a
     a6c:	93 85       	ldd	r25, Z+11	; 0x0b
     a6e:	98 87       	std	Y+8, r25	; 0x08
     a70:	8f 83       	std	Y+7, r24	; 0x07
     a72:	84 81       	ldd	r24, Z+4	; 0x04
     a74:	95 81       	ldd	r25, Z+5	; 0x05
     a76:	9a 87       	std	Y+10, r25	; 0x0a
     a78:	89 87       	std	Y+9, r24	; 0x09
     a7a:	84 85       	ldd	r24, Z+12	; 0x0c
     a7c:	95 85       	ldd	r25, Z+13	; 0x0d
     a7e:	9c 87       	std	Y+12, r25	; 0x0c
     a80:	8b 87       	std	Y+11, r24	; 0x0b
     a82:	86 81       	ldd	r24, Z+6	; 0x06
     a84:	97 81       	ldd	r25, Z+7	; 0x07
     a86:	9e 87       	std	Y+14, r25	; 0x0e
     a88:	8d 87       	std	Y+13, r24	; 0x0d
     a8a:	86 85       	ldd	r24, Z+14	; 0x0e
     a8c:	97 85       	ldd	r25, Z+15	; 0x0f
     a8e:	98 8b       	std	Y+16, r25	; 0x10
     a90:	8f 87       	std	Y+15, r24	; 0x0f
		{rawStarData[3], rawStarData[7]}
	};
	
	
	//Extract all points that are readable into an array
	int pointIndices[4] = {0, 0, 0, 0}; //Initializes the indices
     a92:	fe 01       	movw	r30, r28
     a94:	71 96       	adiw	r30, 0x11	; 17
     a96:	88 e0       	ldi	r24, 0x08	; 8
     a98:	df 01       	movw	r26, r30
     a9a:	1d 92       	st	X+, r1
     a9c:	8a 95       	dec	r24
     a9e:	e9 f7       	brne	.-6      	; 0xa9a <localization_calc+0x7a>
     aa0:	70 97       	sbiw	r30, 0x10	; 16
	int numPoints = 0; //Initialize number of points
	
	for (int i = 0; i < 4; i++){
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
	};
	
	
	//Extract all points that are readable into an array
	int pointIndices[4] = {0, 0, 0, 0}; //Initializes the indices
	int numPoints = 0; //Initialize number of points
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	90 e0       	ldi	r25, 0x00	; 0
	
	for (int i = 0; i < 4; i++){
		if (pvect[i][0] != 1023){
     aaa:	40 81       	ld	r20, Z
     aac:	51 81       	ldd	r21, Z+1	; 0x01
     aae:	4f 3f       	cpi	r20, 0xFF	; 255
     ab0:	53 40       	sbci	r21, 0x03	; 3
     ab2:	71 f0       	breq	.+28     	; 0xad0 <localization_calc+0xb0>
			pointIndices[numPoints] = i;
     ab4:	dc 01       	movw	r26, r24
     ab6:	aa 0f       	add	r26, r26
     ab8:	bb 1f       	adc	r27, r27
     aba:	41 e0       	ldi	r20, 0x01	; 1
     abc:	50 e0       	ldi	r21, 0x00	; 0
     abe:	4c 0f       	add	r20, r28
     ac0:	5d 1f       	adc	r21, r29
     ac2:	a4 0f       	add	r26, r20
     ac4:	b5 1f       	adc	r27, r21
     ac6:	51 96       	adiw	r26, 0x11	; 17
     ac8:	3c 93       	st	X, r19
     aca:	2e 93       	st	-X, r18
     acc:	50 97       	sbiw	r26, 0x10	; 16
			numPoints++;
     ace:	01 96       	adiw	r24, 0x01	; 1
	
	//Extract all points that are readable into an array
	int pointIndices[4] = {0, 0, 0, 0}; //Initializes the indices
	int numPoints = 0; //Initialize number of points
	
	for (int i = 0; i < 4; i++){
     ad0:	2f 5f       	subi	r18, 0xFF	; 255
     ad2:	3f 4f       	sbci	r19, 0xFF	; 255
     ad4:	34 96       	adiw	r30, 0x04	; 4
     ad6:	24 30       	cpi	r18, 0x04	; 4
     ad8:	31 05       	cpc	r19, r1
     ada:	39 f7       	brne	.-50     	; 0xaaa <localization_calc+0x8a>
			numPoints++;
		}
	}
	
	
	if (numPoints) { //If any points were found 
     adc:	00 97       	sbiw	r24, 0x00	; 0
     ade:	09 f4       	brne	.+2      	; 0xae2 <localization_calc+0xc2>
     ae0:	8b c0       	rjmp	.+278    	; 0xbf8 <__stack+0xf9>
     ae2:	ed b6       	in	r14, 0x3d	; 61
     ae4:	fe b6       	in	r15, 0x3e	; 62
		int points[numPoints][2]; //an array of the usable points 
     ae6:	6c 01       	movw	r12, r24
     ae8:	cc 0c       	add	r12, r12
     aea:	dd 1c       	adc	r13, r13
     aec:	cc 0c       	add	r12, r12
     aee:	dd 1c       	adc	r13, r13
     af0:	ad b7       	in	r26, 0x3d	; 61
     af2:	be b7       	in	r27, 0x3e	; 62
     af4:	ac 19       	sub	r26, r12
     af6:	bd 09       	sbc	r27, r13
     af8:	0f b6       	in	r0, 0x3f	; 63
     afa:	f8 94       	cli
     afc:	be bf       	out	0x3e, r27	; 62
     afe:	0f be       	out	0x3f, r0	; 63
     b00:	ad bf       	out	0x3d, r26	; 61
     b02:	ed b7       	in	r30, 0x3d	; 61
     b04:	fe b7       	in	r31, 0x3e	; 62
     b06:	31 96       	adiw	r30, 0x01	; 1
     b08:	5f 01       	movw	r10, r30
		for (int i = 0; i < numPoints; i++) {
     b0a:	18 16       	cp	r1, r24
     b0c:	19 06       	cpc	r1, r25
     b0e:	24 f5       	brge	.+72     	; 0xb58 <__stack+0x59>
     b10:	9e 01       	movw	r18, r28
     b12:	2f 5e       	subi	r18, 0xEF	; 239
     b14:	3f 4f       	sbci	r19, 0xFF	; 255
     b16:	df 01       	movw	r26, r30
     b18:	ce 0e       	add	r12, r30
     b1a:	df 1e       	adc	r13, r31
			int index = pointIndices[i];
     b1c:	f9 01       	movw	r30, r18
     b1e:	41 91       	ld	r20, Z+
     b20:	51 91       	ld	r21, Z+
     b22:	9f 01       	movw	r18, r30
			points[i][0] = pvect[index][0];
     b24:	fa 01       	movw	r30, r20
     b26:	ee 0f       	add	r30, r30
     b28:	ff 1f       	adc	r31, r31
     b2a:	ee 0f       	add	r30, r30
     b2c:	ff 1f       	adc	r31, r31
     b2e:	41 e0       	ldi	r20, 0x01	; 1
     b30:	50 e0       	ldi	r21, 0x00	; 0
     b32:	4c 0f       	add	r20, r28
     b34:	5d 1f       	adc	r21, r29
     b36:	e4 0f       	add	r30, r20
     b38:	f5 1f       	adc	r31, r21
     b3a:	40 81       	ld	r20, Z
     b3c:	51 81       	ldd	r21, Z+1	; 0x01
     b3e:	11 96       	adiw	r26, 0x01	; 1
     b40:	5c 93       	st	X, r21
     b42:	4e 93       	st	-X, r20
			points[i][1] = pvect[index][1];
     b44:	42 81       	ldd	r20, Z+2	; 0x02
     b46:	53 81       	ldd	r21, Z+3	; 0x03
     b48:	13 96       	adiw	r26, 0x03	; 3
     b4a:	5c 93       	st	X, r21
     b4c:	4e 93       	st	-X, r20
     b4e:	12 97       	sbiw	r26, 0x02	; 2
     b50:	14 96       	adiw	r26, 0x04	; 4
	}
	
	
	if (numPoints) { //If any points were found 
		int points[numPoints][2]; //an array of the usable points 
		for (int i = 0; i < numPoints; i++) {
     b52:	ac 15       	cp	r26, r12
     b54:	bd 05       	cpc	r27, r13
     b56:	11 f7       	brne	.-60     	; 0xb1c <__stack+0x1d>
			points[i][0] = pvect[index][0];
			points[i][1] = pvect[index][1];
		}
		
		
		m_red(ON);
     b58:	6e 9a       	sbi	0x0d, 6	; 13
     b5a:	76 98       	cbi	0x0e, 6	; 14
		
		float* calcPointer; 
		static float rc[3] = {0,0,0};
		rc[0] = robotCenterPrev[0];
     b5c:	db 01       	movw	r26, r22
     b5e:	4d 90       	ld	r4, X+
     b60:	5d 90       	ld	r5, X+
     b62:	6d 90       	ld	r6, X+
     b64:	7c 90       	ld	r7, X
     b66:	13 97       	sbiw	r26, 0x03	; 3
     b68:	e0 e3       	ldi	r30, 0x30	; 48
     b6a:	f1 e0       	ldi	r31, 0x01	; 1
     b6c:	40 82       	st	Z, r4
     b6e:	51 82       	std	Z+1, r5	; 0x01
     b70:	62 82       	std	Z+2, r6	; 0x02
     b72:	73 82       	std	Z+3, r7	; 0x03
		rc[1] = robotCenterPrev[1];
     b74:	14 96       	adiw	r26, 0x04	; 4
     b76:	4d 90       	ld	r4, X+
     b78:	5d 90       	ld	r5, X+
     b7a:	6d 90       	ld	r6, X+
     b7c:	7c 90       	ld	r7, X
     b7e:	17 97       	sbiw	r26, 0x07	; 7
     b80:	44 82       	std	Z+4, r4	; 0x04
     b82:	55 82       	std	Z+5, r5	; 0x05
     b84:	66 82       	std	Z+6, r6	; 0x06
     b86:	77 82       	std	Z+7, r7	; 0x07
		rc[2] = robotCenterPrev[2];
     b88:	18 96       	adiw	r26, 0x08	; 8
     b8a:	4d 91       	ld	r20, X+
     b8c:	5d 91       	ld	r21, X+
     b8e:	6d 91       	ld	r22, X+
     b90:	7c 91       	ld	r23, X
     b92:	1b 97       	sbiw	r26, 0x0b	; 11
     b94:	40 87       	std	Z+8, r20	; 0x08
     b96:	51 87       	std	Z+9, r21	; 0x09
     b98:	62 87       	std	Z+10, r22	; 0x0a
     b9a:	73 87       	std	Z+11, r23	; 0x0b
		switch (numPoints)
     b9c:	04 97       	sbiw	r24, 0x04	; 4
     b9e:	29 f4       	brne	.+10     	; 0xbaa <__stack+0xab>
		{
			case 4 :
				calcPointer = fourPointCalc(points);
     ba0:	c5 01       	movw	r24, r10
     ba2:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <fourPointCalc>
     ba6:	dc 01       	movw	r26, r24
				break;
     ba8:	02 c0       	rjmp	.+4      	; 0xbae <__stack+0xaf>
				
			case 3 : 
				//calcPointer = threePointCalc(points);
				calcPointer = &rc[0];
     baa:	a0 e3       	ldi	r26, 0x30	; 48
     bac:	b1 e0       	ldi	r27, 0x01	; 1
			default:
				calcPointer = &rc[0];
				
		}
		
		robotCenter[0] = (float)calcPointer[0];
     bae:	4d 91       	ld	r20, X+
     bb0:	5d 91       	ld	r21, X+
     bb2:	6d 91       	ld	r22, X+
     bb4:	7c 91       	ld	r23, X
     bb6:	13 97       	sbiw	r26, 0x03	; 3
     bb8:	e4 e2       	ldi	r30, 0x24	; 36
     bba:	f1 e0       	ldi	r31, 0x01	; 1
     bbc:	40 83       	st	Z, r20
     bbe:	51 83       	std	Z+1, r21	; 0x01
     bc0:	62 83       	std	Z+2, r22	; 0x02
     bc2:	73 83       	std	Z+3, r23	; 0x03
		robotCenter[1] = (float)calcPointer[1];
     bc4:	14 96       	adiw	r26, 0x04	; 4
     bc6:	4d 91       	ld	r20, X+
     bc8:	5d 91       	ld	r21, X+
     bca:	6d 91       	ld	r22, X+
     bcc:	7c 91       	ld	r23, X
     bce:	17 97       	sbiw	r26, 0x07	; 7
     bd0:	44 83       	std	Z+4, r20	; 0x04
     bd2:	55 83       	std	Z+5, r21	; 0x05
     bd4:	66 83       	std	Z+6, r22	; 0x06
     bd6:	77 83       	std	Z+7, r23	; 0x07
		robotCenter[2] = (float)calcPointer[2];
     bd8:	18 96       	adiw	r26, 0x08	; 8
     bda:	8d 91       	ld	r24, X+
     bdc:	9d 91       	ld	r25, X+
     bde:	0d 90       	ld	r0, X+
     be0:	bc 91       	ld	r27, X
     be2:	a0 2d       	mov	r26, r0
     be4:	80 87       	std	Z+8, r24	; 0x08
     be6:	91 87       	std	Z+9, r25	; 0x09
     be8:	a2 87       	std	Z+10, r26	; 0x0a
     bea:	b3 87       	std	Z+11, r27	; 0x0b
     bec:	0f b6       	in	r0, 0x3f	; 63
     bee:	f8 94       	cli
     bf0:	fe be       	out	0x3e, r15	; 62
     bf2:	0f be       	out	0x3f, r0	; 63
     bf4:	ed be       	out	0x3d, r14	; 61
     bf6:	22 c0       	rjmp	.+68     	; 0xc3c <__stack+0x13d>
		
	
	} else { 
		robotCenter[0] = robotCenterPrev[0]; 
     bf8:	fb 01       	movw	r30, r22
     bfa:	80 81       	ld	r24, Z
     bfc:	91 81       	ldd	r25, Z+1	; 0x01
     bfe:	a2 81       	ldd	r26, Z+2	; 0x02
     c00:	b3 81       	ldd	r27, Z+3	; 0x03
     c02:	e4 e2       	ldi	r30, 0x24	; 36
     c04:	f1 e0       	ldi	r31, 0x01	; 1
     c06:	80 83       	st	Z, r24
     c08:	91 83       	std	Z+1, r25	; 0x01
     c0a:	a2 83       	std	Z+2, r26	; 0x02
     c0c:	b3 83       	std	Z+3, r27	; 0x03
		robotCenter[1] = robotCenterPrev[1];
     c0e:	db 01       	movw	r26, r22
     c10:	14 96       	adiw	r26, 0x04	; 4
     c12:	cd 90       	ld	r12, X+
     c14:	dd 90       	ld	r13, X+
     c16:	ed 90       	ld	r14, X+
     c18:	fc 90       	ld	r15, X
     c1a:	17 97       	sbiw	r26, 0x07	; 7
     c1c:	c4 82       	std	Z+4, r12	; 0x04
     c1e:	d5 82       	std	Z+5, r13	; 0x05
     c20:	e6 82       	std	Z+6, r14	; 0x06
     c22:	f7 82       	std	Z+7, r15	; 0x07
		robotCenter[2] = robotCenterPrev[2];
     c24:	18 96       	adiw	r26, 0x08	; 8
     c26:	4d 91       	ld	r20, X+
     c28:	5d 91       	ld	r21, X+
     c2a:	6d 91       	ld	r22, X+
     c2c:	7c 91       	ld	r23, X
     c2e:	1b 97       	sbiw	r26, 0x0b	; 11
     c30:	40 87       	std	Z+8, r20	; 0x08
     c32:	51 87       	std	Z+9, r21	; 0x09
     c34:	62 87       	std	Z+10, r22	; 0x0a
     c36:	73 87       	std	Z+11, r23	; 0x0b
		m_red(OFF);	
     c38:	6e 9a       	sbi	0x0d, 6	; 13
     c3a:	76 9a       	sbi	0x0e, 6	; 14
	
	return robotCenter;
	
	
	
}
     c3c:	84 e2       	ldi	r24, 0x24	; 36
     c3e:	91 e0       	ldi	r25, 0x01	; 1
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	f8 94       	cli
     c44:	1e bf       	out	0x3e, r17	; 62
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	0d bf       	out	0x3d, r16	; 61
     c4a:	68 96       	adiw	r28, 0x18	; 24
     c4c:	0f b6       	in	r0, 0x3f	; 63
     c4e:	f8 94       	cli
     c50:	de bf       	out	0x3e, r29	; 62
     c52:	0f be       	out	0x3f, r0	; 63
     c54:	cd bf       	out	0x3d, r28	; 61
     c56:	df 91       	pop	r29
     c58:	cf 91       	pop	r28
     c5a:	1f 91       	pop	r17
     c5c:	0f 91       	pop	r16
     c5e:	ff 90       	pop	r15
     c60:	ef 90       	pop	r14
     c62:	df 90       	pop	r13
     c64:	cf 90       	pop	r12
     c66:	bf 90       	pop	r11
     c68:	af 90       	pop	r10
     c6a:	7f 90       	pop	r7
     c6c:	6f 90       	pop	r6
     c6e:	5f 90       	pop	r5
     c70:	4f 90       	pop	r4
     c72:	08 95       	ret

00000c74 <init>:
}


void init() 
{
	m_red(ON);
     c74:	6e 9a       	sbi	0x0d, 6	; 13
     c76:	76 98       	cbi	0x0e, 6	; 14
	while(!m_wii_open());
     c78:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <m_wii_open>
     c7c:	88 23       	and	r24, r24
     c7e:	e1 f3       	breq	.-8      	; 0xc78 <init+0x4>
	m_red(OFF);
     c80:	6e 9a       	sbi	0x0d, 6	; 13
     c82:	76 9a       	sbi	0x0e, 6	; 14
	
	m_usb_init();
     c84:	0e 94 f5 06 	call	0xdea	; 0xdea <m_usb_init>
     c88:	08 95       	ret

00000c8a <main>:
#include "localization_function.h"

void init(); 

int main(void)
{	
     c8a:	cf 93       	push	r28
     c8c:	df 93       	push	r29
     c8e:	cd b7       	in	r28, 0x3d	; 61
     c90:	de b7       	in	r29, 0x3e	; 62
     c92:	e4 97       	sbiw	r28, 0x34	; 52
     c94:	0f b6       	in	r0, 0x3f	; 63
     c96:	f8 94       	cli
     c98:	de bf       	out	0x3e, r29	; 62
     c9a:	0f be       	out	0x3f, r0	; 63
     c9c:	cd bf       	out	0x3d, r28	; 61
	m_clockdivide(0);
     c9e:	e1 e6       	ldi	r30, 0x61	; 97
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 e8       	ldi	r24, 0x80	; 128
     ca4:	80 83       	st	Z, r24
     ca6:	10 82       	st	Z, r1
	
	init();
     ca8:	0e 94 3a 06 	call	0xc74	; 0xc74 <init>
	m_green(ON);
     cac:	6a 9a       	sbi	0x0d, 2	; 13
     cae:	72 98       	cbi	0x0e, 2	; 14
	unsigned int blobs[12];
	char rx_buffer;

	float robotCenterPrev[3] = {1023, 1023, 360};
     cb0:	8c e0       	ldi	r24, 0x0C	; 12
     cb2:	e7 e0       	ldi	r30, 0x07	; 7
     cb4:	f1 e0       	ldi	r31, 0x01	; 1
     cb6:	de 01       	movw	r26, r28
     cb8:	59 96       	adiw	r26, 0x19	; 25
     cba:	01 90       	ld	r0, Z+
     cbc:	0d 92       	st	X+, r0
     cbe:	8a 95       	dec	r24
     cc0:	e1 f7       	brne	.-8      	; 0xcba <main+0x30>
		
		m_usb_rx_flush();  						// Flush the buffer
		
		if(rx_buffer == 1)						// MATLAB is expecting IMU data
		{
			m_red(TOGGLE);
     cc2:	68 94       	set
     cc4:	ee 24       	eor	r14, r14
     cc6:	e6 f8       	bld	r14, 6
	float* robotCenter;
	
    while (1) 
    {
		
		m_wii_read(blobs);
     cc8:	ce 01       	movw	r24, r28
     cca:	01 96       	adiw	r24, 0x01	; 1
     ccc:	0e 94 15 0b 	call	0x162a	; 0x162a <m_wii_read>
		unsigned int x1 = blobs[0];
		unsigned int y1 = blobs[1];
     cd0:	6b 81       	ldd	r22, Y+3	; 0x03
     cd2:	7c 81       	ldd	r23, Y+4	; 0x04
		unsigned int x2 = blobs[3];
     cd4:	0f 81       	ldd	r16, Y+7	; 0x07
     cd6:	18 85       	ldd	r17, Y+8	; 0x08
		unsigned int y2 = blobs[4];
     cd8:	49 85       	ldd	r20, Y+9	; 0x09
     cda:	5a 85       	ldd	r21, Y+10	; 0x0a
		unsigned int x3 = blobs[6];
     cdc:	ad 85       	ldd	r26, Y+13	; 0x0d
     cde:	be 85       	ldd	r27, Y+14	; 0x0e
		unsigned int y3 = blobs[7];
     ce0:	2f 85       	ldd	r18, Y+15	; 0x0f
     ce2:	38 89       	ldd	r19, Y+16	; 0x10
		unsigned int x4 = blobs[9];
     ce4:	eb 89       	ldd	r30, Y+19	; 0x13
     ce6:	fc 89       	ldd	r31, Y+20	; 0x14
		unsigned int y4 = blobs[10];
     ce8:	8d 89       	ldd	r24, Y+21	; 0x15
     cea:	9e 89       	ldd	r25, Y+22	; 0x16
		
		int rawStarData[8] = {x1, x2, x3, x4, y1, y2, y3, y4};
     cec:	c9 80       	ldd	r12, Y+1	; 0x01
     cee:	da 80       	ldd	r13, Y+2	; 0x02
     cf0:	de a2       	std	Y+38, r13	; 0x26
     cf2:	cd a2       	std	Y+37, r12	; 0x25
     cf4:	18 a7       	std	Y+40, r17	; 0x28
     cf6:	0f a3       	std	Y+39, r16	; 0x27
     cf8:	ba a7       	std	Y+42, r27	; 0x2a
     cfa:	a9 a7       	std	Y+41, r26	; 0x29
     cfc:	fc a7       	std	Y+44, r31	; 0x2c
     cfe:	eb a7       	std	Y+43, r30	; 0x2b
     d00:	7e a7       	std	Y+46, r23	; 0x2e
     d02:	6d a7       	std	Y+45, r22	; 0x2d
     d04:	58 ab       	std	Y+48, r21	; 0x30
     d06:	4f a7       	std	Y+47, r20	; 0x2f
     d08:	3a ab       	std	Y+50, r19	; 0x32
     d0a:	29 ab       	std	Y+49, r18	; 0x31
     d0c:	9c ab       	std	Y+52, r25	; 0x34
     d0e:	8b ab       	std	Y+51, r24	; 0x33
		robotCenter = localization_calc(rawStarData, robotCenterPrev);
     d10:	be 01       	movw	r22, r28
     d12:	67 5e       	subi	r22, 0xE7	; 231
     d14:	7f 4f       	sbci	r23, 0xFF	; 255
     d16:	ce 01       	movw	r24, r28
     d18:	85 96       	adiw	r24, 0x25	; 37
     d1a:	0e 94 10 05 	call	0xa20	; 0xa20 <localization_calc>
     d1e:	8c 01       	movw	r16, r24
		
		robotCenterPrev[0] = robotCenter[0];
     d20:	fc 01       	movw	r30, r24
     d22:	80 81       	ld	r24, Z
     d24:	91 81       	ldd	r25, Z+1	; 0x01
     d26:	a2 81       	ldd	r26, Z+2	; 0x02
     d28:	b3 81       	ldd	r27, Z+3	; 0x03
     d2a:	89 8f       	std	Y+25, r24	; 0x19
     d2c:	9a 8f       	std	Y+26, r25	; 0x1a
     d2e:	ab 8f       	std	Y+27, r26	; 0x1b
     d30:	bc 8f       	std	Y+28, r27	; 0x1c
		robotCenterPrev[1] = robotCenter[1];
     d32:	84 81       	ldd	r24, Z+4	; 0x04
     d34:	95 81       	ldd	r25, Z+5	; 0x05
     d36:	a6 81       	ldd	r26, Z+6	; 0x06
     d38:	b7 81       	ldd	r27, Z+7	; 0x07
     d3a:	8d 8f       	std	Y+29, r24	; 0x1d
     d3c:	9e 8f       	std	Y+30, r25	; 0x1e
     d3e:	af 8f       	std	Y+31, r26	; 0x1f
     d40:	b8 a3       	std	Y+32, r27	; 0x20
		robotCenterPrev[2] = robotCenter[2];
     d42:	80 85       	ldd	r24, Z+8	; 0x08
     d44:	91 85       	ldd	r25, Z+9	; 0x09
     d46:	a2 85       	ldd	r26, Z+10	; 0x0a
     d48:	b3 85       	ldd	r27, Z+11	; 0x0b
     d4a:	89 a3       	std	Y+33, r24	; 0x21
     d4c:	9a a3       	std	Y+34, r25	; 0x22
     d4e:	ab a3       	std	Y+35, r26	; 0x23
     d50:	bc a3       	std	Y+36, r27	; 0x24
		
 		while(!m_usb_rx_available());  			// Wait for an indication from the computer
     d52:	0e 94 2c 07 	call	0xe58	; 0xe58 <m_usb_rx_available>
     d56:	88 23       	and	r24, r24
     d58:	e1 f3       	breq	.-8      	; 0xd52 <main+0xc8>
		rx_buffer = m_usb_rx_char();  			// Read the packet from the computer
     d5a:	0e 94 0e 07 	call	0xe1c	; 0xe1c <m_usb_rx_char>
     d5e:	f8 2e       	mov	r15, r24
		
		m_usb_rx_flush();  						// Flush the buffer
     d60:	0e 94 3b 07 	call	0xe76	; 0xe76 <m_usb_rx_flush>
		
		if(rx_buffer == 1)						// MATLAB is expecting IMU data
     d64:	f1 e0       	ldi	r31, 0x01	; 1
     d66:	ff 12       	cpse	r15, r31
     d68:	af cf       	rjmp	.-162    	; 0xcc8 <main+0x3e>
		{
			m_red(TOGGLE);
     d6a:	6e 9a       	sbi	0x0d, 6	; 13
     d6c:	8e b1       	in	r24, 0x0e	; 14
     d6e:	8e 25       	eor	r24, r14
     d70:	8e b9       	out	0x0e, r24	; 14
			m_usb_tx_int((int)robotCenter[0]);
     d72:	f8 01       	movw	r30, r16
     d74:	60 81       	ld	r22, Z
     d76:	71 81       	ldd	r23, Z+1	; 0x01
     d78:	82 81       	ldd	r24, Z+2	; 0x02
     d7a:	93 81       	ldd	r25, Z+3	; 0x03
     d7c:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fixsfsi>
     d80:	cb 01       	movw	r24, r22
     d82:	0e 94 89 09 	call	0x1312	; 0x1312 <m_usb_tx_int>
			m_usb_tx_string(" ");
     d86:	8c ef       	ldi	r24, 0xFC	; 252
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	0e 94 6d 09 	call	0x12da	; 0x12da <print_P>
			m_usb_tx_int((int)robotCenter[1]);
     d8e:	f8 01       	movw	r30, r16
     d90:	64 81       	ldd	r22, Z+4	; 0x04
     d92:	75 81       	ldd	r23, Z+5	; 0x05
     d94:	86 81       	ldd	r24, Z+6	; 0x06
     d96:	97 81       	ldd	r25, Z+7	; 0x07
     d98:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fixsfsi>
     d9c:	cb 01       	movw	r24, r22
     d9e:	0e 94 89 09 	call	0x1312	; 0x1312 <m_usb_tx_int>
			m_usb_tx_string(" ");
     da2:	8a ef       	ldi	r24, 0xFA	; 250
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	0e 94 6d 09 	call	0x12da	; 0x12da <print_P>
			m_usb_tx_int((int)robotCenter[2]);
     daa:	f8 01       	movw	r30, r16
     dac:	60 85       	ldd	r22, Z+8	; 0x08
     dae:	71 85       	ldd	r23, Z+9	; 0x09
     db0:	82 85       	ldd	r24, Z+10	; 0x0a
     db2:	93 85       	ldd	r25, Z+11	; 0x0b
     db4:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fixsfsi>
     db8:	cb 01       	movw	r24, r22
     dba:	0e 94 89 09 	call	0x1312	; 0x1312 <m_usb_tx_int>
			m_usb_tx_string("\n");
     dbe:	88 ef       	ldi	r24, 0xF8	; 248
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	0e 94 6d 09 	call	0x12da	; 0x12da <print_P>

		}
		
		
    }
     dc6:	80 cf       	rjmp	.-256    	; 0xcc8 <main+0x3e>

00000dc8 <m_bus_init>:
     dc8:	58 9a       	sbi	0x0b, 0	; 11
     dca:	59 9a       	sbi	0x0b, 1	; 11
     dcc:	5a 9a       	sbi	0x0b, 2	; 11
     dce:	8c e0       	ldi	r24, 0x0C	; 12
     dd0:	80 93 b8 00 	sts	0x00B8, r24
     dd4:	e9 e6       	ldi	r30, 0x69	; 105
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	80 81       	ld	r24, Z
     dda:	80 62       	ori	r24, 0x20	; 32
     ddc:	80 83       	st	Z, r24
     dde:	80 81       	ld	r24, Z
     de0:	8f 7e       	andi	r24, 0xEF	; 239
     de2:	80 83       	st	Z, r24
     de4:	ea 9a       	sbi	0x1d, 2	; 29
     de6:	78 94       	sei
     de8:	08 95       	ret

00000dea <m_usb_init>:
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	80 93 d7 00 	sts	0x00D7, r24
     df0:	80 ea       	ldi	r24, 0xA0	; 160
     df2:	80 93 d8 00 	sts	0x00D8, r24
     df6:	82 e1       	ldi	r24, 0x12	; 18
     df8:	89 bd       	out	0x29, r24	; 41
     dfa:	09 b4       	in	r0, 0x29	; 41
     dfc:	00 fe       	sbrs	r0, 0
     dfe:	fd cf       	rjmp	.-6      	; 0xdfa <m_usb_init+0x10>
     e00:	80 e9       	ldi	r24, 0x90	; 144
     e02:	80 93 d8 00 	sts	0x00D8, r24
     e06:	10 92 e0 00 	sts	0x00E0, r1
     e0a:	10 92 3f 01 	sts	0x013F, r1
     e0e:	10 92 3c 01 	sts	0x013C, r1
     e12:	8c e0       	ldi	r24, 0x0C	; 12
     e14:	80 93 e2 00 	sts	0x00E2, r24
     e18:	78 94       	sei
     e1a:	08 95       	ret

00000e1c <m_usb_rx_char>:
     e1c:	9f b7       	in	r25, 0x3f	; 63
     e1e:	f8 94       	cli
     e20:	80 91 3f 01 	lds	r24, 0x013F
     e24:	81 11       	cpse	r24, r1
     e26:	03 c0       	rjmp	.+6      	; 0xe2e <m_usb_rx_char+0x12>
     e28:	9f bf       	out	0x3f, r25	; 63
     e2a:	8f ef       	ldi	r24, 0xFF	; 255
     e2c:	08 95       	ret
     e2e:	83 e0       	ldi	r24, 0x03	; 3
     e30:	80 93 e9 00 	sts	0x00E9, r24
     e34:	80 91 e8 00 	lds	r24, 0x00E8
     e38:	85 fd       	sbrc	r24, 5
     e3a:	03 c0       	rjmp	.+6      	; 0xe42 <m_usb_rx_char+0x26>
     e3c:	9f bf       	out	0x3f, r25	; 63
     e3e:	8f ef       	ldi	r24, 0xFF	; 255
     e40:	08 95       	ret
     e42:	80 91 f1 00 	lds	r24, 0x00F1
     e46:	20 91 e8 00 	lds	r18, 0x00E8
     e4a:	25 fd       	sbrc	r18, 5
     e4c:	03 c0       	rjmp	.+6      	; 0xe54 <m_usb_rx_char+0x38>
     e4e:	2b e6       	ldi	r18, 0x6B	; 107
     e50:	20 93 e8 00 	sts	0x00E8, r18
     e54:	9f bf       	out	0x3f, r25	; 63
     e56:	08 95       	ret

00000e58 <m_usb_rx_available>:
     e58:	9f b7       	in	r25, 0x3f	; 63
     e5a:	f8 94       	cli
     e5c:	80 91 3f 01 	lds	r24, 0x013F
     e60:	88 23       	and	r24, r24
     e62:	31 f0       	breq	.+12     	; 0xe70 <m_usb_rx_available+0x18>
     e64:	83 e0       	ldi	r24, 0x03	; 3
     e66:	80 93 e9 00 	sts	0x00E9, r24
     e6a:	80 91 f2 00 	lds	r24, 0x00F2
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <m_usb_rx_available+0x1a>
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	9f bf       	out	0x3f, r25	; 63
     e74:	08 95       	ret

00000e76 <m_usb_rx_flush>:
     e76:	80 91 3f 01 	lds	r24, 0x013F
     e7a:	88 23       	and	r24, r24
     e7c:	89 f0       	breq	.+34     	; 0xea0 <m_usb_rx_flush+0x2a>
     e7e:	2f b7       	in	r18, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	83 e0       	ldi	r24, 0x03	; 3
     e84:	80 93 e9 00 	sts	0x00E9, r24
     e88:	80 91 e8 00 	lds	r24, 0x00E8
     e8c:	85 ff       	sbrs	r24, 5
     e8e:	07 c0       	rjmp	.+14     	; 0xe9e <m_usb_rx_flush+0x28>
     e90:	e8 ee       	ldi	r30, 0xE8	; 232
     e92:	f0 e0       	ldi	r31, 0x00	; 0
     e94:	9b e6       	ldi	r25, 0x6B	; 107
     e96:	90 83       	st	Z, r25
     e98:	80 81       	ld	r24, Z
     e9a:	85 fd       	sbrc	r24, 5
     e9c:	fc cf       	rjmp	.-8      	; 0xe96 <m_usb_rx_flush+0x20>
     e9e:	2f bf       	out	0x3f, r18	; 63
     ea0:	08 95       	ret

00000ea2 <m_usb_tx_char>:
     ea2:	cf 93       	push	r28
     ea4:	df 93       	push	r29
     ea6:	90 91 3f 01 	lds	r25, 0x013F
     eaa:	99 23       	and	r25, r25
     eac:	09 f4       	brne	.+2      	; 0xeb0 <m_usb_tx_char+0xe>
     eae:	4c c0       	rjmp	.+152    	; 0xf48 <m_usb_tx_char+0xa6>
     eb0:	9f b7       	in	r25, 0x3f	; 63
     eb2:	f8 94       	cli
     eb4:	24 e0       	ldi	r18, 0x04	; 4
     eb6:	20 93 e9 00 	sts	0x00E9, r18
     eba:	20 91 3d 01 	lds	r18, 0x013D
     ebe:	22 23       	and	r18, r18
     ec0:	49 f0       	breq	.+18     	; 0xed4 <m_usb_tx_char+0x32>
     ec2:	20 91 e8 00 	lds	r18, 0x00E8
     ec6:	25 fd       	sbrc	r18, 5
     ec8:	03 c0       	rjmp	.+6      	; 0xed0 <m_usb_tx_char+0x2e>
     eca:	9f bf       	out	0x3f, r25	; 63
     ecc:	8f ef       	ldi	r24, 0xFF	; 255
     ece:	41 c0       	rjmp	.+130    	; 0xf52 <m_usb_tx_char+0xb0>
     ed0:	10 92 3d 01 	sts	0x013D, r1
     ed4:	30 91 e4 00 	lds	r19, 0x00E4
     ed8:	37 5e       	subi	r19, 0xE7	; 231
     eda:	20 91 e8 00 	lds	r18, 0x00E8
     ede:	25 fd       	sbrc	r18, 5
     ee0:	24 c0       	rjmp	.+72     	; 0xf2a <m_usb_tx_char+0x88>
     ee2:	9f bf       	out	0x3f, r25	; 63
     ee4:	90 91 e4 00 	lds	r25, 0x00E4
     ee8:	93 17       	cp	r25, r19
     eea:	81 f0       	breq	.+32     	; 0xf0c <m_usb_tx_char+0x6a>
     eec:	90 91 3f 01 	lds	r25, 0x013F
     ef0:	99 23       	and	r25, r25
     ef2:	61 f1       	breq	.+88     	; 0xf4c <m_usb_tx_char+0xaa>
     ef4:	a9 ee       	ldi	r26, 0xE9	; 233
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	44 e0       	ldi	r20, 0x04	; 4
     efa:	e8 ee       	ldi	r30, 0xE8	; 232
     efc:	f0 e0       	ldi	r31, 0x00	; 0
     efe:	c4 ee       	ldi	r28, 0xE4	; 228
     f00:	d0 e0       	ldi	r29, 0x00	; 0
     f02:	0d c0       	rjmp	.+26     	; 0xf1e <m_usb_tx_char+0x7c>
     f04:	9f bf       	out	0x3f, r25	; 63
     f06:	98 81       	ld	r25, Y
     f08:	93 13       	cpse	r25, r19
     f0a:	05 c0       	rjmp	.+10     	; 0xf16 <m_usb_tx_char+0x74>
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	80 93 3d 01 	sts	0x013D, r24
     f12:	8f ef       	ldi	r24, 0xFF	; 255
     f14:	1e c0       	rjmp	.+60     	; 0xf52 <m_usb_tx_char+0xb0>
     f16:	90 91 3f 01 	lds	r25, 0x013F
     f1a:	99 23       	and	r25, r25
     f1c:	c9 f0       	breq	.+50     	; 0xf50 <m_usb_tx_char+0xae>
     f1e:	9f b7       	in	r25, 0x3f	; 63
     f20:	f8 94       	cli
     f22:	4c 93       	st	X, r20
     f24:	20 81       	ld	r18, Z
     f26:	25 ff       	sbrs	r18, 5
     f28:	ed cf       	rjmp	.-38     	; 0xf04 <m_usb_tx_char+0x62>
     f2a:	80 93 f1 00 	sts	0x00F1, r24
     f2e:	80 91 e8 00 	lds	r24, 0x00E8
     f32:	85 fd       	sbrc	r24, 5
     f34:	03 c0       	rjmp	.+6      	; 0xf3c <m_usb_tx_char+0x9a>
     f36:	8a e3       	ldi	r24, 0x3A	; 58
     f38:	80 93 e8 00 	sts	0x00E8, r24
     f3c:	85 e0       	ldi	r24, 0x05	; 5
     f3e:	80 93 3e 01 	sts	0x013E, r24
     f42:	9f bf       	out	0x3f, r25	; 63
     f44:	80 e0       	ldi	r24, 0x00	; 0
     f46:	05 c0       	rjmp	.+10     	; 0xf52 <m_usb_tx_char+0xb0>
     f48:	8f ef       	ldi	r24, 0xFF	; 255
     f4a:	03 c0       	rjmp	.+6      	; 0xf52 <m_usb_tx_char+0xb0>
     f4c:	8f ef       	ldi	r24, 0xFF	; 255
     f4e:	01 c0       	rjmp	.+2      	; 0xf52 <m_usb_tx_char+0xb0>
     f50:	8f ef       	ldi	r24, 0xFF	; 255
     f52:	df 91       	pop	r29
     f54:	cf 91       	pop	r28
     f56:	08 95       	ret

00000f58 <__vector_10>:
     f58:	1f 92       	push	r1
     f5a:	0f 92       	push	r0
     f5c:	0f b6       	in	r0, 0x3f	; 63
     f5e:	0f 92       	push	r0
     f60:	11 24       	eor	r1, r1
     f62:	8f 93       	push	r24
     f64:	9f 93       	push	r25
     f66:	ef 93       	push	r30
     f68:	ff 93       	push	r31
     f6a:	e1 ee       	ldi	r30, 0xE1	; 225
     f6c:	f0 e0       	ldi	r31, 0x00	; 0
     f6e:	80 81       	ld	r24, Z
     f70:	10 82       	st	Z, r1
     f72:	83 ff       	sbrs	r24, 3
     f74:	11 c0       	rjmp	.+34     	; 0xf98 <__vector_10+0x40>
     f76:	10 92 e9 00 	sts	0x00E9, r1
     f7a:	91 e0       	ldi	r25, 0x01	; 1
     f7c:	90 93 eb 00 	sts	0x00EB, r25
     f80:	10 92 ec 00 	sts	0x00EC, r1
     f84:	92 e1       	ldi	r25, 0x12	; 18
     f86:	90 93 ed 00 	sts	0x00ED, r25
     f8a:	98 e0       	ldi	r25, 0x08	; 8
     f8c:	90 93 f0 00 	sts	0x00F0, r25
     f90:	10 92 3f 01 	sts	0x013F, r1
     f94:	10 92 3c 01 	sts	0x013C, r1
     f98:	82 ff       	sbrs	r24, 2
     f9a:	13 c0       	rjmp	.+38     	; 0xfc2 <__vector_10+0x6a>
     f9c:	80 91 3f 01 	lds	r24, 0x013F
     fa0:	88 23       	and	r24, r24
     fa2:	79 f0       	breq	.+30     	; 0xfc2 <__vector_10+0x6a>
     fa4:	80 91 3e 01 	lds	r24, 0x013E
     fa8:	88 23       	and	r24, r24
     faa:	59 f0       	breq	.+22     	; 0xfc2 <__vector_10+0x6a>
     fac:	81 50       	subi	r24, 0x01	; 1
     fae:	80 93 3e 01 	sts	0x013E, r24
     fb2:	81 11       	cpse	r24, r1
     fb4:	06 c0       	rjmp	.+12     	; 0xfc2 <__vector_10+0x6a>
     fb6:	84 e0       	ldi	r24, 0x04	; 4
     fb8:	80 93 e9 00 	sts	0x00E9, r24
     fbc:	8a e3       	ldi	r24, 0x3A	; 58
     fbe:	80 93 e8 00 	sts	0x00E8, r24
     fc2:	ff 91       	pop	r31
     fc4:	ef 91       	pop	r30
     fc6:	9f 91       	pop	r25
     fc8:	8f 91       	pop	r24
     fca:	0f 90       	pop	r0
     fcc:	0f be       	out	0x3f, r0	; 63
     fce:	0f 90       	pop	r0
     fd0:	1f 90       	pop	r1
     fd2:	18 95       	reti

00000fd4 <__vector_11>:
     fd4:	1f 92       	push	r1
     fd6:	0f 92       	push	r0
     fd8:	0f b6       	in	r0, 0x3f	; 63
     fda:	0f 92       	push	r0
     fdc:	11 24       	eor	r1, r1
     fde:	0f 93       	push	r16
     fe0:	1f 93       	push	r17
     fe2:	2f 93       	push	r18
     fe4:	3f 93       	push	r19
     fe6:	4f 93       	push	r20
     fe8:	5f 93       	push	r21
     fea:	6f 93       	push	r22
     fec:	7f 93       	push	r23
     fee:	8f 93       	push	r24
     ff0:	9f 93       	push	r25
     ff2:	af 93       	push	r26
     ff4:	bf 93       	push	r27
     ff6:	cf 93       	push	r28
     ff8:	df 93       	push	r29
     ffa:	ef 93       	push	r30
     ffc:	ff 93       	push	r31
     ffe:	10 92 e9 00 	sts	0x00E9, r1
    1002:	80 91 e8 00 	lds	r24, 0x00E8
    1006:	83 ff       	sbrs	r24, 3
    1008:	4c c1       	rjmp	.+664    	; 0x12a2 <__vector_11+0x2ce>
    100a:	e1 ef       	ldi	r30, 0xF1	; 241
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	60 81       	ld	r22, Z
    1010:	80 81       	ld	r24, Z
    1012:	20 81       	ld	r18, Z
    1014:	90 81       	ld	r25, Z
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	39 2b       	or	r19, r25
    101a:	40 81       	ld	r20, Z
    101c:	90 81       	ld	r25, Z
    101e:	50 e0       	ldi	r21, 0x00	; 0
    1020:	59 2b       	or	r21, r25
    1022:	70 81       	ld	r23, Z
    1024:	c0 81       	ld	r28, Z
    1026:	92 ef       	ldi	r25, 0xF2	; 242
    1028:	90 93 e8 00 	sts	0x00E8, r25
    102c:	86 30       	cpi	r24, 0x06	; 6
    102e:	09 f0       	breq	.+2      	; 0x1032 <__vector_11+0x5e>
    1030:	58 c0       	rjmp	.+176    	; 0x10e2 <__vector_11+0x10e>
    1032:	04 c0       	rjmp	.+8      	; 0x103c <__vector_11+0x68>
    1034:	81 e2       	ldi	r24, 0x21	; 33
    1036:	80 93 eb 00 	sts	0x00EB, r24
    103a:	3a c1       	rjmp	.+628    	; 0x12b0 <__vector_11+0x2dc>
    103c:	66 e0       	ldi	r22, 0x06	; 6
    103e:	8e ef       	ldi	r24, 0xFE	; 254
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	fc 01       	movw	r30, r24
    1044:	a5 91       	lpm	r26, Z+
    1046:	b4 91       	lpm	r27, Z
    1048:	2a 17       	cp	r18, r26
    104a:	3b 07       	cpc	r19, r27
    104c:	11 f0       	breq	.+4      	; 0x1052 <__vector_11+0x7e>
    104e:	07 96       	adiw	r24, 0x07	; 7
    1050:	23 c0       	rjmp	.+70     	; 0x1098 <__vector_11+0xc4>
    1052:	fc 01       	movw	r30, r24
    1054:	32 96       	adiw	r30, 0x02	; 2
    1056:	a5 91       	lpm	r26, Z+
    1058:	b4 91       	lpm	r27, Z
    105a:	4a 17       	cp	r20, r26
    105c:	5b 07       	cpc	r21, r27
    105e:	11 f0       	breq	.+4      	; 0x1064 <__vector_11+0x90>
    1060:	07 96       	adiw	r24, 0x07	; 7
    1062:	1a c0       	rjmp	.+52     	; 0x1098 <__vector_11+0xc4>
    1064:	fc 01       	movw	r30, r24
    1066:	34 96       	adiw	r30, 0x04	; 4
    1068:	45 91       	lpm	r20, Z+
    106a:	54 91       	lpm	r21, Z
    106c:	fc 01       	movw	r30, r24
    106e:	36 96       	adiw	r30, 0x06	; 6
    1070:	24 91       	lpm	r18, Z
    1072:	87 2f       	mov	r24, r23
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	9c 2b       	or	r25, r28
    1078:	8f 3f       	cpi	r24, 0xFF	; 255
    107a:	91 05       	cpc	r25, r1
    107c:	19 f0       	breq	.+6      	; 0x1084 <__vector_11+0xb0>
    107e:	10 f0       	brcs	.+4      	; 0x1084 <__vector_11+0xb0>
    1080:	8f ef       	ldi	r24, 0xFF	; 255
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	82 17       	cp	r24, r18
    1086:	08 f4       	brcc	.+2      	; 0x108a <__vector_11+0xb6>
    1088:	28 2f       	mov	r18, r24
    108a:	a8 ee       	ldi	r26, 0xE8	; 232
    108c:	b0 e0       	ldi	r27, 0x00	; 0
    108e:	70 e1       	ldi	r23, 0x10	; 16
    1090:	6e ef       	ldi	r22, 0xFE	; 254
    1092:	c1 ef       	ldi	r28, 0xF1	; 241
    1094:	d0 e0       	ldi	r29, 0x00	; 0
    1096:	03 c0       	rjmp	.+6      	; 0x109e <__vector_11+0xca>
    1098:	61 50       	subi	r22, 0x01	; 1
    109a:	99 f6       	brne	.-90     	; 0x1042 <__vector_11+0x6e>
    109c:	cb cf       	rjmp	.-106    	; 0x1034 <__vector_11+0x60>
    109e:	8c 91       	ld	r24, X
    10a0:	98 2f       	mov	r25, r24
    10a2:	95 70       	andi	r25, 0x05	; 5
    10a4:	e1 f3       	breq	.-8      	; 0x109e <__vector_11+0xca>
    10a6:	82 fd       	sbrc	r24, 2
    10a8:	03 c1       	rjmp	.+518    	; 0x12b0 <__vector_11+0x2dc>
    10aa:	32 2f       	mov	r19, r18
    10ac:	21 31       	cpi	r18, 0x11	; 17
    10ae:	08 f0       	brcs	.+2      	; 0x10b2 <__vector_11+0xde>
    10b0:	37 2f       	mov	r19, r23
    10b2:	33 23       	and	r19, r19
    10b4:	09 f4       	brne	.+2      	; 0x10b8 <__vector_11+0xe4>
    10b6:	f9 c0       	rjmp	.+498    	; 0x12aa <__vector_11+0x2d6>
    10b8:	fa 01       	movw	r30, r20
    10ba:	83 2f       	mov	r24, r19
    10bc:	94 91       	lpm	r25, Z
    10be:	98 83       	st	Y, r25
    10c0:	81 50       	subi	r24, 0x01	; 1
    10c2:	31 96       	adiw	r30, 0x01	; 1
    10c4:	81 11       	cpse	r24, r1
    10c6:	fa cf       	rjmp	.-12     	; 0x10bc <__vector_11+0xe8>
    10c8:	8f ef       	ldi	r24, 0xFF	; 255
    10ca:	83 0f       	add	r24, r19
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	01 96       	adiw	r24, 0x01	; 1
    10d0:	48 0f       	add	r20, r24
    10d2:	59 1f       	adc	r21, r25
    10d4:	23 1b       	sub	r18, r19
    10d6:	6c 93       	st	X, r22
    10d8:	21 11       	cpse	r18, r1
    10da:	e1 cf       	rjmp	.-62     	; 0x109e <__vector_11+0xca>
    10dc:	30 31       	cpi	r19, 0x10	; 16
    10de:	f9 f2       	breq	.-66     	; 0x109e <__vector_11+0xca>
    10e0:	e7 c0       	rjmp	.+462    	; 0x12b0 <__vector_11+0x2dc>
    10e2:	85 30       	cpi	r24, 0x05	; 5
    10e4:	61 f4       	brne	.+24     	; 0x10fe <__vector_11+0x12a>
    10e6:	8e ef       	ldi	r24, 0xFE	; 254
    10e8:	80 93 e8 00 	sts	0x00E8, r24
    10ec:	e8 ee       	ldi	r30, 0xE8	; 232
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	80 81       	ld	r24, Z
    10f2:	80 ff       	sbrs	r24, 0
    10f4:	fd cf       	rjmp	.-6      	; 0x10f0 <__vector_11+0x11c>
    10f6:	20 68       	ori	r18, 0x80	; 128
    10f8:	20 93 e3 00 	sts	0x00E3, r18
    10fc:	d9 c0       	rjmp	.+434    	; 0x12b0 <__vector_11+0x2dc>
    10fe:	89 30       	cpi	r24, 0x09	; 9
    1100:	09 f0       	breq	.+2      	; 0x1104 <__vector_11+0x130>
    1102:	35 c0       	rjmp	.+106    	; 0x116e <__vector_11+0x19a>
    1104:	61 11       	cpse	r22, r1
    1106:	cd c0       	rjmp	.+410    	; 0x12a2 <__vector_11+0x2ce>
    1108:	20 93 3f 01 	sts	0x013F, r18
    110c:	10 92 3c 01 	sts	0x013C, r1
    1110:	10 92 3e 01 	sts	0x013E, r1
    1114:	8e ef       	ldi	r24, 0xFE	; 254
    1116:	80 93 e8 00 	sts	0x00E8, r24
    111a:	81 e0       	ldi	r24, 0x01	; 1
    111c:	27 ea       	ldi	r18, 0xA7	; 167
    111e:	31 e0       	ldi	r19, 0x01	; 1
    1120:	c9 ee       	ldi	r28, 0xE9	; 233
    1122:	d0 e0       	ldi	r29, 0x00	; 0
    1124:	ab ee       	ldi	r26, 0xEB	; 235
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	0c ee       	ldi	r16, 0xEC	; 236
    112a:	10 e0       	ldi	r17, 0x00	; 0
    112c:	6d ee       	ldi	r22, 0xED	; 237
    112e:	70 e0       	ldi	r23, 0x00	; 0
    1130:	88 83       	st	Y, r24
    1132:	a9 01       	movw	r20, r18
    1134:	4f 5f       	subi	r20, 0xFF	; 255
    1136:	5f 4f       	sbci	r21, 0xFF	; 255
    1138:	f9 01       	movw	r30, r18
    113a:	94 91       	lpm	r25, Z
    113c:	9c 93       	st	X, r25
    113e:	99 23       	and	r25, r25
    1140:	61 f0       	breq	.+24     	; 0x115a <__vector_11+0x186>
    1142:	fa 01       	movw	r30, r20
    1144:	44 91       	lpm	r20, Z
    1146:	f8 01       	movw	r30, r16
    1148:	40 83       	st	Z, r20
    114a:	f9 01       	movw	r30, r18
    114c:	32 96       	adiw	r30, 0x02	; 2
    114e:	94 91       	lpm	r25, Z
    1150:	2d 5f       	subi	r18, 0xFD	; 253
    1152:	3f 4f       	sbci	r19, 0xFF	; 255
    1154:	fb 01       	movw	r30, r22
    1156:	90 83       	st	Z, r25
    1158:	01 c0       	rjmp	.+2      	; 0x115c <__vector_11+0x188>
    115a:	9a 01       	movw	r18, r20
    115c:	8f 5f       	subi	r24, 0xFF	; 255
    115e:	85 30       	cpi	r24, 0x05	; 5
    1160:	39 f7       	brne	.-50     	; 0x1130 <__vector_11+0x15c>
    1162:	ea ee       	ldi	r30, 0xEA	; 234
    1164:	f0 e0       	ldi	r31, 0x00	; 0
    1166:	8e e1       	ldi	r24, 0x1E	; 30
    1168:	80 83       	st	Z, r24
    116a:	10 82       	st	Z, r1
    116c:	a1 c0       	rjmp	.+322    	; 0x12b0 <__vector_11+0x2dc>
    116e:	88 30       	cpi	r24, 0x08	; 8
    1170:	81 f4       	brne	.+32     	; 0x1192 <__vector_11+0x1be>
    1172:	60 38       	cpi	r22, 0x80	; 128
    1174:	09 f0       	breq	.+2      	; 0x1178 <__vector_11+0x1a4>
    1176:	95 c0       	rjmp	.+298    	; 0x12a2 <__vector_11+0x2ce>
    1178:	e8 ee       	ldi	r30, 0xE8	; 232
    117a:	f0 e0       	ldi	r31, 0x00	; 0
    117c:	80 81       	ld	r24, Z
    117e:	80 ff       	sbrs	r24, 0
    1180:	fd cf       	rjmp	.-6      	; 0x117c <__vector_11+0x1a8>
    1182:	80 91 3f 01 	lds	r24, 0x013F
    1186:	80 93 f1 00 	sts	0x00F1, r24
    118a:	8e ef       	ldi	r24, 0xFE	; 254
    118c:	80 93 e8 00 	sts	0x00E8, r24
    1190:	8f c0       	rjmp	.+286    	; 0x12b0 <__vector_11+0x2dc>
    1192:	81 32       	cpi	r24, 0x21	; 33
    1194:	b9 f4       	brne	.+46     	; 0x11c4 <__vector_11+0x1f0>
    1196:	61 3a       	cpi	r22, 0xA1	; 161
    1198:	09 f0       	breq	.+2      	; 0x119c <__vector_11+0x1c8>
    119a:	83 c0       	rjmp	.+262    	; 0x12a2 <__vector_11+0x2ce>
    119c:	e8 ee       	ldi	r30, 0xE8	; 232
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	80 81       	ld	r24, Z
    11a2:	80 ff       	sbrs	r24, 0
    11a4:	fd cf       	rjmp	.-6      	; 0x11a0 <__vector_11+0x1cc>
    11a6:	e0 e0       	ldi	r30, 0x00	; 0
    11a8:	f1 e0       	ldi	r31, 0x01	; 1
    11aa:	27 e0       	ldi	r18, 0x07	; 7
    11ac:	31 e0       	ldi	r19, 0x01	; 1
    11ae:	a1 ef       	ldi	r26, 0xF1	; 241
    11b0:	b0 e0       	ldi	r27, 0x00	; 0
    11b2:	81 91       	ld	r24, Z+
    11b4:	8c 93       	st	X, r24
    11b6:	e2 17       	cp	r30, r18
    11b8:	f3 07       	cpc	r31, r19
    11ba:	d9 f7       	brne	.-10     	; 0x11b2 <__vector_11+0x1de>
    11bc:	8e ef       	ldi	r24, 0xFE	; 254
    11be:	80 93 e8 00 	sts	0x00E8, r24
    11c2:	76 c0       	rjmp	.+236    	; 0x12b0 <__vector_11+0x2dc>
    11c4:	80 32       	cpi	r24, 0x20	; 32
    11c6:	d1 f4       	brne	.+52     	; 0x11fc <__vector_11+0x228>
    11c8:	61 32       	cpi	r22, 0x21	; 33
    11ca:	09 f0       	breq	.+2      	; 0x11ce <__vector_11+0x1fa>
    11cc:	6a c0       	rjmp	.+212    	; 0x12a2 <__vector_11+0x2ce>
    11ce:	e8 ee       	ldi	r30, 0xE8	; 232
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 81       	ld	r24, Z
    11d4:	82 ff       	sbrs	r24, 2
    11d6:	fd cf       	rjmp	.-6      	; 0x11d2 <__vector_11+0x1fe>
    11d8:	e0 e0       	ldi	r30, 0x00	; 0
    11da:	f1 e0       	ldi	r31, 0x01	; 1
    11dc:	27 e0       	ldi	r18, 0x07	; 7
    11de:	31 e0       	ldi	r19, 0x01	; 1
    11e0:	a1 ef       	ldi	r26, 0xF1	; 241
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	8c 91       	ld	r24, X
    11e6:	81 93       	st	Z+, r24
    11e8:	e2 17       	cp	r30, r18
    11ea:	f3 07       	cpc	r31, r19
    11ec:	d9 f7       	brne	.-10     	; 0x11e4 <__vector_11+0x210>
    11ee:	e8 ee       	ldi	r30, 0xE8	; 232
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	8b ef       	ldi	r24, 0xFB	; 251
    11f4:	80 83       	st	Z, r24
    11f6:	8e ef       	ldi	r24, 0xFE	; 254
    11f8:	80 83       	st	Z, r24
    11fa:	5a c0       	rjmp	.+180    	; 0x12b0 <__vector_11+0x2dc>
    11fc:	82 32       	cpi	r24, 0x22	; 34
    11fe:	71 f4       	brne	.+28     	; 0x121c <__vector_11+0x248>
    1200:	61 32       	cpi	r22, 0x21	; 33
    1202:	09 f0       	breq	.+2      	; 0x1206 <__vector_11+0x232>
    1204:	4e c0       	rjmp	.+156    	; 0x12a2 <__vector_11+0x2ce>
    1206:	20 93 3c 01 	sts	0x013C, r18
    120a:	e8 ee       	ldi	r30, 0xE8	; 232
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	80 ff       	sbrs	r24, 0
    1212:	fd cf       	rjmp	.-6      	; 0x120e <__vector_11+0x23a>
    1214:	8e ef       	ldi	r24, 0xFE	; 254
    1216:	80 93 e8 00 	sts	0x00E8, r24
    121a:	4a c0       	rjmp	.+148    	; 0x12b0 <__vector_11+0x2dc>
    121c:	81 11       	cpse	r24, r1
    121e:	1a c0       	rjmp	.+52     	; 0x1254 <__vector_11+0x280>
    1220:	e8 ee       	ldi	r30, 0xE8	; 232
    1222:	f0 e0       	ldi	r31, 0x00	; 0
    1224:	80 81       	ld	r24, Z
    1226:	80 ff       	sbrs	r24, 0
    1228:	fd cf       	rjmp	.-6      	; 0x1224 <__vector_11+0x250>
    122a:	62 38       	cpi	r22, 0x82	; 130
    122c:	51 f4       	brne	.+20     	; 0x1242 <__vector_11+0x26e>
    122e:	e9 ee       	ldi	r30, 0xE9	; 233
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	40 83       	st	Z, r20
    1234:	80 91 eb 00 	lds	r24, 0x00EB
    1238:	85 fb       	bst	r24, 5
    123a:	88 27       	eor	r24, r24
    123c:	80 f9       	bld	r24, 0
    123e:	10 82       	st	Z, r1
    1240:	01 c0       	rjmp	.+2      	; 0x1244 <__vector_11+0x270>
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	e1 ef       	ldi	r30, 0xF1	; 241
    1246:	f0 e0       	ldi	r31, 0x00	; 0
    1248:	80 83       	st	Z, r24
    124a:	10 82       	st	Z, r1
    124c:	8e ef       	ldi	r24, 0xFE	; 254
    124e:	80 93 e8 00 	sts	0x00E8, r24
    1252:	2e c0       	rjmp	.+92     	; 0x12b0 <__vector_11+0x2dc>
    1254:	98 2f       	mov	r25, r24
    1256:	9d 7f       	andi	r25, 0xFD	; 253
    1258:	91 30       	cpi	r25, 0x01	; 1
    125a:	19 f5       	brne	.+70     	; 0x12a2 <__vector_11+0x2ce>
    125c:	62 30       	cpi	r22, 0x02	; 2
    125e:	09 f5       	brne	.+66     	; 0x12a2 <__vector_11+0x2ce>
    1260:	23 2b       	or	r18, r19
    1262:	f9 f4       	brne	.+62     	; 0x12a2 <__vector_11+0x2ce>
    1264:	4f 77       	andi	r20, 0x7F	; 127
    1266:	9f ef       	ldi	r25, 0xFF	; 255
    1268:	94 0f       	add	r25, r20
    126a:	94 30       	cpi	r25, 0x04	; 4
    126c:	d0 f4       	brcc	.+52     	; 0x12a2 <__vector_11+0x2ce>
    126e:	9e ef       	ldi	r25, 0xFE	; 254
    1270:	90 93 e8 00 	sts	0x00E8, r25
    1274:	40 93 e9 00 	sts	0x00E9, r20
    1278:	83 30       	cpi	r24, 0x03	; 3
    127a:	21 f4       	brne	.+8      	; 0x1284 <__vector_11+0x2b0>
    127c:	81 e2       	ldi	r24, 0x21	; 33
    127e:	80 93 eb 00 	sts	0x00EB, r24
    1282:	16 c0       	rjmp	.+44     	; 0x12b0 <__vector_11+0x2dc>
    1284:	89 e1       	ldi	r24, 0x19	; 25
    1286:	80 93 eb 00 	sts	0x00EB, r24
    128a:	81 e0       	ldi	r24, 0x01	; 1
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	02 c0       	rjmp	.+4      	; 0x1294 <__vector_11+0x2c0>
    1290:	88 0f       	add	r24, r24
    1292:	99 1f       	adc	r25, r25
    1294:	4a 95       	dec	r20
    1296:	e2 f7       	brpl	.-8      	; 0x1290 <__vector_11+0x2bc>
    1298:	ea ee       	ldi	r30, 0xEA	; 234
    129a:	f0 e0       	ldi	r31, 0x00	; 0
    129c:	80 83       	st	Z, r24
    129e:	10 82       	st	Z, r1
    12a0:	07 c0       	rjmp	.+14     	; 0x12b0 <__vector_11+0x2dc>
    12a2:	81 e2       	ldi	r24, 0x21	; 33
    12a4:	80 93 eb 00 	sts	0x00EB, r24
    12a8:	03 c0       	rjmp	.+6      	; 0x12b0 <__vector_11+0x2dc>
    12aa:	6c 93       	st	X, r22
    12ac:	21 11       	cpse	r18, r1
    12ae:	f7 ce       	rjmp	.-530    	; 0x109e <__vector_11+0xca>
    12b0:	ff 91       	pop	r31
    12b2:	ef 91       	pop	r30
    12b4:	df 91       	pop	r29
    12b6:	cf 91       	pop	r28
    12b8:	bf 91       	pop	r27
    12ba:	af 91       	pop	r26
    12bc:	9f 91       	pop	r25
    12be:	8f 91       	pop	r24
    12c0:	7f 91       	pop	r23
    12c2:	6f 91       	pop	r22
    12c4:	5f 91       	pop	r21
    12c6:	4f 91       	pop	r20
    12c8:	3f 91       	pop	r19
    12ca:	2f 91       	pop	r18
    12cc:	1f 91       	pop	r17
    12ce:	0f 91       	pop	r16
    12d0:	0f 90       	pop	r0
    12d2:	0f be       	out	0x3f, r0	; 63
    12d4:	0f 90       	pop	r0
    12d6:	1f 90       	pop	r1
    12d8:	18 95       	reti

000012da <print_P>:
    12da:	0f 93       	push	r16
    12dc:	1f 93       	push	r17
    12de:	cf 93       	push	r28
    12e0:	8c 01       	movw	r16, r24
    12e2:	0f 5f       	subi	r16, 0xFF	; 255
    12e4:	1f 4f       	sbci	r17, 0xFF	; 255
    12e6:	fc 01       	movw	r30, r24
    12e8:	c4 91       	lpm	r28, Z
    12ea:	cc 23       	and	r28, r28
    12ec:	71 f0       	breq	.+28     	; 0x130a <print_P+0x30>
    12ee:	ca 30       	cpi	r28, 0x0A	; 10
    12f0:	19 f4       	brne	.+6      	; 0x12f8 <print_P+0x1e>
    12f2:	8d e0       	ldi	r24, 0x0D	; 13
    12f4:	0e 94 51 07 	call	0xea2	; 0xea2 <m_usb_tx_char>
    12f8:	8c 2f       	mov	r24, r28
    12fa:	0e 94 51 07 	call	0xea2	; 0xea2 <m_usb_tx_char>
    12fe:	f8 01       	movw	r30, r16
    1300:	c4 91       	lpm	r28, Z
    1302:	0f 5f       	subi	r16, 0xFF	; 255
    1304:	1f 4f       	sbci	r17, 0xFF	; 255
    1306:	c1 11       	cpse	r28, r1
    1308:	f2 cf       	rjmp	.-28     	; 0x12ee <print_P+0x14>
    130a:	cf 91       	pop	r28
    130c:	1f 91       	pop	r17
    130e:	0f 91       	pop	r16
    1310:	08 95       	ret

00001312 <m_usb_tx_int>:
    1312:	ef 92       	push	r14
    1314:	ff 92       	push	r15
    1316:	0f 93       	push	r16
    1318:	1f 93       	push	r17
    131a:	cf 93       	push	r28
    131c:	df 93       	push	r29
    131e:	cd b7       	in	r28, 0x3d	; 61
    1320:	de b7       	in	r29, 0x3e	; 62
    1322:	27 97       	sbiw	r28, 0x07	; 7
    1324:	0f b6       	in	r0, 0x3f	; 63
    1326:	f8 94       	cli
    1328:	de bf       	out	0x3e, r29	; 62
    132a:	0f be       	out	0x3f, r0	; 63
    132c:	cd bf       	out	0x3d, r28	; 61
    132e:	8e 01       	movw	r16, r28
    1330:	0f 5f       	subi	r16, 0xFF	; 255
    1332:	1f 4f       	sbci	r17, 0xFF	; 255
    1334:	27 e0       	ldi	r18, 0x07	; 7
    1336:	f8 01       	movw	r30, r16
    1338:	11 92       	st	Z+, r1
    133a:	2a 95       	dec	r18
    133c:	e9 f7       	brne	.-6      	; 0x1338 <m_usb_tx_int+0x26>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    133e:	4a e0       	ldi	r20, 0x0A	; 10
    1340:	b8 01       	movw	r22, r16
    1342:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <__itoa_ncheck>
    1346:	7e 01       	movw	r14, r28
    1348:	f8 e0       	ldi	r31, 0x08	; 8
    134a:	ef 0e       	add	r14, r31
    134c:	f1 1c       	adc	r15, r1
    134e:	f8 01       	movw	r30, r16
    1350:	81 91       	ld	r24, Z+
    1352:	8f 01       	movw	r16, r30
    1354:	81 11       	cpse	r24, r1
    1356:	0e 94 51 07 	call	0xea2	; 0xea2 <m_usb_tx_char>
    135a:	0e 15       	cp	r16, r14
    135c:	1f 05       	cpc	r17, r15
    135e:	b9 f7       	brne	.-18     	; 0x134e <m_usb_tx_int+0x3c>
    1360:	27 96       	adiw	r28, 0x07	; 7
    1362:	0f b6       	in	r0, 0x3f	; 63
    1364:	f8 94       	cli
    1366:	de bf       	out	0x3e, r29	; 62
    1368:	0f be       	out	0x3f, r0	; 63
    136a:	cd bf       	out	0x3d, r28	; 61
    136c:	df 91       	pop	r29
    136e:	cf 91       	pop	r28
    1370:	1f 91       	pop	r17
    1372:	0f 91       	pop	r16
    1374:	ff 90       	pop	r15
    1376:	ef 90       	pop	r14
    1378:	08 95       	ret

0000137a <twi_wait>:
    137a:	20 e0       	ldi	r18, 0x00	; 0
    137c:	30 e0       	ldi	r19, 0x00	; 0
    137e:	ec eb       	ldi	r30, 0xBC	; 188
    1380:	f0 e0       	ldi	r31, 0x00	; 0
    1382:	80 81       	ld	r24, Z
    1384:	88 23       	and	r24, r24
    1386:	34 f0       	brlt	.+12     	; 0x1394 <twi_wait+0x1a>
    1388:	2f 5f       	subi	r18, 0xFF	; 255
    138a:	3f 4f       	sbci	r19, 0xFF	; 255
    138c:	29 3e       	cpi	r18, 0xE9	; 233
    138e:	83 e0       	ldi	r24, 0x03	; 3
    1390:	38 07       	cpc	r19, r24
    1392:	b9 f7       	brne	.-18     	; 0x1382 <twi_wait+0x8>
    1394:	81 e0       	ldi	r24, 0x01	; 1
    1396:	28 3e       	cpi	r18, 0xE8	; 232
    1398:	33 40       	sbci	r19, 0x03	; 3
    139a:	09 f4       	brne	.+2      	; 0x139e <twi_wait+0x24>
    139c:	80 e0       	ldi	r24, 0x00	; 0
    139e:	08 95       	ret

000013a0 <send_byte>:
    13a0:	80 93 bb 00 	sts	0x00BB, r24
    13a4:	84 e8       	ldi	r24, 0x84	; 132
    13a6:	80 93 bc 00 	sts	0x00BC, r24
    13aa:	0e 94 bd 09 	call	0x137a	; 0x137a <twi_wait>
    13ae:	88 23       	and	r24, r24
    13b0:	19 f0       	breq	.+6      	; 0x13b8 <send_byte+0x18>
    13b2:	80 91 b9 00 	lds	r24, 0x00B9
    13b6:	88 7f       	andi	r24, 0xF8	; 248
    13b8:	08 95       	ret

000013ba <start_write>:
    13ba:	cf 93       	push	r28
    13bc:	c8 2f       	mov	r28, r24
    13be:	94 ea       	ldi	r25, 0xA4	; 164
    13c0:	90 93 bc 00 	sts	0x00BC, r25
    13c4:	0e 94 bd 09 	call	0x137a	; 0x137a <twi_wait>
    13c8:	88 23       	and	r24, r24
    13ca:	61 f0       	breq	.+24     	; 0x13e4 <start_write+0x2a>
    13cc:	8c 2f       	mov	r24, r28
    13ce:	88 0f       	add	r24, r24
    13d0:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    13d4:	80 32       	cpi	r24, 0x20	; 32
    13d6:	29 f4       	brne	.+10     	; 0x13e2 <start_write+0x28>
    13d8:	84 e9       	ldi	r24, 0x94	; 148
    13da:	80 93 bc 00 	sts	0x00BC, r24
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	01 c0       	rjmp	.+2      	; 0x13e4 <start_write+0x2a>
    13e2:	81 e0       	ldi	r24, 0x01	; 1
    13e4:	cf 91       	pop	r28
    13e6:	08 95       	ret

000013e8 <m_wii_open>:
    13e8:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <m_bus_init>
    13ec:	88 e5       	ldi	r24, 0x58	; 88
    13ee:	0e 94 dd 09 	call	0x13ba	; 0x13ba <start_write>
    13f2:	88 23       	and	r24, r24
    13f4:	09 f4       	brne	.+2      	; 0x13f8 <m_wii_open+0x10>
    13f6:	cd c0       	rjmp	.+410    	; 0x1592 <m_wii_open+0x1aa>
    13f8:	80 e3       	ldi	r24, 0x30	; 48
    13fa:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    13fe:	88 23       	and	r24, r24
    1400:	09 f4       	brne	.+2      	; 0x1404 <m_wii_open+0x1c>
    1402:	c9 c0       	rjmp	.+402    	; 0x1596 <m_wii_open+0x1ae>
    1404:	81 e0       	ldi	r24, 0x01	; 1
    1406:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    140a:	88 23       	and	r24, r24
    140c:	09 f4       	brne	.+2      	; 0x1410 <m_wii_open+0x28>
    140e:	c5 c0       	rjmp	.+394    	; 0x159a <m_wii_open+0x1b2>
    1410:	84 e9       	ldi	r24, 0x94	; 148
    1412:	80 93 bc 00 	sts	0x00BC, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1416:	83 ec       	ldi	r24, 0xC3	; 195
    1418:	99 e0       	ldi	r25, 0x09	; 9
    141a:	01 97       	sbiw	r24, 0x01	; 1
    141c:	f1 f7       	brne	.-4      	; 0x141a <m_wii_open+0x32>
    141e:	00 c0       	rjmp	.+0      	; 0x1420 <m_wii_open+0x38>
    1420:	00 00       	nop
    1422:	88 e5       	ldi	r24, 0x58	; 88
    1424:	0e 94 dd 09 	call	0x13ba	; 0x13ba <start_write>
    1428:	88 23       	and	r24, r24
    142a:	09 f4       	brne	.+2      	; 0x142e <m_wii_open+0x46>
    142c:	b8 c0       	rjmp	.+368    	; 0x159e <m_wii_open+0x1b6>
    142e:	80 e0       	ldi	r24, 0x00	; 0
    1430:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1434:	88 23       	and	r24, r24
    1436:	09 f4       	brne	.+2      	; 0x143a <m_wii_open+0x52>
    1438:	b4 c0       	rjmp	.+360    	; 0x15a2 <m_wii_open+0x1ba>
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1440:	88 23       	and	r24, r24
    1442:	09 f4       	brne	.+2      	; 0x1446 <m_wii_open+0x5e>
    1444:	b0 c0       	rjmp	.+352    	; 0x15a6 <m_wii_open+0x1be>
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    144c:	88 23       	and	r24, r24
    144e:	09 f4       	brne	.+2      	; 0x1452 <m_wii_open+0x6a>
    1450:	ac c0       	rjmp	.+344    	; 0x15aa <m_wii_open+0x1c2>
    1452:	80 e0       	ldi	r24, 0x00	; 0
    1454:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1458:	88 23       	and	r24, r24
    145a:	09 f4       	brne	.+2      	; 0x145e <m_wii_open+0x76>
    145c:	a8 c0       	rjmp	.+336    	; 0x15ae <m_wii_open+0x1c6>
    145e:	80 e0       	ldi	r24, 0x00	; 0
    1460:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1464:	88 23       	and	r24, r24
    1466:	09 f4       	brne	.+2      	; 0x146a <m_wii_open+0x82>
    1468:	a4 c0       	rjmp	.+328    	; 0x15b2 <m_wii_open+0x1ca>
    146a:	80 e0       	ldi	r24, 0x00	; 0
    146c:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1470:	88 23       	and	r24, r24
    1472:	09 f4       	brne	.+2      	; 0x1476 <m_wii_open+0x8e>
    1474:	a0 c0       	rjmp	.+320    	; 0x15b6 <m_wii_open+0x1ce>
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    147c:	88 23       	and	r24, r24
    147e:	09 f4       	brne	.+2      	; 0x1482 <m_wii_open+0x9a>
    1480:	9c c0       	rjmp	.+312    	; 0x15ba <m_wii_open+0x1d2>
    1482:	80 e9       	ldi	r24, 0x90	; 144
    1484:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1488:	88 23       	and	r24, r24
    148a:	09 f4       	brne	.+2      	; 0x148e <m_wii_open+0xa6>
    148c:	98 c0       	rjmp	.+304    	; 0x15be <m_wii_open+0x1d6>
    148e:	84 e9       	ldi	r24, 0x94	; 148
    1490:	80 93 bc 00 	sts	0x00BC, r24
    1494:	83 ec       	ldi	r24, 0xC3	; 195
    1496:	99 e0       	ldi	r25, 0x09	; 9
    1498:	01 97       	sbiw	r24, 0x01	; 1
    149a:	f1 f7       	brne	.-4      	; 0x1498 <m_wii_open+0xb0>
    149c:	00 c0       	rjmp	.+0      	; 0x149e <m_wii_open+0xb6>
    149e:	00 00       	nop
    14a0:	88 e5       	ldi	r24, 0x58	; 88
    14a2:	0e 94 dd 09 	call	0x13ba	; 0x13ba <start_write>
    14a6:	88 23       	and	r24, r24
    14a8:	09 f4       	brne	.+2      	; 0x14ac <m_wii_open+0xc4>
    14aa:	8b c0       	rjmp	.+278    	; 0x15c2 <m_wii_open+0x1da>
    14ac:	87 e0       	ldi	r24, 0x07	; 7
    14ae:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    14b2:	88 23       	and	r24, r24
    14b4:	09 f4       	brne	.+2      	; 0x14b8 <m_wii_open+0xd0>
    14b6:	87 c0       	rjmp	.+270    	; 0x15c6 <m_wii_open+0x1de>
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    14be:	88 23       	and	r24, r24
    14c0:	09 f4       	brne	.+2      	; 0x14c4 <m_wii_open+0xdc>
    14c2:	83 c0       	rjmp	.+262    	; 0x15ca <m_wii_open+0x1e2>
    14c4:	81 e4       	ldi	r24, 0x41	; 65
    14c6:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    14ca:	88 23       	and	r24, r24
    14cc:	09 f4       	brne	.+2      	; 0x14d0 <m_wii_open+0xe8>
    14ce:	7f c0       	rjmp	.+254    	; 0x15ce <m_wii_open+0x1e6>
    14d0:	84 e9       	ldi	r24, 0x94	; 148
    14d2:	80 93 bc 00 	sts	0x00BC, r24
    14d6:	83 ec       	ldi	r24, 0xC3	; 195
    14d8:	99 e0       	ldi	r25, 0x09	; 9
    14da:	01 97       	sbiw	r24, 0x01	; 1
    14dc:	f1 f7       	brne	.-4      	; 0x14da <m_wii_open+0xf2>
    14de:	00 c0       	rjmp	.+0      	; 0x14e0 <m_wii_open+0xf8>
    14e0:	00 00       	nop
    14e2:	88 e5       	ldi	r24, 0x58	; 88
    14e4:	0e 94 dd 09 	call	0x13ba	; 0x13ba <start_write>
    14e8:	88 23       	and	r24, r24
    14ea:	09 f4       	brne	.+2      	; 0x14ee <m_wii_open+0x106>
    14ec:	72 c0       	rjmp	.+228    	; 0x15d2 <m_wii_open+0x1ea>
    14ee:	8a e1       	ldi	r24, 0x1A	; 26
    14f0:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    14f4:	88 23       	and	r24, r24
    14f6:	09 f4       	brne	.+2      	; 0x14fa <m_wii_open+0x112>
    14f8:	6e c0       	rjmp	.+220    	; 0x15d6 <m_wii_open+0x1ee>
    14fa:	80 e4       	ldi	r24, 0x40	; 64
    14fc:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1500:	88 23       	and	r24, r24
    1502:	09 f4       	brne	.+2      	; 0x1506 <m_wii_open+0x11e>
    1504:	6a c0       	rjmp	.+212    	; 0x15da <m_wii_open+0x1f2>
    1506:	80 e0       	ldi	r24, 0x00	; 0
    1508:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    150c:	88 23       	and	r24, r24
    150e:	09 f4       	brne	.+2      	; 0x1512 <m_wii_open+0x12a>
    1510:	66 c0       	rjmp	.+204    	; 0x15de <m_wii_open+0x1f6>
    1512:	84 e9       	ldi	r24, 0x94	; 148
    1514:	80 93 bc 00 	sts	0x00BC, r24
    1518:	83 ec       	ldi	r24, 0xC3	; 195
    151a:	99 e0       	ldi	r25, 0x09	; 9
    151c:	01 97       	sbiw	r24, 0x01	; 1
    151e:	f1 f7       	brne	.-4      	; 0x151c <m_wii_open+0x134>
    1520:	00 c0       	rjmp	.+0      	; 0x1522 <m_wii_open+0x13a>
    1522:	00 00       	nop
    1524:	88 e5       	ldi	r24, 0x58	; 88
    1526:	0e 94 dd 09 	call	0x13ba	; 0x13ba <start_write>
    152a:	88 23       	and	r24, r24
    152c:	09 f4       	brne	.+2      	; 0x1530 <m_wii_open+0x148>
    152e:	59 c0       	rjmp	.+178    	; 0x15e2 <m_wii_open+0x1fa>
    1530:	83 e3       	ldi	r24, 0x33	; 51
    1532:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1536:	88 23       	and	r24, r24
    1538:	09 f4       	brne	.+2      	; 0x153c <m_wii_open+0x154>
    153a:	55 c0       	rjmp	.+170    	; 0x15e6 <m_wii_open+0x1fe>
    153c:	83 e0       	ldi	r24, 0x03	; 3
    153e:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1542:	88 23       	and	r24, r24
    1544:	09 f4       	brne	.+2      	; 0x1548 <m_wii_open+0x160>
    1546:	51 c0       	rjmp	.+162    	; 0x15ea <m_wii_open+0x202>
    1548:	84 e9       	ldi	r24, 0x94	; 148
    154a:	80 93 bc 00 	sts	0x00BC, r24
    154e:	83 ec       	ldi	r24, 0xC3	; 195
    1550:	99 e0       	ldi	r25, 0x09	; 9
    1552:	01 97       	sbiw	r24, 0x01	; 1
    1554:	f1 f7       	brne	.-4      	; 0x1552 <m_wii_open+0x16a>
    1556:	00 c0       	rjmp	.+0      	; 0x1558 <m_wii_open+0x170>
    1558:	00 00       	nop
    155a:	88 e5       	ldi	r24, 0x58	; 88
    155c:	0e 94 dd 09 	call	0x13ba	; 0x13ba <start_write>
    1560:	88 23       	and	r24, r24
    1562:	09 f4       	brne	.+2      	; 0x1566 <m_wii_open+0x17e>
    1564:	44 c0       	rjmp	.+136    	; 0x15ee <m_wii_open+0x206>
    1566:	80 e3       	ldi	r24, 0x30	; 48
    1568:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    156c:	88 23       	and	r24, r24
    156e:	09 f4       	brne	.+2      	; 0x1572 <m_wii_open+0x18a>
    1570:	40 c0       	rjmp	.+128    	; 0x15f2 <m_wii_open+0x20a>
    1572:	88 e0       	ldi	r24, 0x08	; 8
    1574:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1578:	88 23       	and	r24, r24
    157a:	e9 f1       	breq	.+122    	; 0x15f6 <m_wii_open+0x20e>
    157c:	84 e9       	ldi	r24, 0x94	; 148
    157e:	80 93 bc 00 	sts	0x00BC, r24
    1582:	83 ec       	ldi	r24, 0xC3	; 195
    1584:	99 e0       	ldi	r25, 0x09	; 9
    1586:	01 97       	sbiw	r24, 0x01	; 1
    1588:	f1 f7       	brne	.-4      	; 0x1586 <m_wii_open+0x19e>
    158a:	00 c0       	rjmp	.+0      	; 0x158c <m_wii_open+0x1a4>
    158c:	00 00       	nop
    158e:	81 e0       	ldi	r24, 0x01	; 1
    1590:	08 95       	ret
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	08 95       	ret
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	08 95       	ret
    159a:	80 e0       	ldi	r24, 0x00	; 0
    159c:	08 95       	ret
    159e:	80 e0       	ldi	r24, 0x00	; 0
    15a0:	08 95       	ret
    15a2:	80 e0       	ldi	r24, 0x00	; 0
    15a4:	08 95       	ret
    15a6:	80 e0       	ldi	r24, 0x00	; 0
    15a8:	08 95       	ret
    15aa:	80 e0       	ldi	r24, 0x00	; 0
    15ac:	08 95       	ret
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	08 95       	ret
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	08 95       	ret
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	08 95       	ret
    15ba:	80 e0       	ldi	r24, 0x00	; 0
    15bc:	08 95       	ret
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	08 95       	ret
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	08 95       	ret
    15c6:	80 e0       	ldi	r24, 0x00	; 0
    15c8:	08 95       	ret
    15ca:	80 e0       	ldi	r24, 0x00	; 0
    15cc:	08 95       	ret
    15ce:	80 e0       	ldi	r24, 0x00	; 0
    15d0:	08 95       	ret
    15d2:	80 e0       	ldi	r24, 0x00	; 0
    15d4:	08 95       	ret
    15d6:	80 e0       	ldi	r24, 0x00	; 0
    15d8:	08 95       	ret
    15da:	80 e0       	ldi	r24, 0x00	; 0
    15dc:	08 95       	ret
    15de:	80 e0       	ldi	r24, 0x00	; 0
    15e0:	08 95       	ret
    15e2:	80 e0       	ldi	r24, 0x00	; 0
    15e4:	08 95       	ret
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	08 95       	ret
    15ea:	80 e0       	ldi	r24, 0x00	; 0
    15ec:	08 95       	ret
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	08 95       	ret
    15f2:	80 e0       	ldi	r24, 0x00	; 0
    15f4:	08 95       	ret
    15f6:	80 e0       	ldi	r24, 0x00	; 0
    15f8:	08 95       	ret

000015fa <start_read>:
    15fa:	cf 93       	push	r28
    15fc:	c8 2f       	mov	r28, r24
    15fe:	84 ea       	ldi	r24, 0xA4	; 164
    1600:	80 93 bc 00 	sts	0x00BC, r24
    1604:	0e 94 bd 09 	call	0x137a	; 0x137a <twi_wait>
    1608:	88 23       	and	r24, r24
    160a:	69 f0       	breq	.+26     	; 0x1626 <start_read+0x2c>
    160c:	8c 2f       	mov	r24, r28
    160e:	88 0f       	add	r24, r24
    1610:	8f 5f       	subi	r24, 0xFF	; 255
    1612:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1616:	88 34       	cpi	r24, 0x48	; 72
    1618:	29 f4       	brne	.+10     	; 0x1624 <start_read+0x2a>
    161a:	84 e9       	ldi	r24, 0x94	; 148
    161c:	80 93 bc 00 	sts	0x00BC, r24
    1620:	80 e0       	ldi	r24, 0x00	; 0
    1622:	01 c0       	rjmp	.+2      	; 0x1626 <start_read+0x2c>
    1624:	81 e0       	ldi	r24, 0x01	; 1
    1626:	cf 91       	pop	r28
    1628:	08 95       	ret

0000162a <m_wii_read>:
    162a:	0f 93       	push	r16
    162c:	1f 93       	push	r17
    162e:	cf 93       	push	r28
    1630:	df 93       	push	r29
    1632:	cd b7       	in	r28, 0x3d	; 61
    1634:	de b7       	in	r29, 0x3e	; 62
    1636:	60 97       	sbiw	r28, 0x10	; 16
    1638:	0f b6       	in	r0, 0x3f	; 63
    163a:	f8 94       	cli
    163c:	de bf       	out	0x3e, r29	; 62
    163e:	0f be       	out	0x3f, r0	; 63
    1640:	cd bf       	out	0x3d, r28	; 61
    1642:	8c 01       	movw	r16, r24
    1644:	fe 01       	movw	r30, r28
    1646:	31 96       	adiw	r30, 0x01	; 1
    1648:	80 e1       	ldi	r24, 0x10	; 16
    164a:	df 01       	movw	r26, r30
    164c:	1d 92       	st	X+, r1
    164e:	8a 95       	dec	r24
    1650:	e9 f7       	brne	.-6      	; 0x164c <m_wii_read+0x22>
    1652:	88 e5       	ldi	r24, 0x58	; 88
    1654:	0e 94 dd 09 	call	0x13ba	; 0x13ba <start_write>
    1658:	88 23       	and	r24, r24
    165a:	09 f4       	brne	.+2      	; 0x165e <m_wii_read+0x34>
    165c:	69 c0       	rjmp	.+210    	; 0x1730 <m_wii_read+0x106>
    165e:	86 e3       	ldi	r24, 0x36	; 54
    1660:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <send_byte>
    1664:	88 23       	and	r24, r24
    1666:	09 f4       	brne	.+2      	; 0x166a <m_wii_read+0x40>
    1668:	65 c0       	rjmp	.+202    	; 0x1734 <m_wii_read+0x10a>
    166a:	84 e9       	ldi	r24, 0x94	; 148
    166c:	80 93 bc 00 	sts	0x00BC, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1670:	b8 e0       	ldi	r27, 0x08	; 8
    1672:	ba 95       	dec	r27
    1674:	f1 f7       	brne	.-4      	; 0x1672 <m_wii_read+0x48>
    1676:	00 00       	nop
    1678:	88 e5       	ldi	r24, 0x58	; 88
    167a:	0e 94 fd 0a 	call	0x15fa	; 0x15fa <start_read>
    167e:	88 23       	and	r24, r24
    1680:	09 f4       	brne	.+2      	; 0x1684 <m_wii_read+0x5a>
    1682:	5a c0       	rjmp	.+180    	; 0x1738 <m_wii_read+0x10e>
    1684:	be 01       	movw	r22, r28
    1686:	6f 5f       	subi	r22, 0xFF	; 255
    1688:	7f 4f       	sbci	r23, 0xFF	; 255
    168a:	ae 01       	movw	r20, r28
    168c:	40 5f       	subi	r20, 0xF0	; 240
    168e:	5f 4f       	sbci	r21, 0xFF	; 255
    1690:	ec eb       	ldi	r30, 0xBC	; 188
    1692:	f0 e0       	ldi	r31, 0x00	; 0
    1694:	84 ec       	ldi	r24, 0xC4	; 196
    1696:	2b eb       	ldi	r18, 0xBB	; 187
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	80 83       	st	Z, r24
    169c:	90 81       	ld	r25, Z
    169e:	99 23       	and	r25, r25
    16a0:	ec f7       	brge	.-6      	; 0x169c <m_wii_read+0x72>
    16a2:	d9 01       	movw	r26, r18
    16a4:	9c 91       	ld	r25, X
    16a6:	db 01       	movw	r26, r22
    16a8:	9d 93       	st	X+, r25
    16aa:	bd 01       	movw	r22, r26
    16ac:	a4 17       	cp	r26, r20
    16ae:	b5 07       	cpc	r27, r21
    16b0:	a1 f7       	brne	.-24     	; 0x169a <m_wii_read+0x70>
    16b2:	84 e8       	ldi	r24, 0x84	; 132
    16b4:	80 93 bc 00 	sts	0x00BC, r24
    16b8:	ec eb       	ldi	r30, 0xBC	; 188
    16ba:	f0 e0       	ldi	r31, 0x00	; 0
    16bc:	80 81       	ld	r24, Z
    16be:	88 23       	and	r24, r24
    16c0:	ec f7       	brge	.-6      	; 0x16bc <m_wii_read+0x92>
    16c2:	80 91 bb 00 	lds	r24, 0x00BB
    16c6:	88 8b       	std	Y+16, r24	; 0x10
    16c8:	84 e9       	ldi	r24, 0x94	; 148
    16ca:	80 93 bc 00 	sts	0x00BC, r24
    16ce:	be 01       	movw	r22, r28
    16d0:	6c 5f       	subi	r22, 0xFC	; 252
    16d2:	7f 4f       	sbci	r23, 0xFF	; 255
    16d4:	f8 01       	movw	r30, r16
    16d6:	08 5e       	subi	r16, 0xE8	; 232
    16d8:	1f 4f       	sbci	r17, 0xFF	; 255
    16da:	db 01       	movw	r26, r22
    16dc:	2c 91       	ld	r18, X
    16de:	32 2f       	mov	r19, r18
    16e0:	30 73       	andi	r19, 0x30	; 48
    16e2:	cb 01       	movw	r24, r22
    16e4:	02 97       	sbiw	r24, 0x02	; 2
    16e6:	dc 01       	movw	r26, r24
    16e8:	8c 91       	ld	r24, X
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	b0 e1       	ldi	r27, 0x10	; 16
    16ee:	3b 9f       	mul	r19, r27
    16f0:	80 0d       	add	r24, r0
    16f2:	91 1d       	adc	r25, r1
    16f4:	11 24       	eor	r1, r1
    16f6:	91 83       	std	Z+1, r25	; 0x01
    16f8:	80 83       	st	Z, r24
    16fa:	42 2f       	mov	r20, r18
    16fc:	40 7c       	andi	r20, 0xC0	; 192
    16fe:	50 e0       	ldi	r21, 0x00	; 0
    1700:	44 0f       	add	r20, r20
    1702:	55 1f       	adc	r21, r21
    1704:	44 0f       	add	r20, r20
    1706:	55 1f       	adc	r21, r21
    1708:	cb 01       	movw	r24, r22
    170a:	01 97       	sbiw	r24, 0x01	; 1
    170c:	dc 01       	movw	r26, r24
    170e:	8c 91       	ld	r24, X
    1710:	48 0f       	add	r20, r24
    1712:	51 1d       	adc	r21, r1
    1714:	53 83       	std	Z+3, r21	; 0x03
    1716:	42 83       	std	Z+2, r20	; 0x02
    1718:	2f 70       	andi	r18, 0x0F	; 15
    171a:	30 e0       	ldi	r19, 0x00	; 0
    171c:	35 83       	std	Z+5, r19	; 0x05
    171e:	24 83       	std	Z+4, r18	; 0x04
    1720:	6d 5f       	subi	r22, 0xFD	; 253
    1722:	7f 4f       	sbci	r23, 0xFF	; 255
    1724:	36 96       	adiw	r30, 0x06	; 6
    1726:	e0 17       	cp	r30, r16
    1728:	f1 07       	cpc	r31, r17
    172a:	b9 f6       	brne	.-82     	; 0x16da <m_wii_read+0xb0>
    172c:	81 e0       	ldi	r24, 0x01	; 1
    172e:	05 c0       	rjmp	.+10     	; 0x173a <m_wii_read+0x110>
    1730:	80 e0       	ldi	r24, 0x00	; 0
    1732:	03 c0       	rjmp	.+6      	; 0x173a <m_wii_read+0x110>
    1734:	80 e0       	ldi	r24, 0x00	; 0
    1736:	01 c0       	rjmp	.+2      	; 0x173a <m_wii_read+0x110>
    1738:	80 e0       	ldi	r24, 0x00	; 0
    173a:	60 96       	adiw	r28, 0x10	; 16
    173c:	0f b6       	in	r0, 0x3f	; 63
    173e:	f8 94       	cli
    1740:	de bf       	out	0x3e, r29	; 62
    1742:	0f be       	out	0x3f, r0	; 63
    1744:	cd bf       	out	0x3d, r28	; 61
    1746:	df 91       	pop	r29
    1748:	cf 91       	pop	r28
    174a:	1f 91       	pop	r17
    174c:	0f 91       	pop	r16
    174e:	08 95       	ret

00001750 <__subsf3>:
    1750:	50 58       	subi	r21, 0x80	; 128

00001752 <__addsf3>:
    1752:	bb 27       	eor	r27, r27
    1754:	aa 27       	eor	r26, r26
    1756:	0e 94 c0 0b 	call	0x1780	; 0x1780 <__addsf3x>
    175a:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__fp_round>
    175e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__fp_pscA>
    1762:	38 f0       	brcs	.+14     	; 0x1772 <__addsf3+0x20>
    1764:	0e 94 a8 0d 	call	0x1b50	; 0x1b50 <__fp_pscB>
    1768:	20 f0       	brcs	.+8      	; 0x1772 <__addsf3+0x20>
    176a:	39 f4       	brne	.+14     	; 0x177a <__addsf3+0x28>
    176c:	9f 3f       	cpi	r25, 0xFF	; 255
    176e:	19 f4       	brne	.+6      	; 0x1776 <__addsf3+0x24>
    1770:	26 f4       	brtc	.+8      	; 0x177a <__addsf3+0x28>
    1772:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>
    1776:	0e f4       	brtc	.+2      	; 0x177a <__addsf3+0x28>
    1778:	e0 95       	com	r30
    177a:	e7 fb       	bst	r30, 7
    177c:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>

00001780 <__addsf3x>:
    1780:	e9 2f       	mov	r30, r25
    1782:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <__fp_split3>
    1786:	58 f3       	brcs	.-42     	; 0x175e <__addsf3+0xc>
    1788:	ba 17       	cp	r27, r26
    178a:	62 07       	cpc	r22, r18
    178c:	73 07       	cpc	r23, r19
    178e:	84 07       	cpc	r24, r20
    1790:	95 07       	cpc	r25, r21
    1792:	20 f0       	brcs	.+8      	; 0x179c <__addsf3x+0x1c>
    1794:	79 f4       	brne	.+30     	; 0x17b4 <__addsf3x+0x34>
    1796:	a6 f5       	brtc	.+104    	; 0x1800 <__addsf3x+0x80>
    1798:	0c 94 21 0e 	jmp	0x1c42	; 0x1c42 <__fp_zero>
    179c:	0e f4       	brtc	.+2      	; 0x17a0 <__addsf3x+0x20>
    179e:	e0 95       	com	r30
    17a0:	0b 2e       	mov	r0, r27
    17a2:	ba 2f       	mov	r27, r26
    17a4:	a0 2d       	mov	r26, r0
    17a6:	0b 01       	movw	r0, r22
    17a8:	b9 01       	movw	r22, r18
    17aa:	90 01       	movw	r18, r0
    17ac:	0c 01       	movw	r0, r24
    17ae:	ca 01       	movw	r24, r20
    17b0:	a0 01       	movw	r20, r0
    17b2:	11 24       	eor	r1, r1
    17b4:	ff 27       	eor	r31, r31
    17b6:	59 1b       	sub	r21, r25
    17b8:	99 f0       	breq	.+38     	; 0x17e0 <__addsf3x+0x60>
    17ba:	59 3f       	cpi	r21, 0xF9	; 249
    17bc:	50 f4       	brcc	.+20     	; 0x17d2 <__addsf3x+0x52>
    17be:	50 3e       	cpi	r21, 0xE0	; 224
    17c0:	68 f1       	brcs	.+90     	; 0x181c <__addsf3x+0x9c>
    17c2:	1a 16       	cp	r1, r26
    17c4:	f0 40       	sbci	r31, 0x00	; 0
    17c6:	a2 2f       	mov	r26, r18
    17c8:	23 2f       	mov	r18, r19
    17ca:	34 2f       	mov	r19, r20
    17cc:	44 27       	eor	r20, r20
    17ce:	58 5f       	subi	r21, 0xF8	; 248
    17d0:	f3 cf       	rjmp	.-26     	; 0x17b8 <__addsf3x+0x38>
    17d2:	46 95       	lsr	r20
    17d4:	37 95       	ror	r19
    17d6:	27 95       	ror	r18
    17d8:	a7 95       	ror	r26
    17da:	f0 40       	sbci	r31, 0x00	; 0
    17dc:	53 95       	inc	r21
    17de:	c9 f7       	brne	.-14     	; 0x17d2 <__addsf3x+0x52>
    17e0:	7e f4       	brtc	.+30     	; 0x1800 <__addsf3x+0x80>
    17e2:	1f 16       	cp	r1, r31
    17e4:	ba 0b       	sbc	r27, r26
    17e6:	62 0b       	sbc	r22, r18
    17e8:	73 0b       	sbc	r23, r19
    17ea:	84 0b       	sbc	r24, r20
    17ec:	ba f0       	brmi	.+46     	; 0x181c <__addsf3x+0x9c>
    17ee:	91 50       	subi	r25, 0x01	; 1
    17f0:	a1 f0       	breq	.+40     	; 0x181a <__addsf3x+0x9a>
    17f2:	ff 0f       	add	r31, r31
    17f4:	bb 1f       	adc	r27, r27
    17f6:	66 1f       	adc	r22, r22
    17f8:	77 1f       	adc	r23, r23
    17fa:	88 1f       	adc	r24, r24
    17fc:	c2 f7       	brpl	.-16     	; 0x17ee <__addsf3x+0x6e>
    17fe:	0e c0       	rjmp	.+28     	; 0x181c <__addsf3x+0x9c>
    1800:	ba 0f       	add	r27, r26
    1802:	62 1f       	adc	r22, r18
    1804:	73 1f       	adc	r23, r19
    1806:	84 1f       	adc	r24, r20
    1808:	48 f4       	brcc	.+18     	; 0x181c <__addsf3x+0x9c>
    180a:	87 95       	ror	r24
    180c:	77 95       	ror	r23
    180e:	67 95       	ror	r22
    1810:	b7 95       	ror	r27
    1812:	f7 95       	ror	r31
    1814:	9e 3f       	cpi	r25, 0xFE	; 254
    1816:	08 f0       	brcs	.+2      	; 0x181a <__addsf3x+0x9a>
    1818:	b0 cf       	rjmp	.-160    	; 0x177a <__addsf3+0x28>
    181a:	93 95       	inc	r25
    181c:	88 0f       	add	r24, r24
    181e:	08 f0       	brcs	.+2      	; 0x1822 <__addsf3x+0xa2>
    1820:	99 27       	eor	r25, r25
    1822:	ee 0f       	add	r30, r30
    1824:	97 95       	ror	r25
    1826:	87 95       	ror	r24
    1828:	08 95       	ret
    182a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__fp_pscA>
    182e:	60 f0       	brcs	.+24     	; 0x1848 <__addsf3x+0xc8>
    1830:	80 e8       	ldi	r24, 0x80	; 128
    1832:	91 e0       	ldi	r25, 0x01	; 1
    1834:	09 f4       	brne	.+2      	; 0x1838 <__addsf3x+0xb8>
    1836:	9e ef       	ldi	r25, 0xFE	; 254
    1838:	0e 94 a8 0d 	call	0x1b50	; 0x1b50 <__fp_pscB>
    183c:	28 f0       	brcs	.+10     	; 0x1848 <__addsf3x+0xc8>
    183e:	40 e8       	ldi	r20, 0x80	; 128
    1840:	51 e0       	ldi	r21, 0x01	; 1
    1842:	71 f4       	brne	.+28     	; 0x1860 <atan2+0x10>
    1844:	5e ef       	ldi	r21, 0xFE	; 254
    1846:	0c c0       	rjmp	.+24     	; 0x1860 <atan2+0x10>
    1848:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>
    184c:	0c 94 21 0e 	jmp	0x1c42	; 0x1c42 <__fp_zero>

00001850 <atan2>:
    1850:	e9 2f       	mov	r30, r25
    1852:	e0 78       	andi	r30, 0x80	; 128
    1854:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <__fp_split3>
    1858:	40 f3       	brcs	.-48     	; 0x182a <__addsf3x+0xaa>
    185a:	09 2e       	mov	r0, r25
    185c:	05 2a       	or	r0, r21
    185e:	b1 f3       	breq	.-20     	; 0x184c <__addsf3x+0xcc>
    1860:	26 17       	cp	r18, r22
    1862:	37 07       	cpc	r19, r23
    1864:	48 07       	cpc	r20, r24
    1866:	59 07       	cpc	r21, r25
    1868:	38 f0       	brcs	.+14     	; 0x1878 <atan2+0x28>
    186a:	0e 2e       	mov	r0, r30
    186c:	07 f8       	bld	r0, 7
    186e:	e0 25       	eor	r30, r0
    1870:	69 f0       	breq	.+26     	; 0x188c <atan2+0x3c>
    1872:	e0 25       	eor	r30, r0
    1874:	e0 64       	ori	r30, 0x40	; 64
    1876:	0a c0       	rjmp	.+20     	; 0x188c <atan2+0x3c>
    1878:	ef 63       	ori	r30, 0x3F	; 63
    187a:	07 f8       	bld	r0, 7
    187c:	00 94       	com	r0
    187e:	07 fa       	bst	r0, 7
    1880:	db 01       	movw	r26, r22
    1882:	b9 01       	movw	r22, r18
    1884:	9d 01       	movw	r18, r26
    1886:	dc 01       	movw	r26, r24
    1888:	ca 01       	movw	r24, r20
    188a:	ad 01       	movw	r20, r26
    188c:	ef 93       	push	r30
    188e:	0e 94 a3 0c 	call	0x1946	; 0x1946 <__divsf3_pse>
    1892:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__fp_round>
    1896:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <atan>
    189a:	5f 91       	pop	r21
    189c:	55 23       	and	r21, r21
    189e:	39 f0       	breq	.+14     	; 0x18ae <atan2+0x5e>
    18a0:	2b ed       	ldi	r18, 0xDB	; 219
    18a2:	3f e0       	ldi	r19, 0x0F	; 15
    18a4:	49 e4       	ldi	r20, 0x49	; 73
    18a6:	50 fd       	sbrc	r21, 0
    18a8:	49 ec       	ldi	r20, 0xC9	; 201
    18aa:	0c 94 a9 0b 	jmp	0x1752	; 0x1752 <__addsf3>
    18ae:	08 95       	ret

000018b0 <atan>:
    18b0:	df 93       	push	r29
    18b2:	dd 27       	eor	r29, r29
    18b4:	b9 2f       	mov	r27, r25
    18b6:	bf 77       	andi	r27, 0x7F	; 127
    18b8:	40 e8       	ldi	r20, 0x80	; 128
    18ba:	5f e3       	ldi	r21, 0x3F	; 63
    18bc:	16 16       	cp	r1, r22
    18be:	17 06       	cpc	r1, r23
    18c0:	48 07       	cpc	r20, r24
    18c2:	5b 07       	cpc	r21, r27
    18c4:	18 f4       	brcc	.+6      	; 0x18cc <atan+0x1c>
    18c6:	d9 2f       	mov	r29, r25
    18c8:	0e 94 2d 0e 	call	0x1c5a	; 0x1c5a <inverse>
    18cc:	9f 93       	push	r25
    18ce:	8f 93       	push	r24
    18d0:	7f 93       	push	r23
    18d2:	6f 93       	push	r22
    18d4:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <square>
    18d8:	ec ea       	ldi	r30, 0xAC	; 172
    18da:	f0 e0       	ldi	r31, 0x00	; 0
    18dc:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fp_powser>
    18e0:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__fp_round>
    18e4:	2f 91       	pop	r18
    18e6:	3f 91       	pop	r19
    18e8:	4f 91       	pop	r20
    18ea:	5f 91       	pop	r21
    18ec:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <__mulsf3x>
    18f0:	dd 23       	and	r29, r29
    18f2:	51 f0       	breq	.+20     	; 0x1908 <atan+0x58>
    18f4:	90 58       	subi	r25, 0x80	; 128
    18f6:	a2 ea       	ldi	r26, 0xA2	; 162
    18f8:	2a ed       	ldi	r18, 0xDA	; 218
    18fa:	3f e0       	ldi	r19, 0x0F	; 15
    18fc:	49 ec       	ldi	r20, 0xC9	; 201
    18fe:	5f e3       	ldi	r21, 0x3F	; 63
    1900:	d0 78       	andi	r29, 0x80	; 128
    1902:	5d 27       	eor	r21, r29
    1904:	0e 94 c0 0b 	call	0x1780	; 0x1780 <__addsf3x>
    1908:	df 91       	pop	r29
    190a:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__fp_round>

0000190e <cos>:
    190e:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__fp_rempio2>
    1912:	e3 95       	inc	r30
    1914:	0c 94 eb 0d 	jmp	0x1bd6	; 0x1bd6 <__fp_sinus>

00001918 <__divsf3>:
    1918:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__divsf3x>
    191c:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__fp_round>
    1920:	0e 94 a8 0d 	call	0x1b50	; 0x1b50 <__fp_pscB>
    1924:	58 f0       	brcs	.+22     	; 0x193c <__divsf3+0x24>
    1926:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__fp_pscA>
    192a:	40 f0       	brcs	.+16     	; 0x193c <__divsf3+0x24>
    192c:	29 f4       	brne	.+10     	; 0x1938 <__divsf3+0x20>
    192e:	5f 3f       	cpi	r21, 0xFF	; 255
    1930:	29 f0       	breq	.+10     	; 0x193c <__divsf3+0x24>
    1932:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    1936:	51 11       	cpse	r21, r1
    1938:	0c 94 22 0e 	jmp	0x1c44	; 0x1c44 <__fp_szero>
    193c:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>

00001940 <__divsf3x>:
    1940:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <__fp_split3>
    1944:	68 f3       	brcs	.-38     	; 0x1920 <__divsf3+0x8>

00001946 <__divsf3_pse>:
    1946:	99 23       	and	r25, r25
    1948:	b1 f3       	breq	.-20     	; 0x1936 <__divsf3+0x1e>
    194a:	55 23       	and	r21, r21
    194c:	91 f3       	breq	.-28     	; 0x1932 <__divsf3+0x1a>
    194e:	95 1b       	sub	r25, r21
    1950:	55 0b       	sbc	r21, r21
    1952:	bb 27       	eor	r27, r27
    1954:	aa 27       	eor	r26, r26
    1956:	62 17       	cp	r22, r18
    1958:	73 07       	cpc	r23, r19
    195a:	84 07       	cpc	r24, r20
    195c:	38 f0       	brcs	.+14     	; 0x196c <__divsf3_pse+0x26>
    195e:	9f 5f       	subi	r25, 0xFF	; 255
    1960:	5f 4f       	sbci	r21, 0xFF	; 255
    1962:	22 0f       	add	r18, r18
    1964:	33 1f       	adc	r19, r19
    1966:	44 1f       	adc	r20, r20
    1968:	aa 1f       	adc	r26, r26
    196a:	a9 f3       	breq	.-22     	; 0x1956 <__divsf3_pse+0x10>
    196c:	35 d0       	rcall	.+106    	; 0x19d8 <__divsf3_pse+0x92>
    196e:	0e 2e       	mov	r0, r30
    1970:	3a f0       	brmi	.+14     	; 0x1980 <__divsf3_pse+0x3a>
    1972:	e0 e8       	ldi	r30, 0x80	; 128
    1974:	32 d0       	rcall	.+100    	; 0x19da <__divsf3_pse+0x94>
    1976:	91 50       	subi	r25, 0x01	; 1
    1978:	50 40       	sbci	r21, 0x00	; 0
    197a:	e6 95       	lsr	r30
    197c:	00 1c       	adc	r0, r0
    197e:	ca f7       	brpl	.-14     	; 0x1972 <__divsf3_pse+0x2c>
    1980:	2b d0       	rcall	.+86     	; 0x19d8 <__divsf3_pse+0x92>
    1982:	fe 2f       	mov	r31, r30
    1984:	29 d0       	rcall	.+82     	; 0x19d8 <__divsf3_pse+0x92>
    1986:	66 0f       	add	r22, r22
    1988:	77 1f       	adc	r23, r23
    198a:	88 1f       	adc	r24, r24
    198c:	bb 1f       	adc	r27, r27
    198e:	26 17       	cp	r18, r22
    1990:	37 07       	cpc	r19, r23
    1992:	48 07       	cpc	r20, r24
    1994:	ab 07       	cpc	r26, r27
    1996:	b0 e8       	ldi	r27, 0x80	; 128
    1998:	09 f0       	breq	.+2      	; 0x199c <__divsf3_pse+0x56>
    199a:	bb 0b       	sbc	r27, r27
    199c:	80 2d       	mov	r24, r0
    199e:	bf 01       	movw	r22, r30
    19a0:	ff 27       	eor	r31, r31
    19a2:	93 58       	subi	r25, 0x83	; 131
    19a4:	5f 4f       	sbci	r21, 0xFF	; 255
    19a6:	3a f0       	brmi	.+14     	; 0x19b6 <__divsf3_pse+0x70>
    19a8:	9e 3f       	cpi	r25, 0xFE	; 254
    19aa:	51 05       	cpc	r21, r1
    19ac:	78 f0       	brcs	.+30     	; 0x19cc <__divsf3_pse+0x86>
    19ae:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    19b2:	0c 94 22 0e 	jmp	0x1c44	; 0x1c44 <__fp_szero>
    19b6:	5f 3f       	cpi	r21, 0xFF	; 255
    19b8:	e4 f3       	brlt	.-8      	; 0x19b2 <__divsf3_pse+0x6c>
    19ba:	98 3e       	cpi	r25, 0xE8	; 232
    19bc:	d4 f3       	brlt	.-12     	; 0x19b2 <__divsf3_pse+0x6c>
    19be:	86 95       	lsr	r24
    19c0:	77 95       	ror	r23
    19c2:	67 95       	ror	r22
    19c4:	b7 95       	ror	r27
    19c6:	f7 95       	ror	r31
    19c8:	9f 5f       	subi	r25, 0xFF	; 255
    19ca:	c9 f7       	brne	.-14     	; 0x19be <__divsf3_pse+0x78>
    19cc:	88 0f       	add	r24, r24
    19ce:	91 1d       	adc	r25, r1
    19d0:	96 95       	lsr	r25
    19d2:	87 95       	ror	r24
    19d4:	97 f9       	bld	r25, 7
    19d6:	08 95       	ret
    19d8:	e1 e0       	ldi	r30, 0x01	; 1
    19da:	66 0f       	add	r22, r22
    19dc:	77 1f       	adc	r23, r23
    19de:	88 1f       	adc	r24, r24
    19e0:	bb 1f       	adc	r27, r27
    19e2:	62 17       	cp	r22, r18
    19e4:	73 07       	cpc	r23, r19
    19e6:	84 07       	cpc	r24, r20
    19e8:	ba 07       	cpc	r27, r26
    19ea:	20 f0       	brcs	.+8      	; 0x19f4 <__divsf3_pse+0xae>
    19ec:	62 1b       	sub	r22, r18
    19ee:	73 0b       	sbc	r23, r19
    19f0:	84 0b       	sbc	r24, r20
    19f2:	ba 0b       	sbc	r27, r26
    19f4:	ee 1f       	adc	r30, r30
    19f6:	88 f7       	brcc	.-30     	; 0x19da <__divsf3_pse+0x94>
    19f8:	e0 95       	com	r30
    19fa:	08 95       	ret

000019fc <__fixsfsi>:
    19fc:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fixunssfsi>
    1a00:	68 94       	set
    1a02:	b1 11       	cpse	r27, r1
    1a04:	0c 94 22 0e 	jmp	0x1c44	; 0x1c44 <__fp_szero>
    1a08:	08 95       	ret

00001a0a <__fixunssfsi>:
    1a0a:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <__fp_splitA>
    1a0e:	88 f0       	brcs	.+34     	; 0x1a32 <__fixunssfsi+0x28>
    1a10:	9f 57       	subi	r25, 0x7F	; 127
    1a12:	98 f0       	brcs	.+38     	; 0x1a3a <__fixunssfsi+0x30>
    1a14:	b9 2f       	mov	r27, r25
    1a16:	99 27       	eor	r25, r25
    1a18:	b7 51       	subi	r27, 0x17	; 23
    1a1a:	b0 f0       	brcs	.+44     	; 0x1a48 <__fixunssfsi+0x3e>
    1a1c:	e1 f0       	breq	.+56     	; 0x1a56 <__fixunssfsi+0x4c>
    1a1e:	66 0f       	add	r22, r22
    1a20:	77 1f       	adc	r23, r23
    1a22:	88 1f       	adc	r24, r24
    1a24:	99 1f       	adc	r25, r25
    1a26:	1a f0       	brmi	.+6      	; 0x1a2e <__fixunssfsi+0x24>
    1a28:	ba 95       	dec	r27
    1a2a:	c9 f7       	brne	.-14     	; 0x1a1e <__fixunssfsi+0x14>
    1a2c:	14 c0       	rjmp	.+40     	; 0x1a56 <__fixunssfsi+0x4c>
    1a2e:	b1 30       	cpi	r27, 0x01	; 1
    1a30:	91 f0       	breq	.+36     	; 0x1a56 <__fixunssfsi+0x4c>
    1a32:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__fp_zero>
    1a36:	b1 e0       	ldi	r27, 0x01	; 1
    1a38:	08 95       	ret
    1a3a:	0c 94 21 0e 	jmp	0x1c42	; 0x1c42 <__fp_zero>
    1a3e:	67 2f       	mov	r22, r23
    1a40:	78 2f       	mov	r23, r24
    1a42:	88 27       	eor	r24, r24
    1a44:	b8 5f       	subi	r27, 0xF8	; 248
    1a46:	39 f0       	breq	.+14     	; 0x1a56 <__fixunssfsi+0x4c>
    1a48:	b9 3f       	cpi	r27, 0xF9	; 249
    1a4a:	cc f3       	brlt	.-14     	; 0x1a3e <__fixunssfsi+0x34>
    1a4c:	86 95       	lsr	r24
    1a4e:	77 95       	ror	r23
    1a50:	67 95       	ror	r22
    1a52:	b3 95       	inc	r27
    1a54:	d9 f7       	brne	.-10     	; 0x1a4c <__fixunssfsi+0x42>
    1a56:	3e f4       	brtc	.+14     	; 0x1a66 <__fixunssfsi+0x5c>
    1a58:	90 95       	com	r25
    1a5a:	80 95       	com	r24
    1a5c:	70 95       	com	r23
    1a5e:	61 95       	neg	r22
    1a60:	7f 4f       	sbci	r23, 0xFF	; 255
    1a62:	8f 4f       	sbci	r24, 0xFF	; 255
    1a64:	9f 4f       	sbci	r25, 0xFF	; 255
    1a66:	08 95       	ret

00001a68 <__floatunsisf>:
    1a68:	e8 94       	clt
    1a6a:	09 c0       	rjmp	.+18     	; 0x1a7e <__floatsisf+0x12>

00001a6c <__floatsisf>:
    1a6c:	97 fb       	bst	r25, 7
    1a6e:	3e f4       	brtc	.+14     	; 0x1a7e <__floatsisf+0x12>
    1a70:	90 95       	com	r25
    1a72:	80 95       	com	r24
    1a74:	70 95       	com	r23
    1a76:	61 95       	neg	r22
    1a78:	7f 4f       	sbci	r23, 0xFF	; 255
    1a7a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a7e:	99 23       	and	r25, r25
    1a80:	a9 f0       	breq	.+42     	; 0x1aac <__floatsisf+0x40>
    1a82:	f9 2f       	mov	r31, r25
    1a84:	96 e9       	ldi	r25, 0x96	; 150
    1a86:	bb 27       	eor	r27, r27
    1a88:	93 95       	inc	r25
    1a8a:	f6 95       	lsr	r31
    1a8c:	87 95       	ror	r24
    1a8e:	77 95       	ror	r23
    1a90:	67 95       	ror	r22
    1a92:	b7 95       	ror	r27
    1a94:	f1 11       	cpse	r31, r1
    1a96:	f8 cf       	rjmp	.-16     	; 0x1a88 <__floatsisf+0x1c>
    1a98:	fa f4       	brpl	.+62     	; 0x1ad8 <__floatsisf+0x6c>
    1a9a:	bb 0f       	add	r27, r27
    1a9c:	11 f4       	brne	.+4      	; 0x1aa2 <__floatsisf+0x36>
    1a9e:	60 ff       	sbrs	r22, 0
    1aa0:	1b c0       	rjmp	.+54     	; 0x1ad8 <__floatsisf+0x6c>
    1aa2:	6f 5f       	subi	r22, 0xFF	; 255
    1aa4:	7f 4f       	sbci	r23, 0xFF	; 255
    1aa6:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aaa:	16 c0       	rjmp	.+44     	; 0x1ad8 <__floatsisf+0x6c>
    1aac:	88 23       	and	r24, r24
    1aae:	11 f0       	breq	.+4      	; 0x1ab4 <__floatsisf+0x48>
    1ab0:	96 e9       	ldi	r25, 0x96	; 150
    1ab2:	11 c0       	rjmp	.+34     	; 0x1ad6 <__floatsisf+0x6a>
    1ab4:	77 23       	and	r23, r23
    1ab6:	21 f0       	breq	.+8      	; 0x1ac0 <__floatsisf+0x54>
    1ab8:	9e e8       	ldi	r25, 0x8E	; 142
    1aba:	87 2f       	mov	r24, r23
    1abc:	76 2f       	mov	r23, r22
    1abe:	05 c0       	rjmp	.+10     	; 0x1aca <__floatsisf+0x5e>
    1ac0:	66 23       	and	r22, r22
    1ac2:	71 f0       	breq	.+28     	; 0x1ae0 <__floatsisf+0x74>
    1ac4:	96 e8       	ldi	r25, 0x86	; 134
    1ac6:	86 2f       	mov	r24, r22
    1ac8:	70 e0       	ldi	r23, 0x00	; 0
    1aca:	60 e0       	ldi	r22, 0x00	; 0
    1acc:	2a f0       	brmi	.+10     	; 0x1ad8 <__floatsisf+0x6c>
    1ace:	9a 95       	dec	r25
    1ad0:	66 0f       	add	r22, r22
    1ad2:	77 1f       	adc	r23, r23
    1ad4:	88 1f       	adc	r24, r24
    1ad6:	da f7       	brpl	.-10     	; 0x1ace <__floatsisf+0x62>
    1ad8:	88 0f       	add	r24, r24
    1ada:	96 95       	lsr	r25
    1adc:	87 95       	ror	r24
    1ade:	97 f9       	bld	r25, 7
    1ae0:	08 95       	ret

00001ae2 <__fp_inf>:
    1ae2:	97 f9       	bld	r25, 7
    1ae4:	9f 67       	ori	r25, 0x7F	; 127
    1ae6:	80 e8       	ldi	r24, 0x80	; 128
    1ae8:	70 e0       	ldi	r23, 0x00	; 0
    1aea:	60 e0       	ldi	r22, 0x00	; 0
    1aec:	08 95       	ret

00001aee <__fp_nan>:
    1aee:	9f ef       	ldi	r25, 0xFF	; 255
    1af0:	80 ec       	ldi	r24, 0xC0	; 192
    1af2:	08 95       	ret

00001af4 <__fp_powser>:
    1af4:	df 93       	push	r29
    1af6:	cf 93       	push	r28
    1af8:	1f 93       	push	r17
    1afa:	0f 93       	push	r16
    1afc:	ff 92       	push	r15
    1afe:	ef 92       	push	r14
    1b00:	df 92       	push	r13
    1b02:	7b 01       	movw	r14, r22
    1b04:	8c 01       	movw	r16, r24
    1b06:	68 94       	set
    1b08:	06 c0       	rjmp	.+12     	; 0x1b16 <__fp_powser+0x22>
    1b0a:	da 2e       	mov	r13, r26
    1b0c:	ef 01       	movw	r28, r30
    1b0e:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <__mulsf3x>
    1b12:	fe 01       	movw	r30, r28
    1b14:	e8 94       	clt
    1b16:	a5 91       	lpm	r26, Z+
    1b18:	25 91       	lpm	r18, Z+
    1b1a:	35 91       	lpm	r19, Z+
    1b1c:	45 91       	lpm	r20, Z+
    1b1e:	55 91       	lpm	r21, Z+
    1b20:	a6 f3       	brts	.-24     	; 0x1b0a <__fp_powser+0x16>
    1b22:	ef 01       	movw	r28, r30
    1b24:	0e 94 c0 0b 	call	0x1780	; 0x1780 <__addsf3x>
    1b28:	fe 01       	movw	r30, r28
    1b2a:	97 01       	movw	r18, r14
    1b2c:	a8 01       	movw	r20, r16
    1b2e:	da 94       	dec	r13
    1b30:	69 f7       	brne	.-38     	; 0x1b0c <__fp_powser+0x18>
    1b32:	df 90       	pop	r13
    1b34:	ef 90       	pop	r14
    1b36:	ff 90       	pop	r15
    1b38:	0f 91       	pop	r16
    1b3a:	1f 91       	pop	r17
    1b3c:	cf 91       	pop	r28
    1b3e:	df 91       	pop	r29
    1b40:	08 95       	ret

00001b42 <__fp_pscA>:
    1b42:	00 24       	eor	r0, r0
    1b44:	0a 94       	dec	r0
    1b46:	16 16       	cp	r1, r22
    1b48:	17 06       	cpc	r1, r23
    1b4a:	18 06       	cpc	r1, r24
    1b4c:	09 06       	cpc	r0, r25
    1b4e:	08 95       	ret

00001b50 <__fp_pscB>:
    1b50:	00 24       	eor	r0, r0
    1b52:	0a 94       	dec	r0
    1b54:	12 16       	cp	r1, r18
    1b56:	13 06       	cpc	r1, r19
    1b58:	14 06       	cpc	r1, r20
    1b5a:	05 06       	cpc	r0, r21
    1b5c:	08 95       	ret
    1b5e:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>

00001b62 <__fp_rempio2>:
    1b62:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <__fp_splitA>
    1b66:	d8 f3       	brcs	.-10     	; 0x1b5e <__fp_pscB+0xe>
    1b68:	e8 94       	clt
    1b6a:	e0 e0       	ldi	r30, 0x00	; 0
    1b6c:	bb 27       	eor	r27, r27
    1b6e:	9f 57       	subi	r25, 0x7F	; 127
    1b70:	f0 f0       	brcs	.+60     	; 0x1bae <__fp_rempio2+0x4c>
    1b72:	2a ed       	ldi	r18, 0xDA	; 218
    1b74:	3f e0       	ldi	r19, 0x0F	; 15
    1b76:	49 ec       	ldi	r20, 0xC9	; 201
    1b78:	06 c0       	rjmp	.+12     	; 0x1b86 <__fp_rempio2+0x24>
    1b7a:	ee 0f       	add	r30, r30
    1b7c:	bb 0f       	add	r27, r27
    1b7e:	66 1f       	adc	r22, r22
    1b80:	77 1f       	adc	r23, r23
    1b82:	88 1f       	adc	r24, r24
    1b84:	28 f0       	brcs	.+10     	; 0x1b90 <__fp_rempio2+0x2e>
    1b86:	b2 3a       	cpi	r27, 0xA2	; 162
    1b88:	62 07       	cpc	r22, r18
    1b8a:	73 07       	cpc	r23, r19
    1b8c:	84 07       	cpc	r24, r20
    1b8e:	28 f0       	brcs	.+10     	; 0x1b9a <__fp_rempio2+0x38>
    1b90:	b2 5a       	subi	r27, 0xA2	; 162
    1b92:	62 0b       	sbc	r22, r18
    1b94:	73 0b       	sbc	r23, r19
    1b96:	84 0b       	sbc	r24, r20
    1b98:	e3 95       	inc	r30
    1b9a:	9a 95       	dec	r25
    1b9c:	72 f7       	brpl	.-36     	; 0x1b7a <__fp_rempio2+0x18>
    1b9e:	80 38       	cpi	r24, 0x80	; 128
    1ba0:	30 f4       	brcc	.+12     	; 0x1bae <__fp_rempio2+0x4c>
    1ba2:	9a 95       	dec	r25
    1ba4:	bb 0f       	add	r27, r27
    1ba6:	66 1f       	adc	r22, r22
    1ba8:	77 1f       	adc	r23, r23
    1baa:	88 1f       	adc	r24, r24
    1bac:	d2 f7       	brpl	.-12     	; 0x1ba2 <__fp_rempio2+0x40>
    1bae:	90 48       	sbci	r25, 0x80	; 128
    1bb0:	0c 94 1a 0f 	jmp	0x1e34	; 0x1e34 <__fp_mpack_finite>

00001bb4 <__fp_round>:
    1bb4:	09 2e       	mov	r0, r25
    1bb6:	03 94       	inc	r0
    1bb8:	00 0c       	add	r0, r0
    1bba:	11 f4       	brne	.+4      	; 0x1bc0 <__fp_round+0xc>
    1bbc:	88 23       	and	r24, r24
    1bbe:	52 f0       	brmi	.+20     	; 0x1bd4 <__fp_round+0x20>
    1bc0:	bb 0f       	add	r27, r27
    1bc2:	40 f4       	brcc	.+16     	; 0x1bd4 <__fp_round+0x20>
    1bc4:	bf 2b       	or	r27, r31
    1bc6:	11 f4       	brne	.+4      	; 0x1bcc <__fp_round+0x18>
    1bc8:	60 ff       	sbrs	r22, 0
    1bca:	04 c0       	rjmp	.+8      	; 0x1bd4 <__fp_round+0x20>
    1bcc:	6f 5f       	subi	r22, 0xFF	; 255
    1bce:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd0:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd4:	08 95       	ret

00001bd6 <__fp_sinus>:
    1bd6:	ef 93       	push	r30
    1bd8:	e0 ff       	sbrs	r30, 0
    1bda:	07 c0       	rjmp	.+14     	; 0x1bea <__fp_sinus+0x14>
    1bdc:	a2 ea       	ldi	r26, 0xA2	; 162
    1bde:	2a ed       	ldi	r18, 0xDA	; 218
    1be0:	3f e0       	ldi	r19, 0x0F	; 15
    1be2:	49 ec       	ldi	r20, 0xC9	; 201
    1be4:	5f eb       	ldi	r21, 0xBF	; 191
    1be6:	0e 94 c0 0b 	call	0x1780	; 0x1780 <__addsf3x>
    1bea:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__fp_round>
    1bee:	0f 90       	pop	r0
    1bf0:	03 94       	inc	r0
    1bf2:	01 fc       	sbrc	r0, 1
    1bf4:	90 58       	subi	r25, 0x80	; 128
    1bf6:	e9 ed       	ldi	r30, 0xD9	; 217
    1bf8:	f0 e0       	ldi	r31, 0x00	; 0
    1bfa:	0c 94 2d 0f 	jmp	0x1e5a	; 0x1e5a <__fp_powsodd>

00001bfe <__fp_split3>:
    1bfe:	57 fd       	sbrc	r21, 7
    1c00:	90 58       	subi	r25, 0x80	; 128
    1c02:	44 0f       	add	r20, r20
    1c04:	55 1f       	adc	r21, r21
    1c06:	59 f0       	breq	.+22     	; 0x1c1e <__fp_splitA+0x10>
    1c08:	5f 3f       	cpi	r21, 0xFF	; 255
    1c0a:	71 f0       	breq	.+28     	; 0x1c28 <__fp_splitA+0x1a>
    1c0c:	47 95       	ror	r20

00001c0e <__fp_splitA>:
    1c0e:	88 0f       	add	r24, r24
    1c10:	97 fb       	bst	r25, 7
    1c12:	99 1f       	adc	r25, r25
    1c14:	61 f0       	breq	.+24     	; 0x1c2e <__fp_splitA+0x20>
    1c16:	9f 3f       	cpi	r25, 0xFF	; 255
    1c18:	79 f0       	breq	.+30     	; 0x1c38 <__fp_splitA+0x2a>
    1c1a:	87 95       	ror	r24
    1c1c:	08 95       	ret
    1c1e:	12 16       	cp	r1, r18
    1c20:	13 06       	cpc	r1, r19
    1c22:	14 06       	cpc	r1, r20
    1c24:	55 1f       	adc	r21, r21
    1c26:	f2 cf       	rjmp	.-28     	; 0x1c0c <__fp_split3+0xe>
    1c28:	46 95       	lsr	r20
    1c2a:	f1 df       	rcall	.-30     	; 0x1c0e <__fp_splitA>
    1c2c:	08 c0       	rjmp	.+16     	; 0x1c3e <__fp_splitA+0x30>
    1c2e:	16 16       	cp	r1, r22
    1c30:	17 06       	cpc	r1, r23
    1c32:	18 06       	cpc	r1, r24
    1c34:	99 1f       	adc	r25, r25
    1c36:	f1 cf       	rjmp	.-30     	; 0x1c1a <__fp_splitA+0xc>
    1c38:	86 95       	lsr	r24
    1c3a:	71 05       	cpc	r23, r1
    1c3c:	61 05       	cpc	r22, r1
    1c3e:	08 94       	sec
    1c40:	08 95       	ret

00001c42 <__fp_zero>:
    1c42:	e8 94       	clt

00001c44 <__fp_szero>:
    1c44:	bb 27       	eor	r27, r27
    1c46:	66 27       	eor	r22, r22
    1c48:	77 27       	eor	r23, r23
    1c4a:	cb 01       	movw	r24, r22
    1c4c:	97 f9       	bld	r25, 7
    1c4e:	08 95       	ret

00001c50 <__gesf2>:
    1c50:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__fp_cmp>
    1c54:	08 f4       	brcc	.+2      	; 0x1c58 <__gesf2+0x8>
    1c56:	8f ef       	ldi	r24, 0xFF	; 255
    1c58:	08 95       	ret

00001c5a <inverse>:
    1c5a:	9b 01       	movw	r18, r22
    1c5c:	ac 01       	movw	r20, r24
    1c5e:	60 e0       	ldi	r22, 0x00	; 0
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	80 e8       	ldi	r24, 0x80	; 128
    1c64:	9f e3       	ldi	r25, 0x3F	; 63
    1c66:	0c 94 8c 0c 	jmp	0x1918	; 0x1918 <__divsf3>

00001c6a <__mulsf3>:
    1c6a:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <__mulsf3x>
    1c6e:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__fp_round>
    1c72:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__fp_pscA>
    1c76:	38 f0       	brcs	.+14     	; 0x1c86 <__mulsf3+0x1c>
    1c78:	0e 94 a8 0d 	call	0x1b50	; 0x1b50 <__fp_pscB>
    1c7c:	20 f0       	brcs	.+8      	; 0x1c86 <__mulsf3+0x1c>
    1c7e:	95 23       	and	r25, r21
    1c80:	11 f0       	breq	.+4      	; 0x1c86 <__mulsf3+0x1c>
    1c82:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    1c86:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>
    1c8a:	11 24       	eor	r1, r1
    1c8c:	0c 94 22 0e 	jmp	0x1c44	; 0x1c44 <__fp_szero>

00001c90 <__mulsf3x>:
    1c90:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <__fp_split3>
    1c94:	70 f3       	brcs	.-36     	; 0x1c72 <__mulsf3+0x8>

00001c96 <__mulsf3_pse>:
    1c96:	95 9f       	mul	r25, r21
    1c98:	c1 f3       	breq	.-16     	; 0x1c8a <__mulsf3+0x20>
    1c9a:	95 0f       	add	r25, r21
    1c9c:	50 e0       	ldi	r21, 0x00	; 0
    1c9e:	55 1f       	adc	r21, r21
    1ca0:	62 9f       	mul	r22, r18
    1ca2:	f0 01       	movw	r30, r0
    1ca4:	72 9f       	mul	r23, r18
    1ca6:	bb 27       	eor	r27, r27
    1ca8:	f0 0d       	add	r31, r0
    1caa:	b1 1d       	adc	r27, r1
    1cac:	63 9f       	mul	r22, r19
    1cae:	aa 27       	eor	r26, r26
    1cb0:	f0 0d       	add	r31, r0
    1cb2:	b1 1d       	adc	r27, r1
    1cb4:	aa 1f       	adc	r26, r26
    1cb6:	64 9f       	mul	r22, r20
    1cb8:	66 27       	eor	r22, r22
    1cba:	b0 0d       	add	r27, r0
    1cbc:	a1 1d       	adc	r26, r1
    1cbe:	66 1f       	adc	r22, r22
    1cc0:	82 9f       	mul	r24, r18
    1cc2:	22 27       	eor	r18, r18
    1cc4:	b0 0d       	add	r27, r0
    1cc6:	a1 1d       	adc	r26, r1
    1cc8:	62 1f       	adc	r22, r18
    1cca:	73 9f       	mul	r23, r19
    1ccc:	b0 0d       	add	r27, r0
    1cce:	a1 1d       	adc	r26, r1
    1cd0:	62 1f       	adc	r22, r18
    1cd2:	83 9f       	mul	r24, r19
    1cd4:	a0 0d       	add	r26, r0
    1cd6:	61 1d       	adc	r22, r1
    1cd8:	22 1f       	adc	r18, r18
    1cda:	74 9f       	mul	r23, r20
    1cdc:	33 27       	eor	r19, r19
    1cde:	a0 0d       	add	r26, r0
    1ce0:	61 1d       	adc	r22, r1
    1ce2:	23 1f       	adc	r18, r19
    1ce4:	84 9f       	mul	r24, r20
    1ce6:	60 0d       	add	r22, r0
    1ce8:	21 1d       	adc	r18, r1
    1cea:	82 2f       	mov	r24, r18
    1cec:	76 2f       	mov	r23, r22
    1cee:	6a 2f       	mov	r22, r26
    1cf0:	11 24       	eor	r1, r1
    1cf2:	9f 57       	subi	r25, 0x7F	; 127
    1cf4:	50 40       	sbci	r21, 0x00	; 0
    1cf6:	9a f0       	brmi	.+38     	; 0x1d1e <__mulsf3_pse+0x88>
    1cf8:	f1 f0       	breq	.+60     	; 0x1d36 <__mulsf3_pse+0xa0>
    1cfa:	88 23       	and	r24, r24
    1cfc:	4a f0       	brmi	.+18     	; 0x1d10 <__mulsf3_pse+0x7a>
    1cfe:	ee 0f       	add	r30, r30
    1d00:	ff 1f       	adc	r31, r31
    1d02:	bb 1f       	adc	r27, r27
    1d04:	66 1f       	adc	r22, r22
    1d06:	77 1f       	adc	r23, r23
    1d08:	88 1f       	adc	r24, r24
    1d0a:	91 50       	subi	r25, 0x01	; 1
    1d0c:	50 40       	sbci	r21, 0x00	; 0
    1d0e:	a9 f7       	brne	.-22     	; 0x1cfa <__mulsf3_pse+0x64>
    1d10:	9e 3f       	cpi	r25, 0xFE	; 254
    1d12:	51 05       	cpc	r21, r1
    1d14:	80 f0       	brcs	.+32     	; 0x1d36 <__mulsf3_pse+0xa0>
    1d16:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    1d1a:	0c 94 22 0e 	jmp	0x1c44	; 0x1c44 <__fp_szero>
    1d1e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d20:	e4 f3       	brlt	.-8      	; 0x1d1a <__mulsf3_pse+0x84>
    1d22:	98 3e       	cpi	r25, 0xE8	; 232
    1d24:	d4 f3       	brlt	.-12     	; 0x1d1a <__mulsf3_pse+0x84>
    1d26:	86 95       	lsr	r24
    1d28:	77 95       	ror	r23
    1d2a:	67 95       	ror	r22
    1d2c:	b7 95       	ror	r27
    1d2e:	f7 95       	ror	r31
    1d30:	e7 95       	ror	r30
    1d32:	9f 5f       	subi	r25, 0xFF	; 255
    1d34:	c1 f7       	brne	.-16     	; 0x1d26 <__mulsf3_pse+0x90>
    1d36:	fe 2b       	or	r31, r30
    1d38:	88 0f       	add	r24, r24
    1d3a:	91 1d       	adc	r25, r1
    1d3c:	96 95       	lsr	r25
    1d3e:	87 95       	ror	r24
    1d40:	97 f9       	bld	r25, 7
    1d42:	08 95       	ret

00001d44 <sin>:
    1d44:	9f 93       	push	r25
    1d46:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__fp_rempio2>
    1d4a:	0f 90       	pop	r0
    1d4c:	07 fc       	sbrc	r0, 7
    1d4e:	ee 5f       	subi	r30, 0xFE	; 254
    1d50:	0c 94 eb 0d 	jmp	0x1bd6	; 0x1bd6 <__fp_sinus>
    1d54:	19 f4       	brne	.+6      	; 0x1d5c <sin+0x18>
    1d56:	16 f4       	brtc	.+4      	; 0x1d5c <sin+0x18>
    1d58:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>
    1d5c:	0c 94 18 0f 	jmp	0x1e30	; 0x1e30 <__fp_mpack>

00001d60 <sqrt>:
    1d60:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <__fp_splitA>
    1d64:	b8 f3       	brcs	.-18     	; 0x1d54 <sin+0x10>
    1d66:	99 23       	and	r25, r25
    1d68:	c9 f3       	breq	.-14     	; 0x1d5c <sin+0x18>
    1d6a:	b6 f3       	brts	.-20     	; 0x1d58 <sin+0x14>
    1d6c:	9f 57       	subi	r25, 0x7F	; 127
    1d6e:	55 0b       	sbc	r21, r21
    1d70:	87 ff       	sbrs	r24, 7
    1d72:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <__fp_norm2>
    1d76:	00 24       	eor	r0, r0
    1d78:	a0 e6       	ldi	r26, 0x60	; 96
    1d7a:	40 ea       	ldi	r20, 0xA0	; 160
    1d7c:	90 01       	movw	r18, r0
    1d7e:	80 58       	subi	r24, 0x80	; 128
    1d80:	56 95       	lsr	r21
    1d82:	97 95       	ror	r25
    1d84:	28 f4       	brcc	.+10     	; 0x1d90 <sqrt+0x30>
    1d86:	80 5c       	subi	r24, 0xC0	; 192
    1d88:	66 0f       	add	r22, r22
    1d8a:	77 1f       	adc	r23, r23
    1d8c:	88 1f       	adc	r24, r24
    1d8e:	20 f0       	brcs	.+8      	; 0x1d98 <sqrt+0x38>
    1d90:	26 17       	cp	r18, r22
    1d92:	37 07       	cpc	r19, r23
    1d94:	48 07       	cpc	r20, r24
    1d96:	30 f4       	brcc	.+12     	; 0x1da4 <sqrt+0x44>
    1d98:	62 1b       	sub	r22, r18
    1d9a:	73 0b       	sbc	r23, r19
    1d9c:	84 0b       	sbc	r24, r20
    1d9e:	20 29       	or	r18, r0
    1da0:	31 29       	or	r19, r1
    1da2:	4a 2b       	or	r20, r26
    1da4:	a6 95       	lsr	r26
    1da6:	17 94       	ror	r1
    1da8:	07 94       	ror	r0
    1daa:	20 25       	eor	r18, r0
    1dac:	31 25       	eor	r19, r1
    1dae:	4a 27       	eor	r20, r26
    1db0:	58 f7       	brcc	.-42     	; 0x1d88 <sqrt+0x28>
    1db2:	66 0f       	add	r22, r22
    1db4:	77 1f       	adc	r23, r23
    1db6:	88 1f       	adc	r24, r24
    1db8:	20 f0       	brcs	.+8      	; 0x1dc2 <sqrt+0x62>
    1dba:	26 17       	cp	r18, r22
    1dbc:	37 07       	cpc	r19, r23
    1dbe:	48 07       	cpc	r20, r24
    1dc0:	30 f4       	brcc	.+12     	; 0x1dce <sqrt+0x6e>
    1dc2:	62 0b       	sbc	r22, r18
    1dc4:	73 0b       	sbc	r23, r19
    1dc6:	84 0b       	sbc	r24, r20
    1dc8:	20 0d       	add	r18, r0
    1dca:	31 1d       	adc	r19, r1
    1dcc:	41 1d       	adc	r20, r1
    1dce:	a0 95       	com	r26
    1dd0:	81 f7       	brne	.-32     	; 0x1db2 <sqrt+0x52>
    1dd2:	b9 01       	movw	r22, r18
    1dd4:	84 2f       	mov	r24, r20
    1dd6:	91 58       	subi	r25, 0x81	; 129
    1dd8:	88 0f       	add	r24, r24
    1dda:	96 95       	lsr	r25
    1ddc:	87 95       	ror	r24
    1dde:	08 95       	ret

00001de0 <square>:
    1de0:	9b 01       	movw	r18, r22
    1de2:	ac 01       	movw	r20, r24
    1de4:	0c 94 35 0e 	jmp	0x1c6a	; 0x1c6a <__mulsf3>

00001de8 <__fp_cmp>:
    1de8:	99 0f       	add	r25, r25
    1dea:	00 08       	sbc	r0, r0
    1dec:	55 0f       	add	r21, r21
    1dee:	aa 0b       	sbc	r26, r26
    1df0:	e0 e8       	ldi	r30, 0x80	; 128
    1df2:	fe ef       	ldi	r31, 0xFE	; 254
    1df4:	16 16       	cp	r1, r22
    1df6:	17 06       	cpc	r1, r23
    1df8:	e8 07       	cpc	r30, r24
    1dfa:	f9 07       	cpc	r31, r25
    1dfc:	c0 f0       	brcs	.+48     	; 0x1e2e <__fp_cmp+0x46>
    1dfe:	12 16       	cp	r1, r18
    1e00:	13 06       	cpc	r1, r19
    1e02:	e4 07       	cpc	r30, r20
    1e04:	f5 07       	cpc	r31, r21
    1e06:	98 f0       	brcs	.+38     	; 0x1e2e <__fp_cmp+0x46>
    1e08:	62 1b       	sub	r22, r18
    1e0a:	73 0b       	sbc	r23, r19
    1e0c:	84 0b       	sbc	r24, r20
    1e0e:	95 0b       	sbc	r25, r21
    1e10:	39 f4       	brne	.+14     	; 0x1e20 <__fp_cmp+0x38>
    1e12:	0a 26       	eor	r0, r26
    1e14:	61 f0       	breq	.+24     	; 0x1e2e <__fp_cmp+0x46>
    1e16:	23 2b       	or	r18, r19
    1e18:	24 2b       	or	r18, r20
    1e1a:	25 2b       	or	r18, r21
    1e1c:	21 f4       	brne	.+8      	; 0x1e26 <__fp_cmp+0x3e>
    1e1e:	08 95       	ret
    1e20:	0a 26       	eor	r0, r26
    1e22:	09 f4       	brne	.+2      	; 0x1e26 <__fp_cmp+0x3e>
    1e24:	a1 40       	sbci	r26, 0x01	; 1
    1e26:	a6 95       	lsr	r26
    1e28:	8f ef       	ldi	r24, 0xFF	; 255
    1e2a:	81 1d       	adc	r24, r1
    1e2c:	81 1d       	adc	r24, r1
    1e2e:	08 95       	ret

00001e30 <__fp_mpack>:
    1e30:	9f 3f       	cpi	r25, 0xFF	; 255
    1e32:	31 f0       	breq	.+12     	; 0x1e40 <__fp_mpack_finite+0xc>

00001e34 <__fp_mpack_finite>:
    1e34:	91 50       	subi	r25, 0x01	; 1
    1e36:	20 f4       	brcc	.+8      	; 0x1e40 <__fp_mpack_finite+0xc>
    1e38:	87 95       	ror	r24
    1e3a:	77 95       	ror	r23
    1e3c:	67 95       	ror	r22
    1e3e:	b7 95       	ror	r27
    1e40:	88 0f       	add	r24, r24
    1e42:	91 1d       	adc	r25, r1
    1e44:	96 95       	lsr	r25
    1e46:	87 95       	ror	r24
    1e48:	97 f9       	bld	r25, 7
    1e4a:	08 95       	ret

00001e4c <__fp_norm2>:
    1e4c:	91 50       	subi	r25, 0x01	; 1
    1e4e:	50 40       	sbci	r21, 0x00	; 0
    1e50:	66 0f       	add	r22, r22
    1e52:	77 1f       	adc	r23, r23
    1e54:	88 1f       	adc	r24, r24
    1e56:	d2 f7       	brpl	.-12     	; 0x1e4c <__fp_norm2>
    1e58:	08 95       	ret

00001e5a <__fp_powsodd>:
    1e5a:	9f 93       	push	r25
    1e5c:	8f 93       	push	r24
    1e5e:	7f 93       	push	r23
    1e60:	6f 93       	push	r22
    1e62:	ff 93       	push	r31
    1e64:	ef 93       	push	r30
    1e66:	9b 01       	movw	r18, r22
    1e68:	ac 01       	movw	r20, r24
    1e6a:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__mulsf3>
    1e6e:	ef 91       	pop	r30
    1e70:	ff 91       	pop	r31
    1e72:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fp_powser>
    1e76:	2f 91       	pop	r18
    1e78:	3f 91       	pop	r19
    1e7a:	4f 91       	pop	r20
    1e7c:	5f 91       	pop	r21
    1e7e:	0c 94 35 0e 	jmp	0x1c6a	; 0x1c6a <__mulsf3>

00001e82 <__itoa_ncheck>:
    1e82:	bb 27       	eor	r27, r27
    1e84:	4a 30       	cpi	r20, 0x0A	; 10
    1e86:	31 f4       	brne	.+12     	; 0x1e94 <__itoa_ncheck+0x12>
    1e88:	99 23       	and	r25, r25
    1e8a:	22 f4       	brpl	.+8      	; 0x1e94 <__itoa_ncheck+0x12>
    1e8c:	bd e2       	ldi	r27, 0x2D	; 45
    1e8e:	90 95       	com	r25
    1e90:	81 95       	neg	r24
    1e92:	9f 4f       	sbci	r25, 0xFF	; 255
    1e94:	0c 94 4d 0f 	jmp	0x1e9a	; 0x1e9a <__utoa_common>

00001e98 <__utoa_ncheck>:
    1e98:	bb 27       	eor	r27, r27

00001e9a <__utoa_common>:
    1e9a:	fb 01       	movw	r30, r22
    1e9c:	55 27       	eor	r21, r21
    1e9e:	aa 27       	eor	r26, r26
    1ea0:	88 0f       	add	r24, r24
    1ea2:	99 1f       	adc	r25, r25
    1ea4:	aa 1f       	adc	r26, r26
    1ea6:	a4 17       	cp	r26, r20
    1ea8:	10 f0       	brcs	.+4      	; 0x1eae <__utoa_common+0x14>
    1eaa:	a4 1b       	sub	r26, r20
    1eac:	83 95       	inc	r24
    1eae:	50 51       	subi	r21, 0x10	; 16
    1eb0:	b9 f7       	brne	.-18     	; 0x1ea0 <__utoa_common+0x6>
    1eb2:	a0 5d       	subi	r26, 0xD0	; 208
    1eb4:	aa 33       	cpi	r26, 0x3A	; 58
    1eb6:	08 f0       	brcs	.+2      	; 0x1eba <__utoa_common+0x20>
    1eb8:	a9 5d       	subi	r26, 0xD9	; 217
    1eba:	a1 93       	st	Z+, r26
    1ebc:	00 97       	sbiw	r24, 0x00	; 0
    1ebe:	79 f7       	brne	.-34     	; 0x1e9e <__utoa_common+0x4>
    1ec0:	b1 11       	cpse	r27, r1
    1ec2:	b1 93       	st	Z+, r27
    1ec4:	11 92       	st	Z+, r1
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	0c 94 66 0f 	jmp	0x1ecc	; 0x1ecc <strrev>

00001ecc <strrev>:
    1ecc:	dc 01       	movw	r26, r24
    1ece:	fc 01       	movw	r30, r24
    1ed0:	67 2f       	mov	r22, r23
    1ed2:	71 91       	ld	r23, Z+
    1ed4:	77 23       	and	r23, r23
    1ed6:	e1 f7       	brne	.-8      	; 0x1ed0 <strrev+0x4>
    1ed8:	32 97       	sbiw	r30, 0x02	; 2
    1eda:	04 c0       	rjmp	.+8      	; 0x1ee4 <strrev+0x18>
    1edc:	7c 91       	ld	r23, X
    1ede:	6d 93       	st	X+, r22
    1ee0:	70 83       	st	Z, r23
    1ee2:	62 91       	ld	r22, -Z
    1ee4:	ae 17       	cp	r26, r30
    1ee6:	bf 07       	cpc	r27, r31
    1ee8:	c8 f3       	brcs	.-14     	; 0x1edc <strrev+0x10>
    1eea:	08 95       	ret

00001eec <_exit>:
    1eec:	f8 94       	cli

00001eee <__stop_program>:
    1eee:	ff cf       	rjmp	.-2      	; 0x1eee <__stop_program>
